{
    "project": {
        "name": "xeoengine",
        "description": "A WebGL-based 3D engine from xeoLabs",
        "version": "0.0.1",
        "url": "http://xeoengine.org/",
        "logo": "../files/logo.png"
    },
    "files": {
        "src/core/math/math.js": {
            "name": "src/core/math/math.js",
            "modules": {},
            "classes": {
                "math": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/utils/map.js": {
            "name": "src/core/utils/map.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/webgl/arrayBuffer.js": {
            "name": "src/core/webgl/arrayBuffer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/webgl/attribute.js": {
            "name": "src/core/webgl/attribute.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/webgl/program.js": {
            "name": "src/core/webgl/program.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/webgl/renderBuffer.js": {
            "name": "src/core/webgl/renderBuffer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/webgl/shader.js": {
            "name": "src/core/webgl/shader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/webgl/texture2d.js": {
            "name": "src/core/webgl/texture2d.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/webgl/webgl.js": {
            "name": "src/core/webgl/webgl.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/ambientLight.js": {
            "name": "src/core/ambientLight.js",
            "modules": {},
            "classes": {
                "AmbientLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/boundary.js": {
            "name": "src/core/boundary.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/camera.js": {
            "name": "src/core/camera.js",
            "modules": {},
            "classes": {
                "Camera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/canvas.js": {
            "name": "src/core/canvas.js",
            "modules": {},
            "classes": {
                "Canvas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/clip.js": {
            "name": "src/core/clip.js",
            "modules": {},
            "classes": {
                "Clip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/clips.js": {
            "name": "src/core/clips.js",
            "modules": {},
            "classes": {
                "Clips": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/colorBuf.js": {
            "name": "src/core/colorBuf.js",
            "modules": {},
            "classes": {
                "ColorBuf": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/colorTarget.js": {
            "name": "src/core/colorTarget.js",
            "modules": {},
            "classes": {
                "ColorTarget": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/component.js": {
            "name": "src/core/component.js",
            "modules": {},
            "classes": {
                "Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/configs.js": {
            "name": "src/core/configs.js",
            "modules": {},
            "classes": {
                "Configs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/depthBuf.js": {
            "name": "src/core/depthBuf.js",
            "modules": {},
            "classes": {
                "DepthBuf": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/depthTarget.js": {
            "name": "src/core/depthTarget.js",
            "modules": {},
            "classes": {
                "DepthTarget": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/dirLight.js": {
            "name": "src/core/dirLight.js",
            "modules": {},
            "classes": {
                "DirLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/frustum.js": {
            "name": "src/core/frustum.js",
            "modules": {},
            "classes": {
                "Frustum": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/gameObject.js": {
            "name": "src/core/gameObject.js",
            "modules": {},
            "classes": {
                "GameObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/geometry.js": {
            "name": "src/core/geometry.js",
            "modules": {},
            "classes": {
                "Geometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/input.js": {
            "name": "src/core/input.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/layer.js": {
            "name": "src/core/layer.js",
            "modules": {},
            "classes": {
                "Layer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/lights.js": {
            "name": "src/core/lights.js",
            "modules": {},
            "classes": {
                "Lights": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/lookat.js": {
            "name": "src/core/lookat.js",
            "modules": {},
            "classes": {
                "Lookat": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/material.js": {
            "name": "src/core/material.js",
            "modules": {},
            "classes": {
                "Material": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/modes.js": {
            "name": "src/core/modes.js",
            "modules": {},
            "classes": {
                "Modes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/morphTargets.js": {
            "name": "src/core/morphTargets.js",
            "modules": {},
            "classes": {
                "MorphTargets": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/ortho.js": {
            "name": "src/core/ortho.js",
            "modules": {},
            "classes": {
                "Ortho": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/perspective.js": {
            "name": "src/core/perspective.js",
            "modules": {},
            "classes": {
                "Perspective": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/pointLight.js": {
            "name": "src/core/pointLight.js",
            "modules": {},
            "classes": {
                "PointLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/quaternion.js": {
            "name": "src/core/quaternion.js",
            "modules": {},
            "classes": {
                "Quaternion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/reflect.js": {
            "name": "src/core/reflect.js",
            "modules": {},
            "classes": {
                "Reflect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/rotate.js": {
            "name": "src/core/rotate.js",
            "modules": {},
            "classes": {
                "Rotate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/scale.js": {
            "name": "src/core/scale.js",
            "modules": {},
            "classes": {
                "Scale": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/scene.js": {
            "name": "src/core/scene.js",
            "modules": {},
            "classes": {
                "Scene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/shader.js": {
            "name": "src/core/shader.js",
            "modules": {},
            "classes": {
                "Shader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/shaderParams.js": {
            "name": "src/core/shaderParams.js",
            "modules": {},
            "classes": {
                "ShaderParams": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/stage.js": {
            "name": "src/core/stage.js",
            "modules": {},
            "classes": {
                "Stage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/stats.js": {
            "name": "src/core/stats.js",
            "modules": {},
            "classes": {
                "Stats": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/task.js": {
            "name": "src/core/task.js",
            "modules": {},
            "classes": {
                "Task": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/tasks.js": {
            "name": "src/core/tasks.js",
            "modules": {},
            "classes": {
                "Tasks": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/texture.js": {
            "name": "src/core/texture.js",
            "modules": {},
            "classes": {
                "Texture": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/transform.js": {
            "name": "src/core/transform.js",
            "modules": {},
            "classes": {
                "Transform": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/translate.js": {
            "name": "src/core/translate.js",
            "modules": {},
            "classes": {
                "Translate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/visibility.js": {
            "name": "src/core/visibility.js",
            "modules": {},
            "classes": {
                "Visibility": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/xeo.js": {
            "name": "src/core/xeo.js",
            "modules": {
                "XEO": 1
            },
            "classes": {
                "XEO": 1
            },
            "fors": {},
            "namespaces": {
                "XEO": 1
            }
        }
    },
    "modules": {
        "XEO": {
            "name": "XEO",
            "submodules": {},
            "classes": {
                "math": 1,
                "AmbientLight": 1,
                "Camera": 1,
                "Canvas": 1,
                "Clip": 1,
                "Clips": 1,
                "ColorBuf": 1,
                "ColorTarget": 1,
                "Component": 1,
                "Configs": 1,
                "DepthBuf": 1,
                "DepthTarget": 1,
                "DirLight": 1,
                "Frustum": 1,
                "GameObject": 1,
                "Geometry": 1,
                "Input": 1,
                "Layer": 1,
                "Lights": 1,
                "Lookat": 1,
                "Material": 1,
                "Modes": 1,
                "MorphTargets": 1,
                "Ortho": 1,
                "Perspective": 1,
                "PointLight": 1,
                "Quaternion": 1,
                "Reflect": 1,
                "Rotate": 1,
                "Scale": 1,
                "Scene": 1,
                "Shader": 1,
                "ShaderParams": 1,
                "Stage": 1,
                "Stats": 1,
                "Task": 1,
                "Tasks": 1,
                "Texture": 1,
                "Transform": 1,
                "Translate": 1,
                "Visibility": 1,
                "XEO": 1
            },
            "fors": {},
            "namespaces": {
                "XEO": 1
            },
            "tag": "main",
            "file": "src/core/xeo.js",
            "line": 1,
            "description": "The XeoEngine namespace",
            "static": 1,
            "itemtype": "main"
        }
    },
    "classes": {
        "math": {
            "name": "math",
            "shortname": "math",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/math/math.js",
            "line": 33,
            "description": "Math functions."
        },
        "AmbientLight": {
            "name": "AmbientLight",
            "shortname": "AmbientLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/ambientLight.js",
            "line": 6,
            "description": "An **AmbientLight** defines a light source of fixed intensity and color that affects all attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}\n     equally.\n<ul>\n     <li>AmbientLights are grouped, along with other light source types, within\n     {{#crossLink \"Lights\"}}Lights{{/crossLink}} components, which are attached to {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n     <li>Within xeoEngine's Phong shading calculations, AmbientLight {{#crossLink \"AmbientLight/ambient:property\"}}ambient{{/crossLink}} is\n     multiplied by {{#crossLink \"Material\"}}Material{{/crossLink}} {{#crossLink \"Material/ambient:property\"}}{{/crossLink}}.</li>\n     <li>Ambient lighting may be toggled for specific {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} via\n     the {{#crossLink \"Modes/ambient:property\"}}{{/crossLink}} property on attached {{#crossLink \"Modes\"}}{{/crossLink}} components.</li>\n     </ul>\n<img src=\"http://www.gliffy.com/go/publish/image/7092465/L.png\"></img>\n### Example\nIn this example we have\n<ul>\n     <li>a {{#crossLink \"Material\"}}{{/crossLink}},</li>\n     <li>an AmbientLight,</li>\n     <li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing the AmbientLight,</li>\n     <li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n     <li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n     </ul>\n```` javascript\nvar scene = new XEO.Scene();\n\nvar material = new XEO.Material(scene, {\n        ambient: [0.3, 0.3, 0.3],\n        diffuse: [1, 1, 1],\n        specular: [1.1, 1],\n        shininess: 30\n    });\n\n// Within xeoEngine's lighting calculations, the AmbientLight's\n     // ambient color will be multiplied by the Material's ambient color\nvar ambientLight = new XEO.AmbientLight(scene, {\n        ambient: [0.7, 0.7, 0.7]\n    });\n\nvar lights = new XEO.Lights(scene, {\n        lights: [\n            ambientLight\n        ]\n    });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n        lights: lights,\n        material: material,\n        geometry: geometry\n    });\n````\nAs with all components, we can observe and change properties on AmbientLights like so:\n````Javascript\n     // Attach a change listener to a property\n     var handle = ambientLight.on(\"ambient\",\n     function(value) {\n            // Property value has changed\n     });\nambientLight.ambient = [0.6, 0.6, 0.6]; // Fires the change listener\nambientLight.off(handle); // Detach the change listener\n     ````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this AmbientLight within the\n     default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "AmbientLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this AmbientLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "ambient",
                            "description": "The color of this AmbientLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Camera": {
            "name": "Camera",
            "shortname": "Camera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/camera.js",
            "line": 6,
            "description": "A **Camera** component defines a viewpoint on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n\n<li> A Camera is composed of a viewing transform and a projection transform.</li>\n\n<li>The viewing transform may be a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.</li>\n\n<li>The projection transform may be an {{#crossLink \"Ortho\"}}Ortho{{/crossLink}}, {{#crossLink \"Frustum\"}}Frustum{{/crossLink}}\nor {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.</li>\n\n<li> By default, each Camera gets its parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/view:property\"}}{{/crossLink}},\nwhich is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, and default\n{{#crossLink \"Scene/project:property\"}}{{/crossLink}}, which is a {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.\nYou would override those with your own transform components as necessary.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/6891059/L.png\"></img>\n\n### Example\n\nIn this example we have\n\n<ul>\n<li>a {{#crossLink \"Lookat\"}}{{/crossLink}} view transform,</li>\n<li>a {{#crossLink \"Perspective\"}}{{/crossLink}} projection transform,</li>\n<li>a Camera attached to the {{#crossLink \"Lookat\"}}{{/crossLink}} and {{#crossLink \"Perspective\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar lookat = new XEO.Lookat(scene, {\n   eye: [0,0,-10],\n   look: [0,0,0],\n   up: [0,1,0]\n});\n\nvar perspective = new XEO.Lookat(scene, {\n   fovy: 60,\n   near: 0.1,\n   far: 1000\n});\n\nvar camera = new XEO.Camera(scene, {\n   view: lookat,\n   project: perspective\n});\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n   camera: camera,\n   geometry: geometry\n});\n\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Camera within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\nYou only need to supply an ID if you need to be able to find the Camera by ID within its parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} later.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Camera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "view",
                            "description": "ID or instance of a view transform within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/view:property\"}}{{/crossLink}},\nwhich is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.",
                            "type": "String|XEO.Lookat",
                            "optional": true
                        },
                        {
                            "name": "project",
                            "description": "ID or instance of a projection transform\nwithin the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/project:property\"}}{{/crossLink}},\nwhich is a {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.",
                            "type": "String|XEO.Perspective|XEO.Ortho|XEO.Frustum",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Canvas": {
            "name": "Canvas",
            "shortname": "Canvas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/canvas.js",
            "line": 6,
            "description": "Manages a {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s HTML canvas and its WebGL context.\n\n<ul>\n\n<li>Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} provides a Canvas as a final property on itself.</li>\n\n<li>When a {{#crossLink \"Scene\"}}Scene{{/crossLink}} is configured with the ID of\na <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a> that already\nexists in the document, then the Canvas will bind to that, otherwise the Canvas will automatically create its own.</li>\n\n<li>A Canvas will fire a {{#crossLink \"Canvas/resized:event\"}}{{/crossLink}} event whenever\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a> resizes.</li>\n\n<li>A Canvas is responsible for obtaining a WebGL context from\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a>.</li>\n\n<li>A Canvas also fires a {{#crossLink \"Canvas/webglContextLost:event\"}}{{/crossLink}} event when the WebGL context is\nlost, and a {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} when it is restored again.</li>\n\n<li>The various components within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} will transparently recover on\nthe {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} event.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7103211/L.png\"></img>\n\n### Example\n\nIn the example below, we're creating a {{#crossLink \"Scene\"}}Scene{{/crossLink}} without specifying an HTML canvas element\nfor it. This causes the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s Canvas component to create its own default element\nwithin the page. Then we subscribe to various events fired by that Canvas component.\n\n```` javascript\nvar scene = new XEO.Scene();\n\n// Get the Canvas off the Scene\n// Since we did not configure the Scene with the ID of a DOM canvas element,\n// the Canvas will create its own canvas element in the DOM\nvar canvas = scene.canvas;\n\n// Get the WebGL context off the Canvas\nvar gl = canvas.gl;\n\n// Subscribe to Canvas resize events\ncanvas.on(\"resize\", function(e) {\n   var width = e.width;\n   var height = e.height;\n   var aspect = e.aspect;\n   //...\n});\n\n// Subscribe to WebGL context loss events on the Canvas\ncanvas.on(\"webglContextLost\", function() {\n   //...\n});\n\n// Subscribe to WebGL context restored events on the Canvas\ncanvas.on(\"webglContextRestored\", function(gl) {\n   var newContext = gl;\n   //...\n});\n````\n\nWhen we want to bind the Canvas to an existing HTML canvas element, pass the element's ID into the\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} like this:\n\n```` javascript\n// Create a Scene, this time configuting it with the\n// ID of an existing DOM canvas element\nvar scene = new XEO.Scene({\n     canvasId: \"myCanvas\"\n});\n\n// ..and the rest of this example can be the same as the previous example.\n\n````",
            "static": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent scene",
                    "type": "Scene"
                }
            ],
            "extends": "Component"
        },
        "Clip": {
            "name": "Clip",
            "shortname": "Clip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/clip.js",
            "line": 5,
            "description": "A **Clip** is an arbitrarily-aligned World-space clip plane.\n\n<ul>\n\n<li>These are grouped within {{#crossLink \"Clips\"}}Clips{{/crossLink}} components, which are attached to\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}. See the {{#crossLink \"Clips\"}}Clips{{/crossLink}} documentation\nfor a usage example.</li>\n\n<li>A Clip is specified in World-space, as being perpendicular to a vector {{#crossLink \"Clip/dir:property\"}}{{/crossLink}}\nthat emanates from the origin, offset at a distance {{#crossLink \"Clip/dist:property\"}}{{/crossLink}} along that vector. </li>\n\n<li>You can move a Clip back and forth along its vector by varying {{#crossLink \"Clip/dist:property\"}}{{/crossLink}}.</li>\n\n<li>Likewise, you can rotate a Clip about the origin by rotating {{#crossLink \"Clip/dir:property\"}}{{/crossLink}}.</li>\n\n<li>A Clip is has a {{#crossLink \"Clip/mode:property\"}}{{/crossLink}},  which indicates whether it is disabled\n(\"disabled\"), discarding fragments that fall on the origin-side of the plane (\"inside\"), or clipping fragments that\nfall on the other side of the plane from the origin (\"outside\").</li>\n\n<li>You can update the {{#crossLink \"Clip/mode:property\"}}{{/crossLink}} of a Clip to activate or deactivate it, or to\nswitch which side it discards fragments from.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7096963/L.png\"></img>\n\n### Example\n\n<ul>\n\n<li>In this example we have a {{#crossLink \"GameObject\"}}{{/crossLink}} that's clipped by a {{#crossLink \"Clips\"}}{{/crossLink}}\nthat contains two {{#crossLink \"Clip\"}}{{/crossLink}} planes.</li>\n\n<li>The first {{#crossLink \"Clip\"}}{{/crossLink}} plane is on the\npositive diagonal, while the second is on the negative diagonal.</li>\n\n<li>The {{#crossLink \"GameObject\"}}GameObject's{{/crossLink}}\n{{#crossLink \"Geometry\"}}{{/crossLink}} is the default 2x2x2 box, and the planes will clip off two of the box's corners.</li>\n\n</ul>\n\n````javascript\nvar scene = new XEO.Scene();\n\n// Clip plane on negative diagonal\nvar clip1 = new XEO.Clip(scene, {\n   dir: [-1.0, -1.0, -1.0], // Direction of Clip from World space origin\n   dist: 2.0,               // Distance along direction vector\n   mode: \"outside\"          // Clip fragments that fall beyond the plane\n});\n\n// Clip plane on positive diagonal\nvar clip2 = new XEO.Clip(scene, {\n   dir: [1.0, 1.0, 1.0],\n   dist: 2.0,\n   mode: \"outside\"\n});\n\n// Group the planes in a Clips\nvar clips = new XEO.Clip(scene, {\n   clips: [\n       clip1,\n       clip2\n   ]\n});\n\n// Geometry defaults to a 2x2x2 box\nvar geometry = new XEO.Geometry(scene);\n\n// Create an GameObject, which is a box sliced by our clip planes\nvar object = new XEO.GameObject(scene, {\n   clips: clips,\n   geometry: geometry\n});\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Clip in the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Clip configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\nYou only need to supply an ID if you need to be able to find the Clip by ID within the {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Clip.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "mode",
                            "description": "Clipping mode - \"disabled\" to clip nothing, \"inside\" to reject points inside the plane, \"outside\" to reject points outside the plane.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"disabled\""
                        }
                    ]
                },
                {
                    "name": "dir",
                    "description": "The direction of the clipping plane from the World-space origin.",
                    "type": "Array of Number",
                    "optional": true,
                    "optdefault": " [1, 0, 0]"
                },
                {
                    "name": "dist",
                    "description": "Distance to the clipping plane along the direction vector.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1.0"
                }
            ],
            "extends": "Component"
        },
        "Clips": {
            "name": "Clips",
            "shortname": "Clips",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/clips.js",
            "line": 6,
            "description": "A **Clips** is a group of arbitrarily-aligned {{#crossLink \"Clip\"}}Clip{{/crossLink}} planes that clip fragments of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n\n<li>Each {{#crossLink \"Clip\"}}Clip{{/crossLink}} is specified in World-space, as being perpendicular to a vector\n{{#crossLink \"Clip/dir:property\"}}{{/crossLink}} that emanates from the origin, offset at a\ndistance {{#crossLink \"Clip/dist:property\"}}{{/crossLink}} along that vector. </li>\n\n<li>You can move each {{#crossLink \"Clip\"}}Clip{{/crossLink}} back and forth along its vector by varying\nits {{#crossLink \"Clip/dist:property\"}}{{/crossLink}}.</li>\n\n<li>Likewise, you can rotate each {{#crossLink \"Clip\"}}Clip{{/crossLink}} about the origin by rotating\nits {{#crossLink \"Clip/dir:property\"}}{{/crossLink}}.</li>\n\n<li>Each {{#crossLink \"Clip\"}}Clip{{/crossLink}} is has a {{#crossLink \"Clip/mode:property\"}}{{/crossLink}}, which indicates whether it is disabled (\"disabled\"), discarding fragments that fall on the origin-side of the plane (\"inside\"), or clipping fragments that fall on the other side of the plane from the origin (\"outside\").</li>\n\n<li>You can update each {{#crossLink \"Clip\"}}Clip{{/crossLink}}'s {{#crossLink \"Clip/mode:property\"}}{{/crossLink}} to\nactivate or deactivate it, or to switch which side it discards fragments from.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/6890347/L.png\"></img>\n\n### Example\n\n<ul>\n\n<li>In this example we have a {{#crossLink \"GameObject\"}}{{/crossLink}} that's clipped by a {{#crossLink \"Clips\"}}{{/crossLink}}\nthat contains two {{#crossLink \"Clip\"}}{{/crossLink}} planes.</li>\n\n<li>The first {{#crossLink \"Clip\"}}{{/crossLink}} plane is on the\npositive diagonal, while the second is on the negative diagonal.</li>\n\n<li>The {{#crossLink \"GameObject\"}}GameObject's{{/crossLink}}\n{{#crossLink \"Geometry\"}}{{/crossLink}} is the default 2x2x2 box, and the planes will clip off two of the box's corners.</li>\n\n</ul>\n\n````javascript\nvar scene = new XEO.Scene();\n\n// Clip plane on negative diagonal\nvar clip1 = new XEO.Clip(scene, {\n   dir: [-1.0, -1.0, -1.0], // Direction of Clip from World space origin\n   dist: 2.0,               // Distance along direction vector\n   mode: \"outside\"          // Clip fragments that fall beyond the plane\n});\n\n// Clip plane on positive diagonal\nvar clip2 = new XEO.Clip(scene, {\n   dir: [1.0, 1.0, 1.0],\n   dist: 2.0,\n   mode: \"outside\"\n});\n\n// Group the planes in a Clips\nvar clips = new XEO.Clip(scene, {\n   clips: [\n       clip1,\n       clip2\n   ]\n});\n\n// Geometry defaults to a 2x2x2 box\nvar geometry = new XEO.Geometry(scene);\n\n// Create an GameObject, which is a box sliced by our clip planes\nvar object = new XEO.GameObject(scene, {\n   clips: clips,\n   geometry: geometry\n});\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Clips in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Clips.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "clips",
                            "description": "Array containing either IDs or instances of\n{{#crossLink \"Clip\"}}Clip{{/crossLink}} components within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "Array(String)|Array(XEO.Clip)",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "ColorBuf": {
            "name": "ColorBuf",
            "shortname": "ColorBuf",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/colorBuf.js",
            "line": 6,
            "description": "A **ColorBuf** configures the WebGL color buffer for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n\n<li>A ColorBuf configures **the way** that pixels are written to the WebGL color buffer, and is not to be confused\nwith {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}}, which holds the final pixel colors so that they may be\nfed into {{#crossLink \"Texture\"}}Textures{{/crossLink}}.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7104987/L.png\"></img>\n\n### Example\n\nIn this example we're configuring the WebGL color buffer for a {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\nThe scene contains:\n\n<ul>\n<li>a ColorBuf that enables blending and sets the color mask,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n````javascript\nvar scene = new XEO.Scene();\n\nvar depthBuf = new XEO.ColorTarget(scene, {\n   clearDepth: 0.5,\n   depthFunc: \"less\"\n});\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar gameObject = new XEO.GameObject(scene, {\n   depthBuf: depthBuf,\n   geometry: geometry\n});\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this ColorBuf within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "ColorBuf configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this ColorBuf.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "blendEnabled",
                            "description": "Indicates if blending is enabled.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "colorMask",
                            "description": "The color mask,",
                            "type": "Array of Boolean",
                            "optional": true,
                            "optdefault": "[true, true, true, true]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "ColorTarget": {
            "name": "ColorTarget",
            "shortname": "ColorTarget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/colorTarget.js",
            "line": 6,
            "description": "A **ColorTarget** captures rendered pixel colors of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n<li>A ColorTarget provides the pixel colors as a dynamic color image that may be fed into {{#crossLink \"Texture\"}}Textures{{/crossLink}}.</li>\n<li>ColorTarget is not to be confused with {{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}}, which configures ***how*** the pixel colors are written with respect to the WebGL color buffer.</li>\n<li>Use {{#crossLink \"Stage\"}}Stages{{/crossLink}} when you need to ensure that a ColorTarget is rendered before\nthe {{#crossLink \"Texture\"}}Textures{{/crossLink}} that consume it.</li>\n<li>For special effects, we often use ColorTargets and {{#crossLink \"Texture\"}}Textures{{/crossLink}} in combination\nwith {{#crossLink \"DepthTarget\"}}DepthTargets{{/crossLink}} and {{#crossLink \"Shader\"}}Shaders{{/crossLink}}.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7096829/L.png\"></img>\n\n### Example\n\nIn this example we essentially have one {{#crossLink \"GameObject\"}}{{/crossLink}}\nthat's rendered to a {{#crossLink \"Texture\"}}{{/crossLink}}, which is then applied to a second {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\nThe scene contains:\n\n<ul>\n<li>a ColorTarget,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape,\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} that renders the {{#crossLink \"Geometry\"}}{{/crossLink}} pixel color values to the ColorTarget,</li>\n<li>a {{#crossLink \"Texture\"}}{{/crossLink}} that sources its pixels from the ColorTarget,</li>\n<li>a {{#crossLink \"Material\"}}{{/crossLink}} that includes the {{#crossLink \"Texture\"}}{{/crossLink}}, and</li>\n<li>a second {{#crossLink \"GameObject\"}}{{/crossLink}} that renders the {{#crossLink \"Geometry\"}}{{/crossLink}}, with the {{#crossLink \"Material\"}}{{/crossLink}} applied to it.</li>\n</ul>\n\n\n````javascript\nvar scene = new XEO.Scene();\n\nvar colorTarget = new XEO.ColorTarget(scene);\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar firstGameObject = new XEO.GameObject(scene, {\n   geometry: geometry,\n   colorTarget: colorTarget\n});\n\nvar texture = new XEO.Texture(scene, {\n   target: colorTarget\n});\n\nvar material = new XEO.Material(scene, {\n   textures: [\n      texture\n   ]\n});\n\nvar object2 = new XEO.GameObject(scene, {\n   geometry: geometry,  // Reuse our simple box geometry\n   material: material\n});\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this ColorTarget within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "ColorTarget configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this ColorTarget.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Component": {
            "name": "Component",
            "shortname": "Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/component.js",
            "line": 5,
            "description": "The **Component** class is the base class for all xeoEngine components.\nEvery Component has an ID that's unique within the parent {{#crossLink \"Scene\"}}{{/crossLink}}.\n     <hr>\n     *Contents*\n<Ul>\n     <li><a href=\"#ids\">Component IDs</a></li>\n     <li><a href=\"#componentProps\">Properties</a></li>\n     <li><a href=\"#metadata\">Metadata</a></li>\n     <li><a href=\"#logging\">Logging</a></li>\n     <li><a href=\"#destruction\">Destruction</a></li>\n     </ul>\n     <hr>\n<br>\n### <a name=\"ids\">Component IDs</a>\nEvery Component has an ID that's unique within the parent {{#crossLink \"Scene\"}}{{/crossLink}}.\nxeoEngine generates the IDs automatically by default, however you can also specify them yourself:\n````javascript\n     var scene = new XEO.Scene({\n       id: \"myScene\"\n  });\nvar material = new XEO.Material(scene, {\n        id: \"myMaterial\"\n   });\nvar geometry = new XEO.Geometry(scene, {\n        id: \"myGeometry\"\n  });\nvar object = new XEO.GameObject(scene, {\n        material: material,\n        geometry: geometry\n  });\n     ````\nThen you can find your components like this:\n````javascript\n     var theScene = XEO.scenes[\"myScene\"];\nvar theMaterial = theScene.components[\"myMaterial\"];\n     ````\n<br>\n### <a name=\"componentProps\">Properties</a>\nAlmost every property on a xeoEngine Component fires a change event when you update it.\nFor example, we can subscribe to the {{#crossLink \"Material/diffuse:event\"}}diffuse{{/crossLink}} event that a\n     {{#crossLink \"Material\"}}Material{{/crossLink}} fires when its {{#crossLink \"Material/diffuse:property\"}}diffuse{{/crossLink}}\n     property is updated, like so:\n````javascript\n     // Bind a change callback to a property\n     var handle = material.on(\"diffuse\", function(diffuse) {\n      console.log(\"Material diffuse color has changed to: [\" + diffuse[0] + \", \" + diffuse[1] + \",\" + diffuse[2] + \"]\");\n  });\n// Change the property value, which fires the callback\n     material.diffuse = [ 0.0, 0.5, 0.5 ];\n// Unsubscribe from the property change event\n     material.off(handle);\n     ````\nWe can also subscribe to changes in component structure, since components are properties of other components. For example, we can\n     subscribe to the '{{#crossLink \"GameObject/material:event\"}}material{{/crossLink}}' event that an\n     {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} fires when its {{#crossLink \"GameObject/material:property\"}}material{{/crossLink}}\n     property is linked to a different {{#crossLink \"Material\"}}Material{{/crossLink}}, like so:\n```` javascript\n     // Bind a change callback to the GameObject's Material\n     object1.on(\"material\", function(material) {\n      console.log(\"GameObject's Material has changed to: \" + material.id);\n  });\n// Now replace that Material with another\n     object1.material = new XEO.Material({\n       id: \"myOtherMaterial\",\n       diffuse: [ 0.3, 0.3, 0.6 ]\n       //..\n   });\n     ````\n<br>\n### <a name=\"metadata\">Metadata</a>\nYou can set optional ***metadata*** on your Components, which can be anything you like. These are intended\n     to help manage your components within your application code or content pipeline.\nYou could use metadata to attach authoring or version information, like this:\n````javascript\n     var scene = new XEO.Scene({\n        id: \"myScene\",\n        metadata: {\n            title: \"My awesome 3D scene\",\n            author: \"@xeolabs\",\n     date: \"February 13 2015\"\n     }\n     });\nvar material = new XEO.Material(scene, {\n        id: \"myMaterial\",\n        diffuse: [1, 0, 0],\n        metadata: {\n            description: \"Bright red color with no textures\",\n            version: \"0.1\",\n            foo: \"bar\"\n        }\n   });\n     ````\nAs with all properties, you can subscribe and change the metadata like this:\n````javascript\n     material.on(\"metadata\", function(value) {\n        console.log(\"Metadata changed: \" + JSON.stringify(value));\n });\nmaterial.metadata = {\n        description: \"Bright red color with no textures\",\n        version: \"0.2\",\n        foo: \"baz\"\n };\n     ````\n<br>\n### <a name=\"logging\">Logging</a>\nComponents have methods to log ID-prefixed messages to the JavaScript console:\n````javascript\n     material.log(\"Everything is fine, situation normal.\");\n     material.warn(\"Wait, whats that red light?\");\n     material.error(\"Aw, snap!\");\n     ````\nThe logged messages will look like this:\n````text\n     [LOG]   myMaterial: Everything is fine, situation normal.\n     [WARN]  myMaterial: Wait, whats that red light..\n     [ERROR] myMaterial: Aw, snap!\n````\n<br>\n### <a name=\"destruction\">Destruction</a>\nGet notification of destruction directly on the Components:\n````javascript\n     material.on(\"destroyed\", function() {\n        this.log(\"Component was destroyed: \" + this.id);\n      });\n     ````\nOr get notification of destruction of any Component within its {{#crossLink \"Scene\"}}{{/crossLink}}, indiscriminately:\n````javascript\n     scene.on(\"componentDestroyed\", function(component) {\n        this.log(\"Component was destroyed: \" + component.id);\n });\n     ````\nThen destroy a component like this:\n````javascript\n     material.destroy();\n     ````\nOther Components that are linked to it will fall back on a default of some sort. For example, any\n     {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that were linked to our {{#crossLink \"Material\"}}{{/crossLink}}\n     will then automatically link to the {{#crossLink \"Scene\"}}Scene's{{/crossLink}} default {{#crossLink \"Scene/material:property\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Component\n     within the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "DepthBuf configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Component.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Object"
        },
        "Configs": {
            "name": "Configs",
            "shortname": "Configs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/configs.js",
            "line": 6,
            "description": "Holds configuration properties for the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n<ul>\n\n<li>Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} provides a Configs instance on itself.</li>\n\n<li>A Configs is just a plain {{#crossLink \"Component\"}}{{/crossLink}} with no extras.</li>\n\n<li>Config property values are set on a Configs using its {{#crossLink \"Component/fire:method\"}}{{/crossLink}} method,\nand may be subscribed to with {{#crossLink \"Component/on:method\"}}{{/crossLink}}.</li>\n\n<li>You can define your own properties in a Configs, but take care not to clobber those used by the\n{{#crossLink \"Scene\"}}{{/crossLink}} (see table below).</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7123181/L.png\"></img>\n\n\n### Configurations used by the Scene\n\nDon't use the following names for your own properties, because these are already used by xeoEngine:\n\n| Name  | Description  |\n|---|---|\n| foo  | foo property  |\n| bar  | bar property  |\n\n\n### Example\n\n````Javascript\n\nvar scene = new XEO.Scene();\n\nvar configs = scene.configs;\n\n// Subscribe to change of a Config property.\n// The subscriber is also immediately notified of the current value via the callback.\nconfigs.on(\"foo\", function(value) {\n   console.log(\"foo = \" + value);\n});\n\n// Change a Configs property\nconfigs.fire(\"foo\", \"Hello!\");\n\n// Read the current value of a Configs property.\n// Normally we would asynchronously subscribe with #on though, to be sure that\n// we're getting the latest changes to the property.\nvar bar = configs.props[\"bar\"];\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent scene - creates this component in the default scene when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Config values.",
                    "type": "GameObject",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "DepthBuf": {
            "name": "DepthBuf",
            "shortname": "DepthBuf",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/depthBuf.js",
            "line": 5,
            "description": "A **DepthMap** configures the WebGL depth buffer for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nA DepthBuf configures **the way** that pixel depths are written to the WebGL depth buffer, and is not to be confused\nwith {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}}, which holds the final pixel depths as a color-encoded image\nso that they may be fed into depth {{#crossLink \"Texture\"}}Textures{{/crossLink}}.\n\n<img src=\"http://www.gliffy.com/go/publish/image/7104991/L.png\"></img>\n\n### Example\n\nIn this example we're configuring the WebGL depth buffer for a {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\nThe scene contains:\n\n<ul>\n<li>a DepthBuf that configures the clear depth and depth comparison function,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n````javascript\nvar scene = new XEO.Scene();\n\nvar depthBuf = new XEO.ColorTarget(scene, {\n   clearDepth: 0.5,\n   depthFunc: \"less\"\n});\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar gameObject = new XEO.GameObject(scene, {\n   depthBuf: depthBuf,\n   geometry: geometry\n});\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this DepthBuf\nwithin the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "DepthBuf configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DepthBuf.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "clearDepth",
                            "description": "The clear depth.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "depthFunc",
                            "description": "The depth function.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"less\""
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "DepthTarget": {
            "name": "DepthTarget",
            "shortname": "DepthTarget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/depthTarget.js",
            "line": 5,
            "description": "A **DepthTarget** captures the rendered pixel depths of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n<li>A DepthTarget provides the pixel depths as a dynamic color-encoded image that may be fed into {{#crossLink \"Texture\"}}Textures{{/crossLink}}.</li>\n<li>DepthTarget is not to be confused with {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}}, which configures ***how*** the pixel depths are written with respect to the WebGL depth buffer.</li>\n<li>Use {{#crossLink \"Stage\"}}Stages{{/crossLink}} when you need to ensure that a DepthTarget is rendered before\nthe {{#crossLink \"Texture\"}}Textures{{/crossLink}} that consume it.</li>\n<li>For special effects, we often use DepthTargets and {{#crossLink \"Texture\"}}Textures{{/crossLink}} in combination\nwith {{#crossLink \"ColorTarget\"}}ColorTargets{{/crossLink}} and {{#crossLink \"Shader\"}}Shaders{{/crossLink}}.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/6895849/L.png\"></img>\n\n### Example\n\nIn this example we essentially have one {{#crossLink \"GameObject\"}}{{/crossLink}}\nthat renders its fragment depth values to a {{#crossLink \"Texture\"}}{{/crossLink}}, which is then applied\nto a second {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\n\nThe scene contains:\n\n<ul>\n<li>a DepthTarget,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape,\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} that renders the {{#crossLink \"Geometry\"}}{{/crossLink}} fragment depth values to the DepthTarget,</li>\n<li>a {{#crossLink \"Texture\"}}{{/crossLink}} that sources its pixels from the DepthTarget,</li>\n<li>a {{#crossLink \"Material\"}}{{/crossLink}} that includes the {{#crossLink \"Texture\"}}{{/crossLink}}, and</li>\n<li>a second {{#crossLink \"GameObject\"}}{{/crossLink}} that renders the {{#crossLink \"Geometry\"}}{{/crossLink}}, with the {{#crossLink \"Material\"}}{{/crossLink}} applied to it.</li>\n</ul>\n\nThe pixel colours in the DepthTarget will be depths encoded into RGBA, so will look a little weird when applied directly to the second\n{{#crossLink \"GameObject\"}}{{/crossLink}} as a {{#crossLink \"Texture\"}}{{/crossLink}}. In practice the {{#crossLink \"Texture\"}}{{/crossLink}}\nwould carry the depth values into a custom {{#crossLink \"Shader\"}}{{/crossLink}}, which would then be applied to the second {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\n````javascript\nvar scene = new XEO.Scene();\n\n\nvar geometry = new XEO.Geometry(scene); // Default to a 2x2x2 box.\n\n\nvar depthTarget = new XEO.DepthTarget(scene);\n\n\nvar object1 = new XEO.GameObject(scene, {\n   depthTarget: depthTarget\n});\n\nvar texture = new XEO.Texture(scene, {\n   target: depthTarget\n});\n\n\nvar material = new XEO.Material(scene, {\n   textures: [\n       texture\n   ]\n});\n\n\nvar object2 = new XEO.GameObject(scene, {\n   geometry: geometry,  // Reuse our simple box geometry\n   material: material\n});\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this DepthTarget within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "DepthTarget configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DepthTarget.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "DirLight": {
            "name": "DirLight",
            "shortname": "DirLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/dirLight.js",
            "line": 6,
            "description": "A **DirLight** is a light source that illuminates all attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} equally\nfrom a given direction.\n\n<ul>\n\n<li>DirLights are grouped, along with other light source types, within {{#crossLink \"Lights\"}}Lights{{/crossLink}} components,\nwhich are attached to {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n<li>Within xeoEngine's Phong lighting calculations, DirLight {{#crossLink \"DirLight/diffuse:property\"}}{{/crossLink}} and\n{{#crossLink \"DirLight/specular:property\"}}{{/crossLink}} are multiplied by {{#crossLink \"Material\"}}Material{{/crossLink}}\n{{#crossLink \"Material/diffuse:property\"}}{{/crossLink}} and {{#crossLink \"Material/specular:property\"}}{{/crossLink}},\nrespectively.</li>\n\n<li>Diffuse, specular and ambient lighting may also be enabled or disabled for specific {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}\nvia {{#crossLink \"Modes/diffuse:property\"}}{{/crossLink}}, {{#crossLink \"Modes/diffuse:property\"}}{{/crossLink}}\nand {{#crossLink \"Modes/ambient:property\"}}{{/crossLink}} flags on {{#crossLink \"Modes\"}}Modes{{/crossLink}} components.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7096639/L.png\"></img>\n\n### Example\n\nIn this example we have\n\n<ul>\n<li>a {{#crossLink \"material\"}}{{/crossLink}},</li>\n<li>a DirLight,</li>\n<li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing the DirLight,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar material = new XEO.Material(scene, {\n    ambient:    [0.3, 0.3, 0.3],\n    diffuse:    [0.7, 0.7, 0.7],\n    specular:   [1. 1, 1],\n    shininess:  30\n });\n\nvar dirLight = new XEO.DirLight(scene, {\n    dir:        [-1, -1, -1],\n    diffuse:    [0.5, 0.7, 0.5],\n    specular:   [1.0, 1.0, 1.0],\n    space:      \"view\"\n });\n\nvar lights = new XEO.Lights(scene, {\n    lights: [\n   dirLight\n    ]\n });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n    lights: lights,\n    material: material,\n    geometry: geometry\n });\n````\n\nAs with all components, we can <a href=\"XEO.Component.html#changeEvents\" class=\"crosslink\">observe and change properties</a> on DirLights like so:\n\n````Javascript\n\n// Attach a change listener to a property\nvar handle = dirLight.on(\"diffuse\",\n   function(value) {\n       // Property value has changed\n   });\n\ndirLight.diffuse = [0.0, 0.3, 0.3]; // Fires the change listener\n\ndirLight.off(handle); // Detach the change listener\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this DirLight within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The DirLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DirLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "dir",
                            "description": "A unit vector indicating the direction of illumination, given in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[1.0, 1.0, 1.0]"
                        },
                        {
                            "name": "diffuse",
                            "description": "The diffuse color of this DirLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "specular",
                            "description": "The specular color of this DirLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system the DirLight is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Frustum": {
            "name": "Frustum",
            "shortname": "Frustum",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/frustum.js",
            "line": 5,
            "description": "A **Frustum** defines a perspective projection as a frustum-shaped view volume.\n\n{{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with viewing transform components, such as\n{{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, to define viewpoints for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<img src=\"http://www.gliffy.com/go/publish/image/7103657/L.png\"></img>\n\n### Example\n\nIn this example we have a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that's attached to a\n{{#crossLink \"Camera\"}}Camera{{/crossLink}} that has a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} view transform and a Frustum\nprojection transform.\n\n````Javascript\nvar scene = new XEO.Scene(engine);\n\nvar frustum = new XEO.Frustum(scene, {\n   left:       1.0,    // Position of the left plane on the View-space X-axis\n   right:      1.0,    // Position of the right plane on the View-space X-axis\n   top:        1.0,    // Position of the top plane on the View-space Y-axis.\n   bottom :   -1.0,    // Position of the bottom plane on the View-space Y-axis.\n   near:       0.1,    // Position of the near plane on the View-space Z-axis.\n   far:        10000   // Position of the far plane on the positive View-space Z-axis.\n});\n\nvar camera = new XEO.Camera(scene, {\n   project: frustum\n});\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n   camera: camera,\n   geometry: geometry\n});\n\n// Subscribe to changes on a property of our Frustum component\nfrustum.on(\"near\", function(value) {\n   console.log(\"Frustum 'near' updated: \" + value);\n});\n\n// Set the value of a property on our Frustum component, which fires the event we just subscribed to\nfrustum.near = 45.0;\n\n// Get the value of a property on our Frustum component\nvar value = frustum.near;\n\n// Destroy ths Frustum component, causing the camera to fall back on the scene's default projection transform\nfrustum.destroy();\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Frustum within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Frustum.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "left",
                            "description": "Position of the left plane on the View-space X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1"
                        },
                        {
                            "name": "right",
                            "description": "Position of the right plane on the View-space X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "top",
                            "description": "Position of the top plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "bottom",
                            "description": "Position of the bottom plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1"
                        },
                        {
                            "name": "near",
                            "description": "Position of the near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the far plane on the positive View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1000"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "GameObject": {
            "name": "GameObject",
            "shortname": "GameObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/gameObject.js",
            "line": 6,
            "description": "A **GameObject** is an entity within a xeoEngine {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n<ul>\n<li>See the {{#crossLink \"Scene\"}}Scene{{/crossLink}} class for more information on GameObjects.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7122967/L.png\"></img>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this GameObject within xeoEngine's default {{#crossLink \"XEO/scene:property\"}}scene{{/crossLink}} by default.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this GameObject.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "ID or instance of a {{#crossLink \"Camera\"}}Camera{{/crossLink}} to attach to this GameObject.  Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}}.",
                            "type": "String|Camera",
                            "optional": true
                        },
                        {
                            "name": "clips",
                            "description": "ID or instance of a {{#crossLink \"Clips\"}}Clips{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/clips:property\"}}clips{{/crossLink}}.",
                            "type": "String|Clips",
                            "optional": true
                        },
                        {
                            "name": "colorTarget",
                            "description": "ID or instance of a {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/colorTarget:property\"}}colorTarget{{/crossLink}}.",
                            "type": "String|ColorTarget",
                            "optional": true
                        },
                        {
                            "name": "depthTarget",
                            "description": "ID or instance of a {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/depthTarget:property\"}}depthTarget{{/crossLink}}.",
                            "type": "String|DepthTarget",
                            "optional": true
                        },
                        {
                            "name": "depthBuf",
                            "description": "ID or instance of a {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, depth {{#crossLink \"Scene/depthBuf:property\"}}depthBuf{{/crossLink}}.",
                            "type": "String|DepthBuf",
                            "optional": true
                        },
                        {
                            "name": "visibility",
                            "description": "ID or instance of a {{#crossLink \"Visibility\"}}Visibility{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/visibility:property\"}}visibility{{/crossLink}}.",
                            "type": "String|Visibility",
                            "optional": true
                        },
                        {
                            "name": "modes",
                            "description": "ID or instance of a {{#crossLink \"Modes\"}}Modes{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/modes:property\"}}modes{{/crossLink}}.",
                            "type": "String|Modes",
                            "optional": true
                        },
                        {
                            "name": "geometry",
                            "description": "ID or instance of a {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/geometry:property\"}}geometry{{/crossLink}}, which is a 2x2x2 box.",
                            "type": "String|Geometry",
                            "optional": true
                        },
                        {
                            "name": "layer",
                            "description": "ID or instance of a {{#crossLink \"Layer\"}}Layer{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/layer:property\"}}layer{{/crossLink}}.",
                            "type": "String|Layer",
                            "optional": true
                        },
                        {
                            "name": "lights",
                            "description": "ID or instance of a {{#crossLink \"Lights\"}}Lights{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/lights:property\"}}lights{{/crossLink}}.",
                            "type": "String|Lights",
                            "optional": true
                        },
                        {
                            "name": "material",
                            "description": "ID or instance of a {{#crossLink \"Material\"}}Material{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance, {{#crossLink \"Scene/material:property\"}}material{{/crossLink}}.",
                            "type": "String|Material",
                            "optional": true
                        },
                        {
                            "name": "morphTargets",
                            "description": "ID or instance of a {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault instance, {{#crossLink \"Scene/morphTargets:property\"}}morphTargets{{/crossLink}}.",
                            "type": "String|MorphTargets",
                            "optional": true
                        },
                        {
                            "name": "reflect",
                            "description": "ID or instance of a {{#crossLink \"CubeMap\"}}CubeMap{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/reflect:property\"}}reflection{{/crossLink}}.",
                            "type": "String|Reflect",
                            "optional": true
                        },
                        {
                            "name": "shader",
                            "description": "ID or instance of a {{#crossLink \"Shader\"}}Shader{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/shader:property\"}}shader{{/crossLink}}.",
                            "type": "String|Shader",
                            "optional": true
                        },
                        {
                            "name": "shaderParams",
                            "description": "ID or instance of a {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/shaderParams:property\"}}shaderParams{{/crossLink}}.",
                            "type": "String|ShaderParams",
                            "optional": true
                        },
                        {
                            "name": "stage",
                            "description": "ID or instance of of a {{#crossLink \"Stage\"}}Stage{{/crossLink}} to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/stage:property\"}}stage{{/crossLink}}.",
                            "type": "String|Stage",
                            "optional": true
                        },
                        {
                            "name": "transform",
                            "description": "ID or instance of a modelling transform to attach to this GameObject. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default instance,\n{{#crossLink \"Scene/transform:property\"}}transform{{/crossLink}} (which is an identity matrix which performs no transformation).",
                            "type": "String|Transform",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Geometry": {
            "name": "Geometry",
            "shortname": "Geometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/geometry.js",
            "line": 6,
            "description": "A **Geometry** defines the geometric shape of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<img src=\"http://www.gliffy.com/go/publish/image/7103669/L.png\"></img>\n\n### Example 1\n\nIf you create a Geometry with no specified shape, it will be a 2x2x2 box by default:\n\n```` javascript\nvar geometry = new XEO.Geometry(scene); // 2x2x2 box\n\nvar object2 = new XEO.GameObject(scene, {\n   geometry: geometry\n});\n````\n\n### Example 2\n\nIf you create a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} with no Geometry, it will inherit its {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/geometry:property\"}}{{/crossLink}}, which is also a 2x2x2 box:\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar object1 = new XEO.GameObject(scene);\n````\n\n### Example 3\n\nFinally, we'll create a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} with a Geometry that we have **explicitly**\nconfigured to be a 2x2x2 box:\n\n```` javascript\n// Create a 2x2x2 box centered at the World-space origin\nvar geometry2 = new XEO.Geometry(scene, {\n\n   // Supported primitives are 'points', 'lines', 'line-loop', 'line-strip', 'triangles',\n   // 'triangle-strip' and 'triangle-fan'.primitive: \"triangles\",\n   primitive: \"triangles\",\n\n   // Vertex positions\n   positions : [\n       // Front face\n       -1.0, -1.0, 1.0,\n       1.0, -1.0, 1.0,\n       1.0, 1.0, 1.0,\n       -1.0, 1.0, 1.0,\n\n       // Back face\n       -1.0, -1.0, -1.0,\n       -1.0, 1.0, -1.0,\n        1.0, 1.0, -1.0,\n       1.0, -1.0, -1.0,\n\n       // Top face\n       -1.0, 1.0, -1.0,\n       -1.0, 1.0, 1.0,\n       1.0, 1.0, 1.0,\n       1.0, 1.0, -1.0,\n\n       // Bottom face\n       -1.0, -1.0, -1.0,\n       1.0, -1.0, -1.0,\n       1.0, -1.0, 1.0,\n       -1.0, -1.0, 1.0,\n\n       // Right face\n       1.0, -1.0, -1.0,\n       1.0, 1.0, -1.0,\n       1.0, 1.0, 1.0,\n       1.0, -1.0, 1.0,\n\n       // Left face\n       -1.0, -1.0, -1.0,\n       -1.0, -1.0, 1.0,\n       -1.0, 1.0, 1.0,\n       -1.0, 1.0, -1.0\n   ],\n\n   // Vertex colors\n   colors: [\n       1.0,  1.0,  1.0,  1.0,    // Front face: white\n       1.0,  0.0,  0.0,  1.0,    // Back face: red\n       0.0,  1.0,  0.0,  1.0,    // Top face: green\n       0.0,  0.0,  1.0,  1.0,    // Bottom face: blue\n       1.0,  1.0,  0.0,  1.0,    // Right face: yellow\n       1.0,  0.0,  1.0,  1.0     // Left face: purple\n   ],\n\n   // Vertex normals\n   normals: [\n       0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n       1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,\n       0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n       -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0,\n       0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0,\n       0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1\n   ],\n\n   // UV coordinates\n   uv: [\n       1, 1, 0, 1, 0, 0, 1, 0,\n       0, 1, 0, 0, 1, 0, 1, 1,\n       1, 0, 1, 1, 0, 1, 0, 0,\n       1, 1, 0, 1, 0, 0, 1, 0,\n       0, 0, 1, 0, 1, 1, 0, 1,\n       0, 0, 1, 0, 1, 1, 0, 1\n   ],\n\n   // Triangle indices\n   indices: [\n       0,  1,  2,      0,  2,  3,    // front\n       4,  5,  6,      4,  6,  7,    // back\n       8,  9,  10,     8,  10, 11,   // top\n       12, 13, 14,     12, 14, 15,   // bottom\n       16, 17, 18,     16, 18, 19,   // right\n       20, 21, 22,     20, 22, 23    // left\n   ]\n  });\n\nvar object = new XEO.GameObject(myScene, {\n   geometry: geometry2\n  });\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Geometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}},\ngenerated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Geometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "positions",
                            "description": "Positions array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "normals",
                            "description": "Normals array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "uv",
                            "description": "UVs array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "uv2",
                            "description": "Second UVs array, for a second UV level.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "colors",
                            "description": "Vertex colors.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "indices",
                            "description": "Indices array.",
                            "type": "Array of Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/input.js",
            "line": 6,
            "description": "Publishes any key and mouse events that occur on the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n<img src=\"http://www.gliffy.com/go/publish/image/7123123/L.png\"></img>\n\n### Example\n\n````javascript\nvar myScene = new XEO.Scene();\n\nvar input = myScene.input;\n\ninput.on(\"mousedown\", function(coords) {\n   console.log(\"Mouse down at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseup\", function(coords) {\n  console.log(\"Mouse up at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseclicked\", function(coords) {\n  console.log(\"Mouse clicked at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"dblclick\", function(coords) {\n  console.log(\"Double-click at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"keydown\", function(keyCode) {\n   switch (keyCode) {\n\n       case this.KEY_A:\n          console.log(\"The 'A' key is down\");\n          break;\n\n       case this.KEY_B:\n          console.log(\"The 'B' key is down\");\n          break;\n\n       case this.KEY_C:\n          console.log(\"The 'C' key is down\");\n          break;\n\n       default:\n          console.log(\"Some other key is down\");\n  }\n});\n\ninput.on(\"keyup\", function(keyCode) {\n   switch (keyCode) {\n\n       case this.KEY_A:\n          console.log(\"The 'A' key is up\");\n          break;\n\n       case this.KEY_B:\n          console.log(\"The 'B' key is up\");\n          break;\n\n       case this.KEY_C:\n          console.log(\"The 'C' key is up\");\n          break;\n\n       default:\n          console.log(\"Some other key is up\");\n   }\n});\n\n// TODO: ALT and CTRL keys etc\n````",
            "is_constructor": 1,
            "extends": "Component"
        },
        "Layer": {
            "name": "Layer",
            "shortname": "Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/layer.js",
            "line": 6,
            "description": "A **Layer** specifies the render order of {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within their {{#crossLink \"Stage\"}}Stages{{/crossLink}}.\n\n<ul>\n<li>When the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} renders, each {{#crossLink \"Stage\"}}Stage{{/crossLink}} will render its bin\nof {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} in turn, from the lowest priority {{#crossLink \"Stage\"}}Stage{{/crossLink}} to the highest.</li>\n\n<li>{{#crossLink \"Stage\"}}Stages{{/crossLink}} are typically used for ordering the render-to-texture steps in posteffects pipelines.</li>\n\n<li>You can control the render order of the individual {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} ***within*** a {{#crossLink \"Stage\"}}Stage{{/crossLink}}\nby associating them with {{#crossLink \"Layer\"}}Layers{{/crossLink}}.</li>\n\n<li>{{#crossLink \"Layer\"}}Layers{{/crossLink}} are typically used to <a href=\"https://www.opengl.org/wiki/Transparency_Sorting\" target=\"_other\">transparency-sort</a> the\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within {{#crossLink \"Stage\"}}Stages{{/crossLink}}.</li>\n\n\n<li>{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} not explicitly attached to a Layer are implicitly\nattached to the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default\n{{#crossLink \"Scene/layer:property\"}}layer{{/crossLink}}. which has\na {{#crossLink \"Layer/priority:property\"}}{{/crossLink}} value of zero.</li>\n\n<li>You can use Layers without defining any {{#crossLink \"Stage\"}}Stages{{/crossLink}} if you simply let your\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} fall back on the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default\n{{#crossLink \"Scene/stage:property\"}}stage{{/crossLink}}. which has a {{#crossLink \"Stage/priority:property\"}}{{/crossLink}} value of zero.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7105071/L.png\"></img>\n\n### Example\n\n````javascript\n\nTODO\n\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Geometry in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Layer.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "priority",
                            "description": "The rendering priority,",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Lights": {
            "name": "Lights",
            "shortname": "Lights",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/lights.js",
            "line": 6,
            "description": "A **Lights** is a group of light sources to apply to attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nA Lights may contain a virtually unlimited number of three types of light source:\n\n<ul>\n<li>{{#crossLink \"AmbientLight\"}}AmbientLight{{/crossLink}}s, which are fixed-intensity and fixed-color, and\naffect all the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} equally,</li>\n<li>{{#crossLink \"PointLight\"}}PointLight{{/crossLink}}s, which emit light that\noriginates from a single point and spreads outward in all directions, and </li>\n<li>{{#crossLink \"DirLight\"}}DirLight{{/crossLink}}s, which illuminate all the\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} equally from a given direction</li>\n</ul>\n\nWithin xeoEngine's <a href=\"http://en.wikipedia.org/wiki/Phong_reflection_model\">Phong</a> reflection model, the ambient,\ndiffuse and specular components of light sources are multiplied by the\n{{#crossLink \"Material/ambient:property\"}}{{/crossLink}}, {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}} and\n{{#crossLink \"Material/specular:property\"}}{{/crossLink}} properties on attached  {{#crossLink \"Material\"}}Materials{{/crossLink}}.\n\n\n<img src=\"http://www.gliffy.com/go/publish/image/7092459/L.png\"></img>\n\n### Example\n\nIn this example we have a {{#crossLink \"GameObject\"}}{{/crossLink}} that has a {{#crossLink \"Geometry\"}}{{/crossLink}},\na {{#crossLink \"Material\"}}{{/crossLink}} and a {{#crossLink \"Lights\"}}{{/crossLink}}. The {{#crossLink \"Lights\"}}{{/crossLink}}\ncontains an {{#crossLink \"AmbientLight\"}}{{/crossLink}}, a {{#crossLink \"DirLight\"}}{{/crossLink}} and a {{#crossLink \"PointLight\"}}{{/crossLink}}.\n\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar material = new XEO.Material(scene, {\n   ambient:    [0.3, 0.3, 0.3],\n   diffuse:    [0.7, 0.7, 0.7],\n   specular:   [1. 1, 1],\n   shininess:  30\n    });\n\n// Within xeoEngine's lighting calculations, the AmbientLight's ambient color\n// will be multiplied by the Material's ambient color, while the DirLight and PointLight's\n// diffuse and specular colors will be multiplied by the Material's diffuse and specular colors\n\nvar ambientLight = new XEO.AmbientLight(scene, {\n   ambient: [0.7, 0.7, 0.7]\n    });\n\nvar dirLight = new XEO.DirLight(scene, {\n   dir:        [-1, -1, -1],\n   diffuse:    [0.5, 0.7, 0.5],\n   specular:   [1.0, 1.0, 1.0],\n   space:      \"view\"\n    });\n\nvar pointLight = new XEO.PointLight(scene, {\n   pos: [0, 100, 100],\n   diffuse: [0.5, 0.7, 0.5],\n   specular: [1.0, 1.0, 1.0],\n   constantAttenuation: 0,\n   linearAttenuation: 0,\n   quadraticAttenuation: 0,\n   space: \"view\"\n    });\n\nvar lights = new XEO.Lights(scene, {\n   lights: [\n       ambientLight,\n       dirLight,\n       pointLight\n   ]\n    });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n   lights: lights,\n   material: material,\n   geometry: geometry\n    });\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Lights in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Lights.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Lookat": {
            "name": "Lookat",
            "shortname": "Lookat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/lookat.js",
            "line": 5,
            "description": "A **Lookat** defines a viewing transform as an {{#crossLink \"Lookat/eye:property\"}}eye{{/crossLink}} position, a\n{{#crossLink \"Lookat/look:property\"}}look{{/crossLink}} position and an {{#crossLink \"Lookat/up:property\"}}up{{/crossLink}}\nvector.\n\n<ul>\n<li>{{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with projection transforms such as\n{{#crossLink \"Perspective\"}}Perspective{{/crossLink}}, to define viewpoints on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/6895163/L.png\"></img>\n\n### Example\n\nIn this example we have a Lookat that positions the eye at -10 on the World-space Z-axis, while looking at the origin.\nThen we'll add that to a {{#crossLink \"Camera\"}}{{/crossLink}}. which we associate with a {{#crossLink \"GameObject\"}}{{/crossLink}}.\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar myLookat = new XEO.Lookat(scene, {\n   eye: [0,0,-10],\n   look: [0,0,0],\n   up: [0,1,0]\n    });\n\nvar camera = new XEO.Camera(scene, {\n   view: myLookat\n    });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n   camera: camera,\n   geometry: geometry\n    });\n\n// Subscribe to changes on a camera property\nlookat.on(\"eye\", function(value) {\n   console.log(\"eye updated: \" + value[0] + \", \" + value[1] + \", \" + value[2]);\n    });\n\n// Set the value of a camera property, which fires the event we just subscribed to\nlookat.eye = [-5, 0, -10];\n\n// Get the value of a camera property\nvar value = lookat.eye;\n\n// Destroy ths lookat, causing the camera to fall back on the scene's default viewing transform\nlookat.destroy();\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Lookat in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Lookat.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "eye",
                            "description": "Eye position.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,-10]"
                        },
                        {
                            "name": "look",
                            "description": "The position of the point-of-interest we're looking at.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "up",
                            "description": "The \"up\" vector.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,1,0]"
                        }
                    ]
                }
            ],
            "extends": "Component",
            "author": "xeolabs / http://xeolabs.com/"
        },
        "Material": {
            "name": "Material",
            "shortname": "Material",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/material.js",
            "line": 6,
            "description": "A **Material** defines the surface appearance of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n<li>Materials interact with {{#crossLink \"Lights\"}}{{/crossLink}} using the <a href=\"http://en.wikipedia.org/wiki/Phong_reflection_model\">Phong</a> reflection model.</li>\n\n<li>Within xeoEngine's shading calculations, a Material's {{#crossLink \"Material/ambient:property\"}}{{/crossLink}}, {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}} and\n{{#crossLink \"Material/specular:property\"}}{{/crossLink}} properties are multiplied by corresponding color properties on attached\n{{#crossLink \"PointLight\"}}AmbientLights{{/crossLink}}, {{#crossLink \"PointLight\"}}PointLights{{/crossLink}} and {{#crossLink \"DirLight\"}}DirLights{{/crossLink}}.</li>\n\n<li>These Material properties, along with {{#crossLink \"Material/emissive:property\"}}{{/crossLink}},\n{{#crossLink \"Material/opacity:property\"}}{{/crossLink}} and {{#crossLink \"Material/reflectivity:property\"}}{{/crossLink}},\nspecify attributes that are to be **applied uniformly** across the surface of attached {{#crossLink \"Geometry\"}}Geometries{{/crossLink}}.</li>\n\n<li>Most of those attributes can be textured, **effectively replacing the values set for those properties**, by\nassigning {{#crossLink \"Texture\"}}Textures{{/crossLink}} to the Material's\n{{#crossLink \"Material/diffuseMap:property\"}}{{/crossLink}}, {{#crossLink \"Material/specularMap:property\"}}{{/crossLink}},\n{{#crossLink \"Material/emissiveMap:property\"}}{{/crossLink}}, {{#crossLink \"Material/opacityMap:property\"}}{{/crossLink}}\nand  {{#crossLink \"Material/reflectivityMap:property\"}}{{/crossLink}} properties</li>\n\n<li>For example, the value of {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}} will be ignored if your\nMaterial also has a {{#crossLink \"Material/diffuseMap:property\"}}{{/crossLink}} set to a {{#crossLink \"Texture\"}}Texture{{/crossLink}}.\nThe {{#crossLink \"Texture\"}}Texture's{{/crossLink}} pixel colors directly provide the diffuse color of each fragment across the\n{{#crossLink \"Geometry\"}}{{/crossLink}} surface, ie. they are not multiplied by\nthe {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}} for each pixel, as is done in many shading systems.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/6921713/L.png\"></img>\n\n### Example\n\nIn this example we have\n\n<ul>\n<li>a {{#crossLink \"Texture\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"Material\"}}{{/crossLink}} which applies the {{#crossLink \"Texture\"}}{{/crossLink}} as a diffuse map,</li>\n<li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing an {{#crossLink \"AmbientLight\"}}{{/crossLink}} and a {{#crossLink \"DirLight\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\nNote that the value for the {{#crossLink \"Material\"}}Material's{{/crossLink}} {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}}\nproperty is ignored and redundant, since we assign a {{#crossLink \"Texture\"}}{{/crossLink}} to the\n{{#crossLink \"Material\"}}Material's{{/crossLink}} {{#crossLink \"Material/diffuseMap:property\"}}{{/crossLink}} property.\nThe {{#crossLink \"Texture\"}}Texture's{{/crossLink}} pixel colors directly provide the diffuse color of each fragment across the\n{{#crossLink \"Geometry\"}}{{/crossLink}} surface.\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar diffuseMap = new XEO.Texture(scene, {\n   src: \"diffuseMap.jpg\"\n});\n\nvar material = new XEO.Material(scene, {\n   ambient:    [0.3, 0.3, 0.3],\n   diffuse:    [0.5, 0.5, 0.0],   // Ignored, since we have assigned a Texture to diffuseMap, below\n   diffuseMap: diffuseMap,\n   specular:   [1. 1, 1],\n   shininess:  30\n});\n\nvar ambientLight = new XEO.AmbientLight(scene, {\n   ambient: [0.7, 0.7, 0.7]\n});\n\nvar dirLight = new XEO.DirLight(scene, {\n   dir:        [-1, -1, -1],\n   diffuse:    [0.5, 0.7, 0.5],\n   specular:   [1.0, 1.0, 1.0],\n   space:      \"view\"\n});\n\nvar lights = new XEO.Lights(scene, {\n   lights: [\n       ambientLight,\n       dirLight\n   ]\n});\n\nvar geometry = new XEO.Geometry(scene); // Geometry without parameters will default to a 2x2x2 box.\n\nvar object = new XEO.GameObject(scene, {\n   lights: lights,\n   material: material,\n   geometry: geometry\n});\n````",
            "is_constructor": 1,
            "extends": "Component",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Material within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The Material configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Metadata to attach to this Material.",
                            "type": "String:Object",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "ambient",
                            "description": "Material ambient color. Multiplied by {{#crossLink \"AmbientLight\"}}AmbientLight{{/crossLink}} {{#crossLink \"AmbientLight/ambient:property\"}}color{{/crossLink}}.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "diffuse",
                            "description": "Material diffuse color. Multiplied by {{#crossLink \"PointLight\"}}PointLight{{/crossLink}} {{#crossLink \"PointLight/diffuse:property\"}}diffuse{{/crossLink}} and {{#crossLink \"DirLight\"}}DirLight{{/crossLink}} {{#crossLink \"DirLight/diffuse:property\"}}diffuse{{/crossLink}}",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "specular",
                            "description": "Material specular color. Multiplied by {{#crossLink \"PointLight\"}}PointLight{{/crossLink}} {{#crossLink \"PointLight/specular:property\"}}specular{{/crossLink}} and {{#crossLink \"DirLight\"}}DirLight{{/crossLink}} {{#crossLink \"DirLight/specular:property\"}}specular{{/crossLink}}",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "emissive",
                            "description": "Material emissive color.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "opacity",
                            "description": "Scalar in range 0-1 that controls opacity, where 0 is completely transparent and 1 is completely opaque.\nOnly applies while {{#crossLink \"Modes\"}}Modes{{/crossLink}} {{#crossLink \"Modes/transparent:property\"}}transparent{{/crossLink}} equals ````true````.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "shininess",
                            "description": "Scalar in range 0-70 that determines the size and sharpness of specular highlights.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "30"
                        },
                        {
                            "name": "reflectivity",
                            "description": "Scalar in range 0-1 that controls how much {{#crossLink \"CubeMap\"}}CubeMap{{/crossLink}} is reflected.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "diffuseMap",
                            "description": "A diffuse map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the diffuse property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Material.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "specularMap",
                            "description": "A specular map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the specular property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Material.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "emissiveMap",
                            "description": "An emissive map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the emissive property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Material.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "bumpMap",
                            "description": "A bump map {{#crossLink \"Texture\"}}Texture{{/crossLink}}. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Material.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "opacityMap",
                            "description": "An opacity map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the opacity property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Material.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "reflectivityMap",
                            "description": "A reflectivity control map {{#crossLink \"Texture\"}}Texture{{/crossLink}}, which will override the effect of the reflectivity property. Must be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this Material.",
                            "type": "Texture",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "Modes": {
            "name": "Modes",
            "shortname": "Modes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/modes.js",
            "line": 6,
            "description": "A **Modes** toggles xeoEngine's rendering modes for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n\n<li>Though the rendering modes are defined by various different components attached to the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}},\nModes components provide a single point through which you can toggle them on or off.</li>\n\n<li>A Modes may be shared among multiple {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to toggle\nrendering modes for them as a group.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7123073/L.png\"></img>\n\n### Example\n\nIn this example we have a Modes that toggles rendering modes for\ntwo {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}. The properties of the Modes are initialised to their\ndefault values.\n\n````javascript\n\n// Create a scene\nvar scene = new XEO.Scene();\n\n// Create a Modes with default properties\nvar modes = new XEO.Modes(scene, {\n   picking: true,              // Enable picking\n   clipping true,              // Enable effect of XEO.Clip components\n   transparent : false,        // Disable transparency\n   backfaces : true,           // Render backfaces\n   frontface : \"ccw\",          // Frontfaces have counter-clockwise vertex\n   backfaceLighting : true,    // Enable backface lighting\n   backfaceTexturing : true,   // Enable backfaces texturing\n   diffuse : true,             // Enable diffuse lighting\n   specular : true,            // Enable specular lighting\n   ambient : true,             // Enable ambient lighting\n   reflection : true           // Enable reflections\n  });\n\n// Create two GameObjects whose rendering modes will be controlled by our Modes\n\nvar object1 = new XEO.GameObject(scene, {\n  modes: modes\n  });\n\nvar object2 = new XEO.GameObject(scene, {\n  modes: modes\n  });\n\n// Subscribe to change on the Modes' \"specular\" property\nvar handle = modes.on(\"specular\", function(value) {\n  //...\n  });\n\n// Disable specular lighting on our GameObjects by flipping the Modes' \"specular\" property,\n// which will also call our handler\nmodes.specular = false;\n\n// Unsubscribe from the Modes again\nmodes.off(handle);\n\n// When we destroy our Modes, the GameObjects will fall back\n// on the Scene's default Modes instance\nmodes.destroy();\n\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Modes in the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Modes.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "picking",
                            "description": "Whether to enable picking.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "clipping",
                            "description": "Whether to enable clipping by {{#crossLink \"Clips\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "transparent",
                            "description": "Whether to enable the transparency effect created by {{#crossLink \"Material\"}}Material{{/crossLink}}s when they have\n{{#crossLink \"Material/opacity:property\"}}{{/crossLink}} < 1.0. This mode will set attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} transparent (ie. to be rendered in a\ntransparency pass with blending enabled etc), while\nthe {{#crossLink \"Material/opacity:property\"}}{{/crossLink}} will indicate the **degree** of their transparency\n(ie. where opacity of 0.0 indicates maximum translucency and opacity of 1.0 indicates minimum translucency).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "backfaces",
                            "description": "Whether to render {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "frontface",
                            "description": "The winding order for {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} front faces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "\"ccw\""
                        },
                        {
                            "name": "backfaceLighting",
                            "description": "Whether to apply {{#crossLink \"Lights\"}}Lights{{/crossLink}} to {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "backfaceTexturing",
                            "description": "Whether to apply {{#crossLink \"Texture\"}}Textures{{/crossLink}} to {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} backfaces",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "diffuse",
                            "description": "Whether to enable diffuse contributions from {{#crossLink \"Lights\"}}Lights{{/crossLink}}",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "specular",
                            "description": "Whether to enable specular contributions from {{#crossLink \"Lights\"}}Lights{{/crossLink}}",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "ambient",
                            "description": "Whether to enable ambient contributions from {{#crossLink \"Lights\"}}Lights{{/crossLink}}",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "reflection",
                            "description": "Whether to enable reflections created by {{#crossLink \"Reflection\"}}{{/crossLink}}s",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "MorphTargets": {
            "name": "MorphTargets",
            "shortname": "MorphTargets",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/morphTargets.js",
            "line": 6,
            "description": "A **MorphTargets** defines interpolation targets for morphing {{#crossLink \"Geometry\"}}Geometry{{/crossLink}}s on\nattached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<img src=\"http://www.gliffy.com/go/publish/image/7123401/L.png\"></img>\n\n### Example",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this MorphTarget in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MorphTarget.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "targets",
                            "description": "The morph targets.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "factor",
                            "description": "The morph factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Ortho": {
            "name": "Ortho",
            "shortname": "Ortho",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/ortho.js",
            "line": 6,
            "description": "An **Ortho** component defines an orthographic projection transform.\n\n<ul>\n<li>{{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with viewing transform components, such as\n{{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, to define viewpoints for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7097089/L.png\"></img>\n\n### Example\n\nIn this example we have a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that's attached to a\n{{#crossLink \"Camera\"}}Camera{{/crossLink}} that has a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} view transform and an Ortho\nprojection transform.\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar ortho = new XEO.Ortho(scene, {\n    left:       1.0,    // Position of the left plane on the View-space X-axis\n    right:      1.0,    // Position of the right plane on the View-space X-axis\n    top:        1.0,    // Position of the top plane on the View-space Y-axis.\n    bottom :   -1.0,    // Position of the bottom plane on the View-space Y-axis.\n    near:       0.1,    // Position of the near plane on the View-space Z-axis.\n    far:        10000   // Position of the far plane on the positive View-space Z-axis.\n });\n\nvar camera = new XEO.Camera(scene, {\n  project: ortho\n });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n    camera: camera,\n    geometry: geometry\n });\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Ortho within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Ortho.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "left",
                            "description": "Position of the left plane on the View-space X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1.0"
                        },
                        {
                            "name": "right",
                            "description": "Position of the right plane on the View-space X-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "top",
                            "description": "Position of the top plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "bottom",
                            "description": "Position of the bottom plane on the View-space Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "-1.0"
                        },
                        {
                            "name": "near",
                            "description": "Position of the near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the far plane on the positive View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "10000"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Perspective": {
            "name": "Perspective",
            "shortname": "Perspective",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/perspective.js",
            "line": 6,
            "description": "A **Perspective** component defines a perspective projection transform.\n\n<ul>\n\n<li>{{#crossLink \"Camera\"}}Camera{{/crossLink}} components pair these with viewing transform components, such as\n{{#crossLink \"Lookat\"}}Lookat{{/crossLink}}, to define viewpoints on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/6895185/L.png\"></img>\n\n### Example\n\nIn this example we have a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that's attached to a\n{{#crossLink \"Camera\"}}Camera{{/crossLink}} that has a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} view transform and a Perspective\nprojection transform.\n\n````Javascript\nvar scene = new XEO.Scene();\n\nvar perspective = new XEO.Perspective(scene, {\n  fovy: 60,\n  near: 0.1,\n  far: 1000\n   });\n\nvar camera = new XEO.Camera(scene, {\n  project: perspective\n   });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n    camera: camera,\n    geometry: geometry\n });\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this Perspective within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Perspective.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "fovy",
                            "description": "Field-of-view angle on Y-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "60.0"
                        },
                        {
                            "name": "aspect",
                            "description": "Aspect ratio.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "near",
                            "description": "Position of the near plane on the View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "far",
                            "description": "Position of the far plane on the positive View-space Z-axis.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "10000"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "PointLight": {
            "name": "PointLight",
            "shortname": "PointLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/pointLight.js",
            "line": 5,
            "description": "A **PointLight** defines a light source that originates from a single point and spreads outward in all directions, to illuminate\nattached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n\n<li>PointLights are grouped, along with other light source types, within {{#crossLink \"Lights\"}}Lights{{/crossLink}} components,\nwhich are attached to {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n<li>Within xeoEngine's Phong lighting calculations, PointLight {{#crossLink \"PointLight/diffuse:property\"}}{{/crossLink}} and\n{{#crossLink \"PointLight/specular:property\"}}{{/crossLink}} are multiplied by {{#crossLink \"Material\"}}Material{{/crossLink}}\n{{#crossLink \"Material/diffuse:property\"}}{{/crossLink}} and {{#crossLink \"Material/specular:property\"}}{{/crossLink}},\nrespectively.</li>\n\n<li>PointLights have {{#crossLink \"PointLight/constantAttenuation:property\"}}{{/crossLink}}, {{#crossLink \"PointLight/linearAttenuation:property\"}}{{/crossLink}} and\n{{#crossLink \"PointLight/quadraticAttenuation:property\"}}{{/crossLink}} factors, which indicate how their intensity attenuates over distance.</li>\n\n<li>Diffuse, specular and ambient lighting may also be enabled or disabled for specific {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}\nvia {{#crossLink \"Modes/diffuse:property\"}}{{/crossLink}}, {{#crossLink \"Modes/diffuse:property\"}}{{/crossLink}}\nand {{#crossLink \"Modes/ambient:property\"}}{{/crossLink}} flags on {{#crossLink \"Modes\"}}Modes{{/crossLink}} components.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7096613/L.png\"></img>\n\n### Example\n\nIn this example we have\n<ul>\n<li>a {{#crossLink \"Material\"}}{{/crossLink}},</li>\n<li>a PointLight,</li>\n<li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing the PointLight,</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar material = new XEO.Material(scene, {\n   diffuse: [1, 1, 1],\n   specular: [1.1, 1]\n });\n\n// Our PointLight's intensity does not attenuate over distance.\n\nvar pointLight = new XEO.PointLight(scene, {\n   pos: [0, 100, 100],\n   diffuse: [0.5, 0.7, 0.5],\n   specular: [1.0, 1.0, 1.0],\n   constantAttenuation: 0,\n   linearAttenuation: 0,\n   quadraticAttenuation: 0,\n   space: \"view\"\n });\n\nvar lights = new XEO.Lights(scene, {\n   lights: [\n       pointLight\n   ]\n });\n\nvar geometry = new XEO.Geometry(scene);  // Defaults to a 2x2x2 box\n\nvar object = new XEO.GameObject(scene, {\n   lights: lights,\n   material: material,\n   geometry: geometry\n  });\n````\n\nAs with all components, we can <a href=\"XEO.Component.html#changeEvents\" class=\"crosslink\">observe and change properties</a> on PointLights like so:\n\n````Javascript\nvar handle = pointLight.on(\"diffuse\", // Attach a change listener to a property\nfunction(value) {\n   // Property value has changed\n    });\n\npointLight.diffuse = [0.4, 0.6, 0.4]; // Fires the change listener\n\npointLight.off(handle); // Detach the change listener\n````",
            "is_constructor": 1,
            "extends": "Component",
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, creates this PointLight within the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The PointLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this PointLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "pos",
                            "description": "Position, in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "diffuse",
                            "description": "Diffuse color of this PointLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "specular",
                            "description": "Specular color of this PointLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[1.0, 1.0, 1.1 ]"
                        },
                        {
                            "name": "constantAttenuation",
                            "description": "Constant attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "linearAttenuation",
                            "description": "Linear attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "quadraticAttenuation",
                            "description": "Quadratic attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system this PointLight is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        }
                    ]
                }
            ]
        },
        "Quaternion": {
            "name": "Quaternion",
            "shortname": "Quaternion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/quaternion.js",
            "line": 1,
            "description": "A **Quaternion** applies a rotation transformation to associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n<ul>\n <li>A sub-class of {{#crossLink \"Transform\"}}{{/crossLink}}</li>\n <li>Can be connected into hierarchies with other {{#crossLink \"Transform\"}}Transforms{{/crossLink}} and sub-classes</li>\n <li>{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are connected to leaf {{#crossLink \"Transform\"}}Transforms{{/crossLink}}\n in the hierarchy, and will be transformed by each {{#crossLink \"Transform\"}}Transforms{{/crossLink}} on the path up to the\n root, in that order.</li>\n </ul>\n<img src=\"http://www.gliffy.com/go/publish/image/7492985/L.png\">\n### Example\nIn this example we have two {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are transformed by a hierarchy that contains\n Quaternion, {{#crossLink \"Translate\"}}{{/crossLink}} and {{#crossLink \"Scale\"}}{{/crossLink}} transforms.\n The GameObjects share the same {{#crossLink \"Geometry\"}}{{/crossLink}}, which is the default 2x2x2 cube.<br>\n````javascript\n var scene = new XEO.Scene();\n\nvar quaternion = new XEO.Quaternion(scene, {\n        xyzw: [0, 0, 0, 1], // Unit quaternion\n     });\n\nvar translate1 = new XEO.Translate(scene, {\n        parent: quaternion,\n        xyz: [-5, 0, 0] // Translate along -X axis\n     });\n\nvar translate2 = new XEO.Translate(scene, {\n        parent: quaternion,\n        xyz: [5, 0, 0] // Translate along +X axis\n     });\n\nvar scale = new XEO.Scale(scene, {\n        parent: translate2,\n        xyz: [1, 2, 1] // Scale x2 on Y axis\n     });\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar gameObject1 = new XEO.GameObject(scene, {\n        transform: translate1,\n        geometry: geometry\n     });\n\nvar gameObject2 = new XEO.GameObject(scene, {\n        transform: scale,\n        geometry: geometry\n     });\n ````\nSince everything in xeoEngine is dynamically editable, we can restructure the transform hierarchy at any time.\n\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"GameObject\"}}{{/crossLink}}:\n````javascript\nvar scale2 = new XEO.Scale(scene, {\n    parent: translate1,\n    xyz: [1, 1, 2] // Scale x2 on Z axis\n });\n\ngameObject2.transform = scale2;\n ````\nAnd just for fun, we'll start spinning the Quaternion:\n````javascript\n // Rotate 0.2 degrees about Y-axis on each frame\n scene.on(\"tick\", function(e) {\n    quaternion.rotate([0, 1, 0, 0.2]);\n });\n ````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Quaternion in the default\n {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Quaternion.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "xyzw",
                            "description": "The initial Quaternion elements.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0,0,0,1]"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Reflect": {
            "name": "Reflect",
            "shortname": "Reflect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/reflect.js",
            "line": 5,
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Reflect in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Reflect.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Rotate": {
            "name": "Rotate",
            "shortname": "Rotate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/rotate.js",
            "line": 5,
            "description": "A **Rotate** applies a rotation transformation to associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n<ul>\n     <li>A sub-class of {{#crossLink \"Transform\"}}{{/crossLink}}</li>\n     <li>Can be connected into hierarchies with other {{#crossLink \"Transform\"}}Transforms{{/crossLink}} and sub-classes</li>\n     <li>{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are connected to leaf {{#crossLink \"Transform\"}}Transforms{{/crossLink}}\n     in the hierarchy, and will be transformed by each {{#crossLink \"Transform\"}}Transforms{{/crossLink}} on the path up to the\n     root, in that order.</li>\n     </ul>\n<img src=\"http://www.gliffy.com/go/publish/image/7486921/L.png\">\n### Example\nIn this example we have two {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are transformed by a hierarchy that contains\n     Rotate, {{#crossLink \"Translate\"}}{{/crossLink}} and {{#crossLink \"Scale\"}}{{/crossLink}} transforms.\n     The GameObjects share the same {{#crossLink \"Geometry\"}}{{/crossLink}}, which is the default 2x2x2 cube.<br>\n````javascript\nvar scene = new XEO.Scene();\n\nvar rotate = new XEO.Rotate(scene, {\n        xyz: [0, 1, 0], // Rotate 30 degrees about Y axis\n        angle: 30\n     });\n\nvar translate1 = new XEO.Translate(scene, {\n        parent: rotate,\n        xyz: [-5, 0, 0] // Translate along -X axis\n     });\n\nvar translate2 = new XEO.Translate(scene, {\n        parent: rotate,\n        xyz: [5, 0, 0] // Translate along +X axis\n     });\n\nvar scale = new XEO.Scale(scene, {\n        parent: translate2,\n        xyz: [1, 2, 1] // Scale x2 on Y axis\n     });\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar gameObject1 = new XEO.GameObject(scene, {\n        transform: translate1,\n        geometry: geometry\n     });\n\nvar gameObject2 = new XEO.GameObject(scene, {\n        transform: scale,\n        geometry: geometry\n     });\n     ````\nSince everything in xeoEngine is dynamically editable, we can restructure the transform hierarchy at any time.\n\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"GameObject\"}}{{/crossLink}}:\n````javascript\nvar scale2 = new XEO.Scale(scene, {\n    parent: translate1,\n    xyz: [1, 1, 2] // Scale x2 on Z axis\n });\n\ngameObject2.transform = scale2;\n     ````\nAnd just for fun, we'll start spinning the {{#crossLink \"Rotate\"}}{{/crossLink}}:\n````javascript\n     // Rotate 0.2 degrees on each frame\n     scene.on(\"tick\", function(e) {\n    rotate.angle += 0.2;\n });\n     ````",
            "extends": "Transform"
        },
        "Scale": {
            "name": "Scale",
            "shortname": "Scale",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/scale.js",
            "line": 5,
            "description": "A **Scale** applies a scaling transformation to associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n<ul>\n     <li>A sub-class of {{#crossLink \"Transform\"}}{{/crossLink}}</li>\n     <li>Can be connected into hierarchies with other {{#crossLink \"Transform\"}}Transforms{{/crossLink}} and sub-classes</li>\n     <li>{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are connected to leaf {{#crossLink \"Transform\"}}Transforms{{/crossLink}}\n     in the hierarchy, and will be transformed by each {{#crossLink \"Transform\"}}Transforms{{/crossLink}} on the path up to the\n     root, in that order.</li>\n     </ul>\n<img src=\"http://www.gliffy.com/go/publish/image/7486907/L.png\">\n### Example\nIn this example we have two {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are transformed by a hierarchy that contains\n     {{#crossLink \"Rotate\"}}{{/crossLink}}, {{#crossLink \"Translate\"}}{{/crossLink}} and Scale transforms.\n     The GameObjects share the same {{#crossLink \"Geometry\"}}{{/crossLink}}, which is the default 2x2x2 cube.<br>\n````javascript\nvar scene = new XEO.Scene();\n\nvar rotate = new XEO.Rotate(scene, {\n        xyz: [0, 1, 0], // Rotate 30 degrees about Y axis\n        angle: 30\n     });\n\nvar translate1 = new XEO.Translate(scene, {\n        parent: rotate,\n        xyz: [-5, 0, 0] // Translate along -X axis\n     });\n\nvar translate2 = new XEO.Translate(scene, {\n        parent: rotate,\n        xyz: [5, 0, 0] // Translate along +X axis\n     });\n\nvar scale = new XEO.Scale(scene, {\n        parent: translate2,\n        xyz: [1, 2, 1] // Scale x2 on Y axis\n     });\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar gameObject1 = new XEO.GameObject(scene, {\n        transform: translate1,\n        geometry: geometry\n     });\n\nvar gameObject2 = new XEO.GameObject(scene, {\n        transform: scale,\n        geometry: geometry\n     });\n     ````\nSince everything in xeoEngine is dynamically editable, we can restructure the transform hierarchy at any time.\n\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"GameObject\"}}{{/crossLink}}:\n````javascript\nvar scale2 = new XEO.Scale(scene, {\n    parent: translate1,\n    xyz: [1, 1, 2] // Scale x2 on Z axis\n });\n\ngameObject2.transform = scale2;\n     ````\nAnd just for fun, we'll start spinning the {{#crossLink \"Rotate\"}}{{/crossLink}}:\n````javascript\n     // Rotate 0.2 degrees on each frame\n     scene.on(\"tick\", function(e) {\n    rotate.angle += 0.2;\n });\n     ````",
            "extends": "Transform"
        },
        "Scene": {
            "name": "Scene",
            "shortname": "Scene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/scene.js",
            "line": 6,
            "description": "A **Scene** is a xeoEngine scene graph.\n\n<hr>\n\n*Contents*\n\n<Ul>\n   <li><a href=\"#sceneStructure\">Scene Structure</a></li>\n   <li><a href=\"#sceneCanvas\">The Scene Canvas</a></li>\n   <li><a href=\"#findingByID\">Finding Scenes and Components by ID</a></li>\n   <li><a href=\"#defaults\">The Default Scene</a></li>\n   <li><a href=\"#savingAndLoadingJSON\">Saving and Loading Scenes</a></li>\n</ul>\n\n<hr>\n\n## <a name=\"sceneStructure\">Scene Structure</a>\n\nA Scene is a type of <a href=\"http://gameprogrammingpatterns.com/component.html\" target=\"_other\">component-object</a> graph.\n\nA Scene contains a soup of instances of various {{#crossLink \"Component\"}}Component{{/crossLink}} subtypes, such as\n{{#crossLink \"GameObject\"}}GameObject{{/crossLink}}, {{#crossLink \"Camera\"}}Camera{{/crossLink}}, {{#crossLink \"Material\"}}Material{{/crossLink}},\n{{#crossLink \"Lights\"}}Lights{{/crossLink}} etc.  Each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} has a link to one of each of the other types,\nand the same component instances can be shared among many {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n*** Under the hood:*** Within xeoEngine, each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} represents a draw call,\nwhile its components define all the WebGL state that will be bound for that call. To render a Scene, xeoEngine traverses\nthe graph to bind the states and make the draw calls, while using many optimizations for efficiency (eg. draw list caching and GL state sorting).\n\n<img src=\"http://www.gliffy.com/go/publish/image/7103731/L.png\"></img>\n\n#### Default Components\n\nA Scene provides its own default *flyweight* instance of each component type\n(except for {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}). Each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} you create\nwill implicitly link to a default instance for each type of component that you don't explicitly link it to. For example, when you create a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} without\na {{#crossLink \"Lights\"}}Lights{{/crossLink}}, the {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} will link to the\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/lights:property\"}}{{/crossLink}}. This mechanism\nprovides ***training wheels*** to help you learn the API, and also helps keep examples simple, where many of the examples in this\ndocumentation are implicitly using those defaults when they are not central to discussion.\n\nAt the bottom of the diagram above, the blue {{#crossLink \"Material\"}}Material{{/crossLink}},\n{{#crossLink \"Geometry\"}}Geometry{{/crossLink}} and {{#crossLink \"Camera\"}}Camera{{/crossLink}} components\nrepresent some of the defaults provided by our Scene. For brevity, the diagram only shows those three\ntypes of component (there are actually around two dozen).\n\nNote that we did not link the second {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} to a\n{{#crossLink \"Material\"}}Material{{/crossLink}}, causing it to be implicitly linked to our Scene's\ndefault {{#crossLink \"Material\"}}Material{{/crossLink}}. That {{#crossLink \"Material\"}}Material{{/crossLink}}\nis the only default our {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are falling back on in this example, with other\ndefault component types, such as the {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} and the {{#crossLink \"Camera\"}}Camera{{/crossLink}},\nhanging around dormant until a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} is linked to them.\n\nNote also how the same {{#crossLink \"Camera\"}}Camera{{/crossLink}} is linked to both of our\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}. Whenever we update that\n{{#crossLink \"Camera\"}}Camera{{/crossLink}}, it's going to affect both of those\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} in one shot. Think of the defaults as the Scene's ***global*** component\ninstances, which you may optionally override on a per-{{#crossLink \"GameObject\"}}GameObject{{/crossLink}} basis with your own\ncomponent instances. In many Scenes, for example, you might not even bother to create your own {{#crossLink \"Camera\"}}Camera{{/crossLink}} and just\nlet all your {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} fall back on the default one.\n\n<br>\n### Example\n\nHere's the JavaScript for the diagram above. As mentioned earlier, note that we only provide components for our {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} when we need to\noverride the default components that the Scene would have provided them, and that same component instances may be shared among multiple GameObjects.\n\n```` javascript\nvar scene = new XEO.Scene({\n  id: \"myScene\"   // ID is optional on all components\n  });\n\nvar material = new XEO.Material(myScene, {\n  id: \"myMaterial\",         // We'll use this ID to show how to find components by ID\n  diffuse: [ 0.6, 0.6, 0.7 ],\n  specular: [ 1.0, 1.0, 1.0 ]\n   });\n\nvar geometry = new XEO.Geometry(myScene, {\n  primitive: \"triangles\",\n  positions: [...],\n  normals: [...],\n  uvs: [...],\n  indices: [...]\n  });\n\nvar camera = new XEO.Camera(myScene);\n\nvar object1 = new XEO.GameObject(myScene, {\n  material: myMaterial,\n  geometry: myGeometry,\n  camera: myCamera\n  });\n\n// Second object uses Scene's default Material\nvar object1 = new XEO.GameObject(myScene, {\n  geometry: myGeometry,\n  camera: myCamera\n  });\n````\n\n\n<br>\n## <a name=\"sceneCanvas\">The Scene Canvas</a>\n\n<br>\n## <a name=\"findingByID\">Finding Scenes and Components by ID</a>\n\nWe can have as many Scenes as we want, and can find them by ID on the {{#crossLink \"XEO\"}}XEO{{/crossLink}} object's {{#crossLink \"XEO/scenes:property\"}}scenes{{/crossLink}} map:\n\n````javascript\nvar theScene = XEO.scenes[\"myScene\"];\n````\n\nLikewise we can find a Scene's components within the Scene itself, such as the {{#crossLink \"Material\"}}Material{{/crossLink}} we\ncreated earlier:\n\n````javascript\nvar theMaterial = myScene.components[\"myMaterial\"];\n````\n\n<br>\n## <a name=\"defaults\">The Default Scene</a>\n\nWhen you create components without specifying a Scene for them, xeoEngine will put them in its default Scene.\n\nFor example:\n\n```` javascript\nvar material2 = new XEO.Material({\n    diffuse: { r: 0.6, g: 0.6, b: 0.7 },\n    specular: { 1.0, 1.0, 1.0 }\n});\n\nvar geometry2 = new XEO.Geometry({\nprimitive: \"triangles\",\npositions: [...],\nnormals: [...],\nuvs: [...],\nindices: [...]\n});\n\nvar camera = new XEO.Camera();\n\nvar object1 = new XEO.GameObject({\nmaterial: material2,\ngeometry: geometry2,\ncamera: camera2\n});\n````\n\nYou can then obtain the default Scene from the {{#crossLink \"XEO\"}}XEO{{/crossLink}} object's\n{{#crossLink \"XEO/scene:property\"}}scene{{/crossLink}} property:\n\n````javascript\nvar theScene = XEO.scene;\n````\n\nor from one of the components we just created:\n````javascript\nvar theScene = material2.scene;\n````\n\n***Note:*** xeoEngine creates the default Scene as soon as you either\ncreate your first Sceneless {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} or reference the\n{{#crossLink \"XEO\"}}XEO{{/crossLink}} object's {{#crossLink \"XEO/scene:property\"}}scene{{/crossLink}} property. Expect to\nsee the HTML canvas for the default Scene magically appear in the page when you do that.\n\n<br>\n\n## <a name=\"savingAndLoadingJSON\">Saving and Loading Scenes</a>\n\nThe entire runtime state of a Scene can be serialized and deserialized to and from JSON. This means you can create a\nScene, then save it and restore it again to exactly how it was when you saved it.\n\n````javascript\n// Serialize the scene to JSON\nvar json = myScene.json;\n\n// Create another scene from that JSON, in a fresh canvas:\nvar myOtherScene = new XEO.Scene({\n json: json\n  });\n\n````\n\n***Note:*** this will save your {{#crossLink \"Geometry\"}}Geometry{{/crossLink}}s' array properties\n({{#crossLink \"Geometry/positions:property\"}}positions{{/crossLink}}, {{#crossLink \"Geometry/normals:property\"}}normals{{/crossLink}},\n{{#crossLink \"Geometry/indices:property\"}}indices{{/crossLink}} etc) as JSON arrays, which may stress your browser\nif those arrays are huge.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Scene parameters",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all Scenes in xeoEngine, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Scene.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "canvasId",
                            "description": "ID of existing HTML5 canvas in the DOM - creates a full-page canvas automatically if this is omitted",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "components",
                            "description": "JSON array containing parameters for {{#crossLink \"Component\"}}Component{{/crossLink}} subtypes to immediately create within the Scene.",
                            "type": "Array(GameObject)",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Shader": {
            "name": "Shader",
            "shortname": "Shader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/shader.js",
            "line": 6,
            "description": "A **Shader** specifies a custom GLSL shader to draw attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<hr>\n*Contents*\n<Ul>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#shaderInputs\">Shader Inputs</a></li>\n<li><a href=\"#example\">Example</a></li>\n</ul>\n<hr>\n\n## Overview\n\n<ul>\n<li>You can use xeoEngine's reserved uniform and variable names in your Shaders to read all the WebGL state that's set by other\ncomponents on the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n<li>Use Shaders in combination with {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} components when you need to share\nthe same Shaders among multiple {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} while setting the Shaders' uniforms\ndifferently for each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}.</li>\n\n<li>Use {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}}, {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}}\nand {{#crossLink \"Texture\"}}Texture{{/crossLink}} components to connect the output of one Shader as input into another Shader.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7105141/L.png\"></img>\n\n## Example\n\nThis example shows the simplest way to use a Shader, where we're just going to render a ripply water\npattern to a screen-aligned quad.\n\n<img src=\"../../assets/images/shaderExample1.png\"></img>\n\nIn our scene definition, we have an  {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that has a {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} that is our\nscreen-aligned quad, plus a Shader that will render the fragments of that quad with our cool rippling water pattern.\nFinally, we animate the rippling by periodically updating the Shader's \"time\" uniform.\n\n````javascript\n\nvar scene = new XEO.Scene();\n\n// Shader that's used by our GameObject. Note the 'XEO_aPosition' and 'XEO_aUV attributes',\n// which will receive the positions and UVs from the Geometry. Also note the 'time'\n// uniform, which we'll be animating via Shader#setParams.\n\nvar shader = new XEO.Shader(scene, {\n\n  // Vertex shading stage\n  vertex: [\n      \"attribute vec3 XEO_aPosition;\",\n      \"attribute vec2 XEO_aUV;\",\n      \"varying vec2 vUv;\",\n      \"void main () {\",\n      \"    gl_Position = vec4(XEO_aPosition, 1.0);\",\n      \"    vUv = XEO_aUV;\",\n      \"}\"\n  ],\n\n  // Fragment shading stage\n  fragment: [\n      \"precision mediump float;\",\n\n      \"uniform float time;\",\n      \"varying vec2 vUv;\",\n\n      \"void main( void ) {\",\n      \"    vec2 sp = vUv;\",\n      \"    vec2 p = sp*5.0 - vec2(10.0);\",\n      \"    vec2 i = p;\",\n      \"    float c = 1.0;\",\n      \"    float inten = 0.10;\",\n      \"    for (int n = 0; n < 10; n++) {\",\n      \"        float t = time * (1.0 - (3.0 / float(n+1)));\",\n      \"        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\",\n      \"        c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\",\n      \"    }\",\n      \"    c /= float(10);\",\n      \"    c = 1.5-sqrt(c);\",\n      \"    gl_FragColor = vec4(vec3(c*c*c*c), 999.0) + vec4(0.0, 0.3, 0.5, 1.0);\",\n      \"}\"\n  ],\n\n  // Initial value for the 'time' uniform in the fragment stage.\n  params: {\n      time: 0.0\n  }\n  });\n\n// A screen-aligned quad\nvar quad = new XEO.Geometry(scene, {\n  primitive:\"triangles\",\n  positions:[ 1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0 ],\n  normals:[ -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0 ],\n  uv:[ 1, 1, 0, 1, 0, 0, 1, 0 ],\n  indices:[ 0, 1, 2, 0, 2, 3 ]\n  });\n\nvar object = new XEO.GameObject(scene, {\n  shader: shader,\n  geometry: quad\n  });\n\n````\nNow let's animate the \"time\" parameter on the Shader, to make the water ripple:\n\n```` javascript\nscene.on(\"tick\", function(params) {\n       shader.setParams({\n           time: params.timeElapsed\n       });\n   });\n````\n\n## Shader Inputs\n\nxeoEngine provides various inputs for your shaders (TODO)\n\n#### Attributes\n\n*Attributes are used in vertex shaders*\n\n| Attribute  | Description | Depends on  |\n|---|---|\n| attribute vec3   XEO_aPosition   | Vertex positions | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} |\n| attribute vec2   XEO_aUV         | UV coordinates | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/uv:property\"}}{{/crossLink}}  |\n| attribute vec3   XEO_aNormal     | Normal vectors | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}}  |\n| attribute vec4   XEO_aVertexColor  | Vertex colors  | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/colors:property\"}}{{/crossLink}}  |\n| attribute vec4 XEO_aTangent    | Tangent vectors for normal mapping | {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}} and {{#crossLink \"Geometry/uv:property\"}}{{/crossLink}}  |\n\n#### Uniforms\n\n*Uniforms are used in vertex and fragment shaders*\n\n| Uniform  | Description | Depends on  |\n|---|---|\n| uniform mat4  XEO_uMNMatrix               | Modelling normal matrix | {{#crossLink \"Geometry/normals:property\"}}Geometry normals{{/crossLink}} and {{#crossLink \"Transform\"}}{{/crossLink}} |\n| uniform mat4  XEO_uVMatrix                | View matrix | {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} |\n| uniform mat4  XEO_uVNMatrix               | View normal matrix | {{#crossLink \"Geometry/normals:property\"}}Geometry normals{{/crossLink}} and {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} |\n| uniform mat4  XEO_uPMatrix                | Projection matrix | {{#crossLink \"Ortho\"}}Ortho{{/crossLink}}, {{#crossLink \"Frustum\"}}Frustum{{/crossLink}} or {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} |\n| uniform mat4  XEO_uPNMatrix               | Projection normal matrix | {{#crossLink \"Geometry/normals:property\"}}Geometry normals{{/crossLink}} and {{#crossLink \"Ortho\"}}Ortho{{/crossLink}}, {{#crossLink \"Frustum\"}}Frustum{{/crossLink}} or {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} |\n| uniform float XEO_uZNear                  | Near clipping plane |{{#crossLink \"Ortho\"}}Ortho{{/crossLink}}, {{#crossLink \"Frustum\"}}Frustum{{/crossLink}} or {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} |\n| uniform float XEO_uZFar                   | Far clipping plane |{{#crossLink \"Ortho\"}}Ortho{{/crossLink}}, {{#crossLink \"Frustum\"}}Frustum{{/crossLink}} or {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} |\n| uniform vec3  XEO_uAmbientColor | Ambient light color | {{#crossLink \"AmbientLight\"}}{{/crossLink}} |\n| uniform vec3 XEO_uLightDir&lt;N&gt; | Direction of {{#crossLink \"DirLight\"}}{{/crossLink}} at index N in {{#crossLink \"Lights\"}}{{/crossLink}} | {{#crossLink \"DirLight\"}}{{/crossLink}} |\n\n\n\n\n#### Varying\n\n*Varying types are used in fragment shaders*\n\n| Varying | Description | Depends on  |\n|---|---|\n| varying vec4 XEO_vWorldVertex | |\n| varying vec4 XEO_vViewVertex | |\n| varying vec4 XEO_vColor | |",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Shader in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Shader.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "vertex",
                            "description": "GLSL Depends on code for the vertex shading staging.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "fragment",
                            "description": "GLSL source code for the fragment shading staging.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "params",
                            "description": "{GameObject} Values for uniforms defined in the vertex and/or fragment stages.",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "ShaderParams": {
            "name": "ShaderParams",
            "shortname": "ShaderParams",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/shaderParams.js",
            "line": 6,
            "description": "A **ShaderParams** sets uniform values for {{#crossLink \"Shader\"}}Shaders{{/crossLink}} on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n<li>Use these when you need to share the same {{#crossLink \"Shader\"}}Shaders{{/crossLink}} among multiple {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}},\nwhile setting the {{#crossLink \"Shader\"}}Shaders{{/crossLink}}' uniforms differently for each {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7105099/L.png\"></img>\n\n### Example\n\nThis example shows the simplest way to use a {{#crossLink \"Shader\"}}Shader{{/crossLink}}, where we're just going to render a ripply water\npattern to a screen-aligned quad. As with all our examples, we're just creating the\nessential components while falling back on the <a href=\"XEO.Scene.html#defaults\" class=\"crosslink\">Scene's default components</a>\nfor everything else.\n\n<img src=\"../../assets/images/shaderParamsExample1.png\"></img>\n\nIn our scene definition, we have an  {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} that has a {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} that is our\nscreen-aligned quad, plus a {{#crossLink \"Shader\"}}Shader{{/crossLink}} that will render the fragments of that quad with our cool rippling water pattern.\nFinally, we animate the rippling by periodically updating the {{#crossLink \"Shader\"}}Shader{{/crossLink}}'s \"time\" uniform.\n\n````javascript\nvar scene = new XEO.Scene();\n\n// Shader that's shared by both our GameObjects. Note the 'XEO_aPosition' and 'XEO_aUV attributes',\n// which will receive the positions and UVs from the Geometry components. Also note the 'time'\n// uniform, which we'll be animating via the ShaderParams components.\n\nvar shader = new XEO.Shader(scene, {\n\n  // Vertex shading stage\n  vertex: [\n      \"attribute vec3 XEO_aPosition;\",\n      \"attribute vec2 XEO_aUV;\",\n      \"varying vec2 vUv;\",\n      \"void main () {\",\n      \"    gl_Position = vec4(XEO_aPosition, 1.0);\",\n      \"    vUv = XEO_aUV;\",\n      \"}\"\n  ],\n\n  // Fragment shading stage\n  fragment: [\n      \"precision mediump float;\",\n\n      \"uniform float time;\",\n      \"varying vec2 vUv;\",\n\n      \"void main( void ) {\",\n      \"    vec2 sp = vUv;\",\n      \"    vec2 p = sp*5.0 - vec2(10.0);\",\n      \"    vec2 i = p;\",\n      \"    float c = 1.0;\",\n      \"    float inten = 0.10;\",\n      \"    for (int n = 0; n < 10; n++) {\",\n      \"        float t = time * (1.0 - (3.0 / float(n+1)));\",\n      \"        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\",\n      \"        c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\",\n      \"    }\",\n      \"    c /= float(10);\",\n      \"    c = 1.5-sqrt(c);\",\n      \"    gl_FragColor = vec4(vec3(c*c*c*c), 999.0) + vec4(0.0, 0.3, 0.5, 1.0);\",\n      \"}\"\n  ],\n\n  // Initial values for the 'time' uniform in the fragment stage.\n  params: {\n      time: 0.0\n  }\n  });\n\n// First GameObject using our Shader, with a quad covering the left half of the canvas,\n// along with its own ShaderParams to independently set its own values for the Shader's uniforms.\n\nvar quad1 = new XEO.Geometry(scene, {\n  primitive:\"triangles\",\n  positions:[ 1, 1, 0, 0, 1, 0, 0, -1, 0, 1, -1, 0 ],\n  normals:[ -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0 ],\n  uv:[ 1, 1, 0, 1, 0, 0, 1, 0 ],\n  indices:[ 0, 1, 2, 0, 2, 3 ]\n  });\n\nvar shaderParams1 = new XEO.ShaderParams(scene, {\n  params: {\n      time: 0.0\n  }\n  });\n\nvar object1 = new XEO.GameObject(scene, {\n  shader: shader,\n  geometry: quad1,\n  shaderParams1: shaderParams1\n  });\n\n// Second GameObject using the Shader, with a quad covering the right half of the canvas,\n// along with its own ShaderParams to independently set its own values for the Shader's uniforms.\n\nvar quad2 = new XEO.Geometry(scene, {\n  primitive:\"triangles\",\n  positions:[ 1, 1, 0, 0, 1, 0, 0, -1, 0, 1, -1, 0 ],\n  normals:[ -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0 ],\n  uv:[ 1, 1, 0, 1, 0, 0, 1, 0 ],\n  indices:[ 0, 1, 2, 0, 2, 3 ]\n  });\n\nvar shaderParams2 = new XEO.ShaderParams(scene, {\n  params: {\n      time: 0.0\n  }\n  });\n\nvar object2 = new XEO.GameObject(scene, {\n  shader: shader,\n  geometry2: quad2,\n  shaderParams2: shaderParams2\n  });\n\n````\nNow let's animate the \"time\" parameter on the Shader, for each GameObject independently:\n\n```` javascript\nscene.on(\"tick\", function(params) {\n\n       shaderParams1.setParams({\n           time: params.timeElapsed\n       });\n\n       shaderParams2.setParams({\n           time: params.timeElapsed  * 0.5\n       });\n   });\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this ShaderParams in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this ShaderParams.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "description": "{GameObject} The {{#crossLink \"Shader\"}}Shader{{/crossLink}} parameter values.",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Stage": {
            "name": "Stage",
            "shortname": "Stage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/stage.js",
            "line": 6,
            "description": "A **Stage** partitions attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} into ordered render bins.\n\n<ul>\n<li>When the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} renders, each Stage renders its bin\nof {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} in turn, from the lowest priority Stage to the highest.</li>\n\n<li>Stages are typically used for ordering the render-to-texture steps in posteffects pipelines.</li>\n\n<li>You can control the render order of the individual {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} ***within*** a Stage\nby associating them with {{#crossLink \"Layer\"}}Layers{{/crossLink}}.</li>\n\n<li>{{#crossLink \"Layer\"}}Layers{{/crossLink}} are typically used to <a href=\"https://www.opengl.org/wiki/Transparency_Sorting\" target=\"_other\">transparency-sort</a> the\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within Stages.</li>\n\n<li>{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} not explicitly attached to a Stage are implicitly\nattached to the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default\n{{#crossLink \"Scene/stage:property\"}}stage{{/crossLink}}. which has\na {{#crossLink \"Stage/priority:property\"}}{{/crossLink}} value of zero.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7105073/L.png\"></img>\n\n### Example\n\nIn this example we're performing render-to-texture using {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} and\n{{#crossLink \"Texture\"}}Texture{{/crossLink}} components.\n\nNote how we use two prioritized Stages, to ensure that the {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} is\nrendered ***before*** the {{#crossLink \"Texture\"}}Texture{{/crossLink}} that consumes it.\n\n````javascript\nvar scene = new XEO.Scene();\n\n// First stage: an GameObject that renders to a ColorTarget\n\nvar stage1 = new XEO.Stage(scene, {\n  priority: 0\n  });\n\nvar geometry = new XEO.Geometry(scene); // Geometry with no parameters defaults to a 2x2x2 box\n\nvar colorTarget = new XEO.ColorTarget(scene);\n\nvar object1 = new XEO.GameObject(scene, {\n  stage: stage1,\n  geometry: geometry,\n  colorTarget: colorTarget\n  });\n\n\n// Second stage: an GameObject with a Texture that sources from the ColorTarget\n\nvar stage2 = new XEO.Stage(scene, {\n  priority: 1\n  });\n\nvar texture = new XEO.Texture(scene, {\n  target: colorTarget\n  });\n\nvar material = new XEO.Material(scene, {\n  textures: [\n      texture\n  ]\n  });\n\nvar geometry2 = new XEO.Geometry(scene);\n\nvar object2 = new XEO.GameObject(scene, {\n  stage: stage2,\n  material: material,\n  geometry: geometry2\n  });\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Stage in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Stage.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "priority",
                            "description": "The rendering priority for the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "pickable",
                            "description": "Indicates whether attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are pickable.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Stats": {
            "name": "Stats",
            "shortname": "Stats",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/stats.js",
            "line": 6,
            "description": "A **Stats** provides statistics on the parent {{#crossLink \"Scene\"}}{{/crossLink}}.\n\n<ul>\n\n<li>Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} provides a Stats instance on itself.</li>\n\n<li>You can manage your own statistics properties in a Stats, but take care not to clobber the properties that are\nprovided by the {{#crossLink \"Scene\"}}{{/crossLink}} (see table below).</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7122941/L.png\"></img>\n\n### Example\n\nThis example shows how to subscribe to the \"numGeometries' statistic, which indicates\nhow many {{#crossLink \"Geometry\"}}{{/crossLink}} components are in the parent {{#crossLink \"Scene\"}}{{/crossLink}}.\n\n````Javascript\n\nvar scene = new XEO.Scene();\n\n// Get the statistics for a Scene\nvar stats = scene.stats;\n\n// Subscribe to change of a statistic\n// The subscriber is also immediately notified of the current value via the callback.\nvar handle = configs.on(\"numGeometries\", function(value) {\n  console.log(\"Number of Geometry components in the Scene is now \" + value);\n  });\n\n// Unsubscribe\nconfigs.off(handle);\n\n// Read the current value of a statistic\n// Normally we would asynchronously subscribe with #on though, to be sure that\n// we're getting the latest changes to the statistic.\nvar numGeometries = configs.props[\"numGeometries\"];\n````\n\nAs mentioned, we can manage our own statistics as well (perhaps if we're extending xeoEngine):\n\n````Javascript\n\n// Create a statistic\nconfigs.zero(\"myStatistic\");\n\n// Increment our statistic\nconfigs.inc(\"myStatistic\");\n\n// Decrement our statistic\nconfigs.dec(\"myStatistic\");\n\n// Subscribe to change of our statistic\nhandle2 = configs.on(\"myStatistic\", function(value) {\n  console.log(\"Value of myStatistic is now \" + value);\n  });\n\n// Unsubscribe\nconfigs.off(handle2);\n\n// Read the current value of our statistic\nvar myStatistic = configs.props[\"myStatistic\"];\n````\n\n<br>\n### Scene Statistics\n\nListed below are are the statistics provided by the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\nDon't use these names for your own custom statistics properties.\n\n| Name  | Description|\n|---|---|\n| \"numGeometries\" | Number of {{#crossLink \"Geometry\"}}Geometrys{{/crossLink}} in the {{#crossLink \"Scene\"}}Scene{{/crossLink}} |\n| \"numTextures\"  | Number of {{#crossLink \"Texture\"}}Textures{{/crossLink}} in the {{#crossLink \"Scene\"}}Scene{{/crossLink}}  |\n| \"numGameObjects\"  | Number of {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} in the {{#crossLink \"Scene\"}}Scene{{/crossLink}}  |",
            "is_constructor": 1,
            "extends": "Component"
        },
        "Task": {
            "name": "Task",
            "shortname": "Task",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/task.js",
            "line": 5,
            "description": "A **Task** represents an asynchronously-running process within a {{#crossLink \"Tasks\"}}Tasks{{/crossLink}}.\n\n<img src=\"http://www.gliffy.com/go/publish/image/7123427/L.png\"></img>",
            "extends": "Component"
        },
        "Tasks": {
            "name": "Tasks",
            "shortname": "Tasks",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/tasks.js",
            "line": 6,
            "description": "A **Tasks** tracks general asynchronous tasks running within a {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\n<ul>\n<li>Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} has a Tasks component, available via the\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Scene/tasks:property\"}}tasks{{/crossLink}} property,\nwithin which it will create and destroy {{#crossLink \"Task\"}}Task{{/crossLink}} components to indicate what processes\nit's running internally.</li>\n\n<li>You can also manage your own {{#crossLink \"Task\"}}Task{{/crossLink}} components within that, to indicate what\napplication-level processes you are running.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7122907/L.png\"></img>\n\n### Example\n\nThis example shows how to manage tasks and subscribe to their life cycles.\n\n````Javascript\n\n// Create a Scene\nvar scene = new XEO.Scene();\n\n// Get the Tasks tracker\nvar tasks = scene.tasks;\n\n// Subscribe to all task creations\ntasks.on(\"started\", function(task) {\n  console.log(\"Task started: \" + task.id +\", \" + task.description);\n  });\n\n// Subscribe to all task completions\ntasks.on(\"completed\", function(task) {\n  console.log(\"Task completed: \" + task.id +\", \" + task.description);\n  });\n\n// Subscribe to all task failures\ntasks.on(\"failed\", function(task) {\n  console.log(\"Task failed: \" + task.id +\", \" + task.description);\n  });\n\n// Create and start Task \"foo\"\nvar taskFoo = tasks.create({\n  id: \"foo\", // Optional, unique ID generated automatically when omitted\n  description: \"Loading something\"\n  });\n\n// Create and start Task \"bar\"\nvar taskBar = tasks.create({\n  id: \"bar\",\n  description: \"Loading something else\"\n  });\n\n// Subscribe to completion of Task \"foo\"\ntaskFoo.on(\"completed\", function(task) {\n  console.log(\"Task completed: \" + task.id +\", \" + task.description);\n  });\n\n// Subscribe to failure of a specific task\ntaskFoo.on(\"failed\", function(task) {\n  console.log(\"Task failed: \" + task.id +\", \" + task.description);\n  });\n\n// Set Task \"foo\" as completed, via the Tasks\n// Fires the \"completed\" handler we registered above, also fires \"completed\" on the Task itself\ntasks.setCompleted(\"foo\");\n\n// Set Task \"bar\" as failed, this time directly on the Task in question\nmyTask2.setFailed();\n\n````",
            "is_constructor": 1,
            "extends": "Component"
        },
        "Texture": {
            "name": "Texture",
            "shortname": "Texture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/texture.js",
            "line": 5,
            "description": "A **Texture** specifies a texture map.\n\n<ul>\n\n<li>Textures are grouped within {{#crossLink \"Material\"}}Material{{/crossLink}}s, which are attached to\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n<li>To create a Texture from an image file, setting the Texture's {{#crossLink \"Texture/src:property\"}}{{/crossLink}}\nproperty to the image file path.</li>\n\n<li>To render color images of {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to a Texture, set the Texture's {{#crossLink \"Texture/target:property\"}}{{/crossLink}}\nproperty to a {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} that is attached to those {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n<li>Similarly, to render depth images of {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to a Texture, set the Texture's {{#crossLink \"Texture/target:property\"}}{{/crossLink}}\nproperty to a {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} that is attached to those {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.</li>\n\n<li>For special effects, we often use rendered Textures in combination with {{#crossLink \"Shader\"}}Shaders{{/crossLink}} and {{#crossLink \"Shader\"}}Stages{{/crossLink}}.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7092447/L.png\"></img>\n\n### Example\n\nThis example creates\n<ul>\n<li>three {{#crossLink \"Texture\"}}{{/crossLink}}s,</li>\n<li>a {{#crossLink \"Material\"}}{{/crossLink}} which applies the {{#crossLink \"Texture\"}}{{/crossLink}}s as diffuse, bump and specular maps,</li>\n<li>a {{#crossLink \"Lights\"}}{{/crossLink}} containing an {{#crossLink \"AmbientLight\"}}{{/crossLink}} and a {{#crossLink \"PointLight\"}}{{/crossLink}},</li>\n<li>a {{#crossLink \"Geometry\"}}{{/crossLink}} that is the default box shape, and\n<li>a {{#crossLink \"GameObject\"}}{{/crossLink}} attached to all of the above.</li>\n</ul>\n\n```` javascript\nvar scene = new XEO.Scene();\n\nvar diffuseMap = new XEO.Texture(scene, {\n    src: \"diffuseMap.jpg\"\n});\n\nvar bumpMap = new XEO.Texture(scene, {\n    src: \"bumpMap.jpg\"\n});\n\nvar specularMap = new XEO.Texture(scene, {\n    src: \"specularMap.jpg\"\n});\n\nvar material = new XEO.Material(scene, {\n    ambient: [0.3, 0.3, 0.3],\n    shininess: 30,\n    diffuseMap: diffuseMap,\n    bumpMap: bumpMap,\n    specularMap: specularMap\n});\n\nvar light1 = new XEO.PointLight(scene, {\n    pos: [0, 100, 100],\n    diffuse: [0.5, 0.7, 0.5],\n    specular: [1.0, 1.0, 1.0]\n});\n\nvar light2 = new XEO.AmbientLight(scene, {\n    ambient: [0.5, 0.7, 0.5]\n});\n\nvar lights = new XEO.Lights(scene, {\n    lights: [\n   light1,\n   light2\n    ]\n});\n\nvar geometry = new XEO.Geometry(scene); // Geometry without parameters will default to a 2x2x2 box.\n\nvar object = new XEO.GameObject(scene, {\n    lights: lights,\n    material: material,\n    geometry: geometry\n});\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Texture in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Texture.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "minFilter",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "magFilter",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "wrapS",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "wrapT",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "isDepth",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "depthMode",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "depthCompareMode",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "flipY",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "width",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "height",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "internalFormat",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "sourceFormat",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "sourceType",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "translate",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "scale",
                            "description": "",
                            "optional": true
                        },
                        {
                            "name": "rotate",
                            "description": "",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Transform": {
            "name": "Transform",
            "shortname": "Transform",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/transform.js",
            "line": 5,
            "description": "A **Transform** defines a modelling transform matrix for attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n<li>Sub-classes of Transform are: {{#crossLink \"Translate\"}}{{/crossLink}},\n{{#crossLink \"Scale\"}}{{/crossLink}}, {{#crossLink \"Rotate\"}}{{/crossLink}}, and {{#crossLink \"Quaternion\"}}{{/crossLink}}</li>\n<li>Can be connected into hierarchies with other {{#crossLink \"Transform\"}}Transforms{{/crossLink}} and sub-classes</li>\n<li>{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are connected to leaf Transforms\nin the hierarchy, and will be transformed by each Transform on the path up to the\nroot, in that order.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7123375/L.png\"></img>\n\n### Example",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Transform in the\ndefault {{#crossLink \"Scene\"}}Scene{{/crossLink}}  when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\nYou only need to supply an ID if you need to be able to find the Transform by ID within the {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Transform.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "parent",
                            "description": "ID or instance of a parent Transform within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String|XEO.Transform",
                            "optional": true
                        },
                        {
                            "name": "matrix",
                            "description": "One-dimensional, sixteen element array of elements for the Transform, an identity matrix by default.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Translate": {
            "name": "Translate",
            "shortname": "Translate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/translate.js",
            "line": 5,
            "description": "A **Translate** applies a translation transformation to associated {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n<ul>\n<li>A sub-class of {{#crossLink \"Transform\"}}{{/crossLink}}</li>\n     <li>Can be connected into hierarchies with other {{#crossLink \"Transform\"}}Transforms{{/crossLink}} and sub-classes</li>\n     <li>{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are connected to leaf {{#crossLink \"Transform\"}}Transforms{{/crossLink}}\n     in the hierarchy, and will be transformed by each {{#crossLink \"Transform\"}}{{/crossLink}} on the path up to the\n     root, in that order.</li>\n</ul>\n<img src=\"http://www.gliffy.com/go/publish/image/7430557/L.png\">\n### Example\nThis example has two {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are transformed by a hierarchy that contains\n     {{#crossLink \"Rotate\"}}{{/crossLink}}, Translate and {{#crossLink \"Scale\"}}{{/crossLink}} transforms.\n     The GameObjects share the same {{#crossLink \"Geometry\"}}{{/crossLink}}, which is the default 2x2x2 cube.<br>\n````javascript\nvar scene = new XEO.Scene();\n\nvar rotate = new XEO.Rotate(scene, {\n        xyz: [0, 1, 0], // Rotate 30 degrees about Y axis\n        angle: 30\n     });\n\nvar translate1 = new XEO.Translate(scene, {\n        parent: rotate,\n        xyz: [-5, 0, 0] // Translate along -X axis\n     });\n\nvar translate2 = new XEO.Translate(scene, {\n        parent: rotate,\n        xyz: [5, 0, 0] // Translate along +X axis\n     });\n\nvar scale = new XEO.Scale(scene, {\n        parent: translate2,\n        xyz: [1, 2, 1] // Scale x2 on Y axis\n     });\n\nvar geometry = new XEO.Geometry(scene); // Defaults to a 2x2x2 box\n\nvar gameObject1 = new XEO.GameObject(scene, {\n        transform: translate1,\n        geometry: geometry\n     });\n\nvar gameObject2 = new XEO.GameObject(scene, {\n        transform: scale,\n        geometry: geometry\n     });\n     ````\nSince everything in xeoEngine is dynamically editable, we can restructure the transform hierarchy at any time.\n\nLet's insert a {{#crossLink \"Scale\"}}{{/crossLink}} between the first Translate and the first {{#crossLink \"GameObject\"}}{{/crossLink}}:\n````javascript\nvar scale2 = new XEO.Scale(scene, {\n    parent: translate1,\n    xyz: [1, 1, 2] // Scale x2 on Z axis\n });\n\ngameObject2.transform = scale2;\n     ````\nAnd just for fun, we'll start spinning the {{#crossLink \"Rotate\"}}{{/crossLink}}:\n````javascript\n     // Rotate 0.2 degrees on each frame\n     scene.on(\"tick\", function(e) {\n    rotate.angle += 0.2;\n });\n     ````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Translate in the default\n     {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Translate.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "xyzw",
                            "description": "The translation vector",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        }
                    ]
                }
            ],
            "extends": "Transform"
        },
        "Visibility": {
            "name": "Visibility",
            "shortname": "Visibility",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "",
            "file": "src/core/visibility.js",
            "line": 6,
            "description": "A **Visibility** toggles the visibility of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n<ul>\n<li>A Visibility may be shared among multiple {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} to toggle\ntheir visibility as a group.</li>\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7103687/L.png\"></img>\n\n### Example\n\nThis example creates a Visibility that toggles the visibility of\ntwo {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\n````javascript\n// Create a scene\nvar scene = new XEO.Scene();\n\n// Create a Visibility\nvar visibility = new XEO.Visibility(scene, {\n visible: true\n  });\n\n// Create two GameObjects whose visibility will be controlled by our Visibility\n\nvar object1 = new XEO.GameObject(scene, {\n  visibility: visibility\n  });\n\nvar object2 = new XEO.GameObject(scene, {\n  visibility: visibility\n  });\n\n// Subscribe to change on the Visibility's \"visible\" property\nvar handle = visibility.on(\"visible\", function(value) {\n  //...\n  });\n\n// Hide our GameObjects by flipping the Visibility's \"visible\" property,\n// which will also call our handler\nvisibility.visible = false;\n\n// Unsubscribe from the Visibility again\nvisibility.off(handle);\n\n// When we destroy our Visibility, the GameObjects will fall back\n// on the Scene's default Visibility instance\nvisibility.destroy();\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Visibility in the default\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent scene, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Visibility.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "visible",
                            "description": "Flag which controls visibility of the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "XEO": {
            "name": "XEO",
            "shortname": "XEO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "XEO",
            "namespace": "XEO",
            "file": "src/core/xeo.js",
            "line": 1,
            "description": "The XeoEngine namespace",
            "mainName": "XEO",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "static": 1,
            "author": "xeolabs / http://xeolabs.com/"
        }
    },
    "classitems": [
        {
            "file": "src/core/math/math.js",
            "line": 41,
            "description": "Returns a new UUID.",
            "itemtype": "method",
            "name": "createUUID",
            "static": 1,
            "return": {
                "description": "string The new UUID"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 70,
            "description": "Floating-point modulus",
            "params": [
                {
                    "name": "a",
                    "description": ""
                },
                {
                    "name": "b",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 87,
            "description": "Negates a four-element vector.",
            "itemtype": "method",
            "name": "negateVec4",
            "params": [
                {
                    "name": "v",
                    "description": "Vector to negate",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 105,
            "description": "Adds one four-element vector to another.",
            "itemtype": "method",
            "name": "addVec4",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 124,
            "description": "Adds a scalar value to each element of a four-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 143,
            "description": "Adds one three-element vector to another.",
            "itemtype": "method",
            "name": "addVec3",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 161,
            "description": "Adds a scalar value to each element of a three-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 179,
            "description": "Subtracts one four-element vector from another.",
            "itemtype": "method",
            "name": "subVec4",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 198,
            "description": "Subtracts one three-element vector from another.",
            "itemtype": "method",
            "name": "subVec3",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 216,
            "description": "Subtracts one two-element vector from another.",
            "itemtype": "method",
            "name": "subVec2",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 233,
            "description": "Subtracts a scalar value from each element of a four-element vector.",
            "itemtype": "method",
            "name": "subVec4Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 252,
            "description": "Sets each element of a 4-element vector to a scalar value minus the value of that element.",
            "itemtype": "method",
            "name": "subScalarVec4",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 271,
            "description": "Multiplies one three-element vector by another.",
            "itemtype": "method",
            "name": "mulVec3",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 290,
            "description": "Multiplies each element of a four-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec34calar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 309,
            "description": "Multiplies each element of a three-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec3Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 327,
            "description": "Multiplies each element of a two-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec2Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 344,
            "description": "Divides one three-element vector by another.",
            "itemtype": "method",
            "name": "divVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 363,
            "description": "Divides one four-element vector by another.",
            "itemtype": "method",
            "name": "divVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 383,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 400,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 417,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 436,
            "params": [
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 470,
            "params": [
                {
                    "name": "u",
                    "description": "vec3"
                },
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, u otherwise"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 489,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 494,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 499,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 504,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 509,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 514,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 519,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 524,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 529,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 539,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 550,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 562,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 567,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 572,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 581,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 591,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 596,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 601,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 611,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 616,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 621,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 626,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 637,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 666,
            "params": [
                {
                    "name": "a",
                    "description": "mat4"
                },
                {
                    "name": "b",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, a otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 696,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 726,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 731,
            "params": [
                {
                    "name": "a",
                    "description": "mat4"
                },
                {
                    "name": "b",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, a otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 761,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 791,
            "params": [
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 821,
            "params": [
                {
                    "name": "a",
                    "description": "mat4"
                },
                {
                    "name": "b",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, a otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 864,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 894,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "v",
                    "description": "vec4"
                }
            ],
            "return": {
                "description": "[]"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 910,
            "params": [
                {
                    "name": "mat",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, mat otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 957,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 972,
            "params": [
                {
                    "name": "mat",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, mat otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1023,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1028,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1037,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1042,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1047,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1095,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1100,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1109,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1114,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1119,
            "params": [
                {
                    "name": "pos",
                    "description": "vec3 position of the viewer"
                },
                {
                    "name": "target",
                    "description": "vec3 point the viewer is looking at"
                },
                {
                    "name": "up",
                    "description": "vec3 pointing \"up\""
                },
                {
                    "name": "dest",
                    "description": "mat4 Optional, mat4 frustum matrix will be written into"
                }
            ],
            "return": {
                "description": "dest if specified, a new mat4 otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1212,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1217,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1249,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1285,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1313,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1330,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1342,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1373,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1393,
            "class": "math",
            "module": "XEO"
        },
        {
            "file": "src/core/utils/map.js",
            "line": 7,
            "description": "Generic map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/utils/map.js",
            "line": 13,
            "itemtype": "property",
            "name": "Items in this map",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/utils/map.js",
            "line": 21,
            "description": "Adds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/utils/map.js",
            "line": 53,
            "description": "Removes the item of the given ID from the map and returns it",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/arrayBuffer.js",
            "line": 5,
            "params": [
                {
                    "name": "gl",
                    "description": "WebGL gl"
                },
                {
                    "name": "type",
                    "description": "Eg. ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER"
                },
                {
                    "name": "values",
                    "description": "WebGL array wrapper"
                },
                {
                    "name": "numItems",
                    "description": "Count of items in array wrapper"
                },
                {
                    "name": "itemSize",
                    "description": "Size of each item"
                },
                {
                    "name": "usage",
                    "description": "Eg. STATIC_DRAW"
                }
            ],
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/arrayBuffer.js",
            "line": 16,
            "description": "True when this buffer is allocated and ready to go",
            "type": "{boolean}",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/arrayBuffer.js",
            "line": 31,
            "description": "Allocates this buffer",
            "params": [
                {
                    "name": "values",
                    "description": ""
                },
                {
                    "name": "numItems",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/arrayBuffer.js",
            "line": 54,
            "description": "Updates values within this buffer, reallocating if needed",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/arrayBuffer.js",
            "line": 78,
            "description": "Unbinds this buffer on WebGL",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/arrayBuffer.js",
            "line": 88,
            "description": "Destroys this buffer",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/attribute.js",
            "line": 5,
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/program.js",
            "line": 5,
            "description": "Wrapper for a WebGL program",
            "params": [
                {
                    "name": "gl",
                    "description": "WebGL gl"
                },
                {
                    "name": "vertex",
                    "description": "Source code for vertex shader"
                },
                {
                    "name": "fragment",
                    "description": "Source code for fragment shader"
                }
            ],
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/program.js",
            "line": 14,
            "description": "True as soon as this program is allocated and ready to go",
            "type": "{boolean}",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 7,
            "description": "True as soon as this buffer is allocated and ready to go",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 12,
            "description": "The canvas, to synch buffer size with when its dimensions change",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 17,
            "description": "WebGL context",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 22,
            "description": "Buffer resources, set up in #_touch",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 27,
            "description": "True while this buffer is bound",
            "type": "{boolean}",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 34,
            "description": "Called after WebGL context is restored.",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 44,
            "description": "Binds this buffer",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 134,
            "description": "Clears this renderbuffer",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 145,
            "description": "Reads buffer pixel at given coordinates",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 156,
            "description": "Unbinds this renderbuffer",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 164,
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/renderBuffer.js",
            "line": 186,
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/shader.js",
            "line": 5,
            "description": "A vertex/fragment shader in a program",
            "params": [
                {
                    "name": "gl",
                    "description": "WebGL gl"
                },
                {
                    "name": "type",
                    "description": "gl.VERTEX_SHADER | gl.FRAGMENT_SHADER"
                },
                {
                    "name": "source",
                    "description": "Source code for shader"
                }
            ],
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/shader.js",
            "line": 14,
            "description": "True as soon as this shader is allocated and ready to go",
            "type": "{boolean}",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/texture2d.js",
            "line": 7,
            "description": "True as soon as this texture is allocated and ready to go",
            "type": "{boolean}",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/webgl/webgl.js",
            "line": 7,
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/ambientLight.js",
            "line": 113,
            "description": "The color of this AmbientLight.\n\nFires an {{#crossLink \"AmbientLight/ambient:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ambient",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/ambientLight.js",
            "line": 127,
            "description": "Fired whenever this AmbientLight's {{#crossLink \"AmbientLight/ambient:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ambient",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "AmbientLight",
            "module": "XEO"
        },
        {
            "file": "src/core/boundary.js",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} - creates this Boundary in the\n default {{#crossLink \"Scene\"}}Scene{{/crossLink}} when omitted.",
                    "type": "Scene",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Boundary configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}, generated automatically when omitted.\n You only need to supply an ID if you need to be able to find the Clip by ID within the {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Clip.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "mode",
                            "description": "Clipping mode - \"disabled\" to clip nothing, \"inside\" to reject points inside the plane, \"outside\" to reject points outside the plane.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"disabled\""
                        }
                    ]
                },
                {
                    "name": "dir",
                    "description": "The direction of the clipping plane from the World-space origin.",
                    "type": "Array of Number",
                    "optional": true,
                    "optdefault": " [1, 0, 0]"
                },
                {
                    "name": "dist",
                    "description": "Distance to the clipping plane along the direction vector.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1.0"
                }
            ],
            "extends": "Component",
            "class": "Camera",
            "module": "XEO"
        },
        {
            "file": "src/core/camera.js",
            "line": 98,
            "description": "The projection transform for this Camera.\n\nWhen set to a null or undefined value, will default to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/project:property\"}}project{{/crossLink}}, which is\na {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.\n\nFires a {{#crossLink \"Camera/project:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "project",
            "type": "Perspective|XEO.Ortho|XEO.Frustum",
            "class": "Camera",
            "module": "XEO"
        },
        {
            "file": "src/core/camera.js",
            "line": 114,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/project:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "project",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "XEO"
        },
        {
            "file": "src/core/camera.js",
            "line": 127,
            "description": "The viewing transform for this Camera.\n\nWhen set to a null or undefined value, will default to the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s\ndefault {{#crossLink \"Scene/view:property\"}}view{{/crossLink}}, which is\na {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.\n\nFires a {{#crossLink \"Camera/view:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "view",
            "type": "Lookat",
            "class": "Camera",
            "module": "XEO"
        },
        {
            "file": "src/core/camera.js",
            "line": 143,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/view:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "view",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 95,
            "description": "Names of recognised WebGL contexts",
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 108,
            "description": "The HTML canvas. When this XEO.Canvas was configured with the ID of an existing canvas within the DOM,\nthis property will be that element, otherwise it will be a full-page canvas that this Canvas has\ncreated by default.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "final": 1,
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 118,
            "description": "The WebGL rendering context, obtained by this Canvas from the HTML 5 canvas.",
            "itemtype": "property",
            "name": "gl",
            "type": "{WebGLRenderingContext}",
            "final": 1,
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 126,
            "description": "Attributes for the WebGL context",
            "type": "{{}|*}",
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 184,
            "description": "Fired wheneber the WebGL context has been lost",
            "itemtype": "event",
            "name": "webglContextLost",
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 197,
            "description": "Fired whenever the WebGL context has been restored again after having previously being lost",
            "itemtype": "event",
            "name": "webglContextRestored",
            "params": [
                {
                    "name": "value",
                    "description": "The WebGL context object"
                }
            ],
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 218,
            "description": "Fired whenever the canvas has resized",
            "itemtype": "event",
            "name": "resized",
            "params": [
                {
                    "name": "width",
                    "description": "The new canvas width",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The new canvas height",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "The new canvas aspect ratio",
                    "type": "Number"
                }
            ],
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 234,
            "description": "Attempts to pick a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} at the given Canvas-space coordinates within the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\nIgnores {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are attached\nto either a {{#crossLink \"Stage\"}}Stage{{/crossLink}} with {{#crossLink \"Stage/pickable:property\"}}pickable{{/crossLink}}\nset *false* or a {{#crossLink \"Modes\"}}Modes{{/crossLink}} with {{#crossLink \"Modes/picking:property\"}}picking{{/crossLink}} set *false*.\n\nOn success, will fire a {{#crossLink \"Canvas/picked:event\"}}{{/crossLink}} event on this Canvas, along with\na separate {{#crossLink \"GameObject/picked:event\"}}{{/crossLink}} event on the target {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}.",
            "itemtype": "method",
            "name": "pick",
            "params": [
                {
                    "name": "canvasX",
                    "description": "X-axis Canvas coordinate.",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "Y-axis Canvas coordinate.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Pick options.",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "rayPick",
                            "description": "Whether to perform a 3D ray-intersect pick.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 253,
            "description": "Fired whenever the {{#crossLink \"Canvas/pick:method\"}}{{/crossLink}} method succeeds in picking\na {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "event",
            "name": "picked",
            "params": [
                {
                    "name": "objectId",
                    "description": "The ID of the picked {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "String"
                },
                {
                    "name": "canvasX",
                    "description": "The X-axis Canvas coordinate that was picked.",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "The Y-axis Canvas coordinate that was picked.",
                    "type": "Number"
                }
            ],
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 264,
            "description": "Creates a canvas",
            "access": "private",
            "tagname": "",
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 286,
            "description": "Initialises the WebGL context",
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/canvas.js",
            "line": 299,
            "description": "Fired whenever the canvas failed to get a WebGL context, which probably means that WebGL\nis either unsupported or has been disabled.",
            "itemtype": "event",
            "name": "webglContextFailed",
            "class": "Canvas",
            "module": "XEO"
        },
        {
            "file": "src/core/clip.js",
            "line": 111,
            "description": "The current mode of this Clip.\n\nPossible states are:\n\n<ul>\n<li>\"disabled\" - inactive</li>\n<li>\"inside\" - clipping fragments that fall within the half-space on the origin-side of the Clip plane</li>\n<li>\"outside\" - clipping fragments that fall on the other side of the Clip plane from the origin</li>\n</ul>\n\nFires a {{#crossLink \"Clip/mode:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "mode",
            "default": "\"disabled\"",
            "type": "String",
            "class": "Clip",
            "module": "XEO"
        },
        {
            "file": "src/core/clip.js",
            "line": 135,
            "description": "Fired whenever this Clip's {{#crossLink \"Clip/mode:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "mode",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Clip",
            "module": "XEO"
        },
        {
            "file": "src/core/clip.js",
            "line": 149,
            "description": "A vector emanating from the World-space origin that indicates the orientation of this Clip plane.\n\nThe Clip plane will be oriented perpendicular to this vector.\n\nFires a {{#crossLink \"Clip/dir:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dir",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "Clip",
            "module": "XEO"
        },
        {
            "file": "src/core/clip.js",
            "line": 167,
            "description": "Fired whenever this Clip's {{#crossLink \"Clip/dir:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dir",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Clip",
            "module": "XEO"
        },
        {
            "file": "src/core/clip.js",
            "line": 181,
            "description": "The position of this Clip along the vector indicated by {{#crossLink \"Clip/dir:property\"}}{{/crossLink}}.\n\nThis is the distance of the Clip plane from the World-space origin.\n\nFires a {{#crossLink \"Clip/dist:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dist",
            "default": "1.0",
            "type": "Number",
            "class": "Clip",
            "module": "XEO"
        },
        {
            "file": "src/core/clip.js",
            "line": 199,
            "description": "Fired whenever this Clip's {{#crossLink \"Clip/dist:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dist",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Clip",
            "module": "XEO"
        },
        {
            "file": "src/core/clips.js",
            "line": 110,
            "description": "The clipping planes contained within this Clips.\n\nFires a {{#crossLink \"Clips/clips:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clips",
            "default": "[]",
            "type": "Array(XEO.Clip)",
            "class": "Clips",
            "module": "XEO"
        },
        {
            "file": "src/core/clips.js",
            "line": 189,
            "description": "Fired whenever this Clips' {{#crossLink \"Clips/clips:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clips",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of XEO.Clip"
                }
            ],
            "class": "Clips",
            "module": "XEO"
        },
        {
            "file": "src/core/colorBuf.js",
            "line": 72,
            "description": "Indicates if blending is enabled for this ColorBuf.\n\nFires a {{#crossLink \"ColorBuf/blendEnabled:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "blendEnabled",
            "default": "true",
            "type": "Boolean",
            "class": "ColorBuf",
            "module": "XEO"
        },
        {
            "file": "src/core/colorBuf.js",
            "line": 88,
            "description": "Fired whenever this ColorBuf's {{#crossLink \"ColorBuf/blendEnabled:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "blendEnabled",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "ColorBuf",
            "module": "XEO"
        },
        {
            "file": "src/core/colorBuf.js",
            "line": 102,
            "description": "Specifies whether red, green, blue, and alpha can or cannot be written into the frame buffer.\n\nFires a {{#crossLink \"ColorBuf/colorMask:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colorMask",
            "default": "[true, true, true, true]",
            "type": "{Four element array of Boolean}",
            "class": "ColorBuf",
            "module": "XEO"
        },
        {
            "file": "src/core/colorBuf.js",
            "line": 118,
            "description": "Fired whenever this ColorBuf's {{#crossLink \"ColorBuf/colorMask:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colorMask",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Four element array of Boolean"
                }
            ],
            "class": "ColorBuf",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 208,
            "description": "The parent {{#crossLink \"Scene\"}}{{/crossLink}} that contains this Component.",
            "itemtype": "property",
            "name": "scene",
            "type": "{Scene}",
            "final": 1,
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 247,
            "description": "Metadata on this component.\n\nFires a {{#crossLink \"Component/metadata:event\"}}{{/crossLink}} event on this Component when changed.",
            "itemtype": "property",
            "name": "metadata",
            "type": "Object",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 257,
            "description": "Unique ID for this Component within its parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 266,
            "description": "True as soon as this Component has been destroyed",
            "itemtype": "property",
            "name": "destroyed",
            "type": "Boolean",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 313,
            "description": "Type code for this Component.\n\nFor example: \"ambientLight\", \"colorTarget\", \"lights\" etc.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "final": 1,
            "access": "public",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 325,
            "description": "JavaScript class name for this Component.\n\nFor example: \"XEO.AmbientLight\", \"XEO.ColorTarget\", \"XEO.Lights\" etc.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 336,
            "description": "Initializes this component",
            "params": [
                {
                    "name": "cfg",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 344,
            "description": "Fires an event on this component.\n\nNotifies existing subscribers to the event, retains the event to give to\nany subsequent notifications on that location as they are made.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event",
                    "type": "GameObject"
                },
                {
                    "name": "forget",
                    "description": "When true, does not retain for subsequent subscribers",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 369,
            "description": "Subscribes to an event on this component.\n\nThis is the primary way to read data from SceneHub. Your callback will be triggered for\nthe initial data and again whenever the data changes. Use {@link #off} to stop receiving updates.</p>\n\nThe callback is be called with this component as scope.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "Publication event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Handle to the subscription, which may be used to unsubscribe with {@link #off}.",
                "type": "String"
            },
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 398,
            "description": "Cancels an event subscription that was previously made with {{#crossLink \"Component/on:method\"}}{{/crossLink}} or\n{{#crossLink \"Component/once:method\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "handle",
                    "description": "Publication handle",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 417,
            "description": "Subscribes to the next occurrence of the given event, then un-subscribes as soon as the event is handled.\n\nThis is equivalent to calling {{#crossLink \"Component/on:method\"}}{{/crossLink}}, and then calling\n{{#crossLink \"Component/off:method\"}}{{/crossLink}} inside the callback function.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "Data event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function(data)"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 436,
            "description": "Logs a console debugging message for this component.\n\nThe console message will have this format: *````[LOG] <component id>: <message>````*\n\nAlso fires the message as a {{#crossLink \"Scene/log:event\"}}{{/crossLink}} event on the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 453,
            "description": "Logs an error for this component to the JavaScript console.\n\nThe console message will have this format: *````[ERROR] <component id>: <message>````*\n\nAlso fires the message as an {{#crossLink \"Scene/error:event\"}}{{/crossLink}} event on the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 470,
            "description": "Logs a warning for this component to the JavaScript console.\n\nThe console message will have this format: *````[WARN] <component id>: <message>````*\n\nAlso fires the message as a {{#crossLink \"Scene/warn:event\"}}{{/crossLink}} event on the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "method",
            "name": "warn",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 487,
            "description": "Adds a child component to this.\nWhen component not given, attaches the scene's default instance for the given type.\nPublishes the new child component on this component, keyed to the given type.",
            "params": [
                {
                    "name": "type",
                    "description": "component type",
                    "type": "String"
                },
                {
                    "name": "child",
                    "description": "The component",
                    "type": "Component"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 608,
            "description": "Destroys this component.\n\nFires a {{#crossLink \"Component/destroyed:event\"}}{{/crossLink}} event on this Component.\n\nAutomatically disassociates this component from other components, causing them to fall back on any\ndefaults that this component overrode on them.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/component.js",
            "line": 638,
            "description": "Fired when this Component is destroyed.",
            "itemtype": "event",
            "name": "destroyed",
            "class": "Component",
            "module": "XEO"
        },
        {
            "file": "src/core/depthBuf.js",
            "line": 67,
            "description": "The clear depth for this DepthBuf.\n\nFires a {{#crossLink \"DepthBuf/clearDepth:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clearDepth",
            "default": "1.0",
            "type": "Number",
            "class": "DepthBuf",
            "module": "XEO"
        },
        {
            "file": "src/core/depthBuf.js",
            "line": 83,
            "description": "Fired whenever this DepthBuf's {{#crossLink \"DepthBuf/clearDepth:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clearDepth",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "DepthBuf",
            "module": "XEO"
        },
        {
            "file": "src/core/depthBuf.js",
            "line": 97,
            "description": "The depth function for this DepthBuf.\n\nAccepted values are:\n\n<ul>\n    <li>\"less\"</li>\n    <li>\"equal\"</li>\n    <li>\"lequal\"</li>\n    <li>\"greater\"</li>\n    <li>\"notequal\"</li>\n    <li>\"gequal\"</li>\n</ul>\n\nFires a {{#crossLink \"DepthBuf/depthFunc:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "depthFunc",
            "default": "\"less\"",
            "type": "Number",
            "class": "DepthBuf",
            "module": "XEO"
        },
        {
            "file": "src/core/depthBuf.js",
            "line": 131,
            "description": "Fired whenever this DepthBuf's {{#crossLink \"DepthBuf/depthFunc:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "depthFunc",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "DepthBuf",
            "module": "XEO"
        },
        {
            "file": "src/core/depthBuf.js",
            "line": 145,
            "description": "Lookup GL depth function enums",
            "access": "private",
            "tagname": "",
            "class": "DepthBuf",
            "module": "XEO"
        },
        {
            "file": "src/core/dirLight.js",
            "line": 122,
            "description": "The direction of this DirLight.\n\nFires a {{#crossLink \"DirLight/dir:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "dir",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "DirLight",
            "module": "XEO"
        },
        {
            "file": "src/core/dirLight.js",
            "line": 138,
            "description": "Fired whenever this DirLight's  {{#crossLink \"DirLight/dir:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "dir",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "XEO"
        },
        {
            "file": "src/core/dirLight.js",
            "line": 151,
            "description": "The diffuse color of this DirLight.\n\nFires a {{#crossLink \"DirLight/diffuse:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuse",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "DirLight",
            "module": "XEO"
        },
        {
            "file": "src/core/dirLight.js",
            "line": 167,
            "description": "Fired whenever this DirLight's  {{#crossLink \"DirLight/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuse",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "XEO"
        },
        {
            "file": "src/core/dirLight.js",
            "line": 180,
            "description": "The specular color of this DirLight.\n\nFires a {{#crossLink \"DirLight/specular:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specular",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "DirLight",
            "module": "XEO"
        },
        {
            "file": "src/core/dirLight.js",
            "line": 196,
            "description": "Fired whenever this DirLight's  {{#crossLink \"DirLight/specular:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specular",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "XEO"
        },
        {
            "file": "src/core/dirLight.js",
            "line": 209,
            "description": "Specifies which coordinate space this DirLight is in.\n\nSupported values are:\n\n<ul>\n<li>\"view\" - View space, aligned within the view volume as if fixed to the viewer's head</li>\n<li>\"world\" - World space, fixed within the world, moving within the view volume with respect to camera</li>\n</ul>\n\nFires a {{#crossLink \"DirLight/space:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "DirLight",
            "module": "XEO"
        },
        {
            "file": "src/core/dirLight.js",
            "line": 235,
            "description": "Fired whenever this DirLight's {{#crossLink \"DirLight/space:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "space",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "DirLight",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 123,
            "description": "Position of the left plane on the View-space X-axis.\n\nFires a {{#crossLink \"Frustum/left:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "left",
            "default": "-1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 140,
            "description": "Fired whenever this Frustum's   {{#crossLink \"Frustum/left:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "left",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 153,
            "description": "Position of the right plane on the View-space X-axis.\nFires a {{#crossLink \"Frustum/right:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "right",
            "default": "1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 168,
            "description": "this Frustum's          * @event right\n* @param value The property's new value",
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 180,
            "description": "Position of the top plane on the View-space Y-axis.\nFires a {{#crossLink \"Frustum/top:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "top",
            "default": "1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 195,
            "description": "Fired whenever this Frustum's   {{#crossLink \"Frustum/top:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "top",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 208,
            "description": "Position of the bottom plane on the View-space Y-axis.\nFires a {{#crossLink \"Frustum/bottom:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "bottom",
            "default": "-1.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 223,
            "description": "Fired whenever this Frustum's   {{#crossLink \"Frustum/bottom:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "bottom",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 236,
            "description": "Position of the near plane on the positive View-space Z-axis.\nFires a {{#crossLink \"Frustum/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 251,
            "description": "Fired whenever this Frustum's   {{#crossLink \"Frustum/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 264,
            "description": "Position of the far plane on the positive View-space Z-axis.\nFires a {{#crossLink \"Frustum/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000.0",
            "type": "Number",
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/frustum.js",
            "line": 279,
            "description": "Fired whenever this Frustum's  {{#crossLink \"Frustum/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Frustum",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 59,
            "description": "Fired when this GameObject is *picked* via a call to the {{#crossLink \"Canvas/pick:method\"}}{{/crossLink}} method\non the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas {{/crossLink}}.",
            "itemtype": "event",
            "name": "picked",
            "params": [
                {
                    "name": "objectId",
                    "description": "The ID of this GameObject.",
                    "type": "String"
                },
                {
                    "name": "canvasX",
                    "description": "The X-axis Canvas coordinate that was picked.",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "The Y-axis Canvas coordinate that was picked.",
                    "type": "Number"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 99,
            "description": "The {{#crossLink \"Camera\"}}Camera{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/camera:property\"}}camera{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/camera:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 114,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/camera:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "camera",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 127,
            "description": "The {{#crossLink \"Clips\"}}Clips{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/clips:property\"}}clips{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/clips:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clips",
            "type": "Clips",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 142,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/clips:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clips",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 155,
            "description": "The {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/colorTarget:property\"}}colorTarget{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/colorTarget:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colorTarget",
            "type": "ColorTarget",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 170,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/colorTarget:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colorTarget",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 183,
            "description": "The {{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/colorBuf:property\"}}colorBuf{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/colorBuf:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colorBuf",
            "type": "ColorBuf",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 198,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/colorBuf:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colorBuf",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 211,
            "description": "The {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/depthTarget:property\"}}depthTarget{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/depthTarget:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "depthTarget",
            "type": "DepthTarget",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 226,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/depthTarget:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "depthTarget",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 239,
            "description": "The {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/depthBuf:property\"}}depthBuf{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/depthBuf:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "depthBuf",
            "type": "DepthBuf",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 254,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/depthBuf:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "depthBuf",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 267,
            "description": "The {{#crossLink \"Visibility\"}}Visibility{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/visibility:property\"}}visibility{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/visibility:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visibility",
            "type": "Visibility",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 282,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/visibility:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visibility",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 295,
            "description": "The {{#crossLink \"Modes\"}}Modes{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/modes:property\"}}modes{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/modes:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "modes",
            "type": "Modes",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 310,
            "description": "Fired whenever this GameObject's {{#crossLink \"GameObject/modes:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "modes",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 323,
            "description": "The {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/geometry:property\"}}camera{{/crossLink}}\n(a simple box) when set to a null or undefined value.\n\nFires a {{#crossLink \"GameObject/geometry:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "geometry",
            "type": "Geometry",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 338,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/geometry:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visibility",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 351,
            "description": "The {{#crossLink \"Layer\"}}Layer{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/layer:property\"}}layer{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/layer:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "layer",
            "type": "Layer",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 366,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/layer:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "layer",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 379,
            "description": "The {{#crossLink \"Lights\"}}Lights{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/lights:property\"}}lights{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/lights:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "lights",
            "type": "Lights",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 394,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/lights:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "lights",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 407,
            "description": "The {{#crossLink \"Material\"}}Material{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/material:property\"}}material{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/material:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "material",
            "type": "Material",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 422,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/material:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "material",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 435,
            "description": "The {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/morphTargets:property\"}}morphTargets{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/morphTargets:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "morphTargets",
            "type": "MorphTargets",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 450,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/morphTargets:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "morphTargets",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 463,
            "description": "The {{#crossLink \"Reflect\"}}Reflect{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/reflect:property\"}}reflect{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/reflect:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflect",
            "type": "Reflect",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 478,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/reflect:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflect",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 491,
            "description": "The {{#crossLink \"Shader\"}}Shader{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/shader:property\"}}shader{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/shader:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shader",
            "type": "Shader",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 506,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/shader:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shader",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 519,
            "description": "The {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/shaderParams:property\"}}shaderParams{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/shaderParams:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shaderParams",
            "type": "ShaderParams",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 534,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/shaderParams:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shaderParams",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 547,
            "description": "The {{#crossLink \"Stage\"}}Stage{{/crossLink}} attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/stage:property\"}}stage{{/crossLink}} when set to\na null or undefined value.\n\nFires a {{#crossLink \"GameObject/stage:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "stage",
            "type": "Stage",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 562,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/stage:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "stage",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 575,
            "description": "The modelling transform attached to this GameObject.\n\nMust be within the same {{#crossLink \"Scene\"}}Scene{{/crossLink}} as this GameObject. Defaults to the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s default {{#crossLink \"Scene/transform:property\"}}transform{{/crossLink}}\n(an identity matrix) when set to a null or undefined value.\n\nFires a {{#crossLink \"GameObject/transform:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "transform",
            "type": "Component",
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/gameObject.js",
            "line": 591,
            "description": "Fired whenever this GameObject's  {{#crossLink \"GameObject/transform:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "GameObject",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 263,
            "description": "The Geometry's primitive type.\n\nValid types are: 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.\n\nFires a {{#crossLink \"Geometry/primitive:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "primitive",
            "default": "\"triangles\"",
            "type": "String",
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 312,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/primitive:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "primitive",
            "type": "String",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 326,
            "description": "The Geometry's positions array.\n\nFires a {{#crossLink \"Geometry/positions:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "positions",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 339,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/positions:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "positions",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 351,
            "description": "The Geometry's normal vectors array.\n\nFires a {{#crossLink \"Geometry/normals:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "normals",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 364,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/normals:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "normals",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 375,
            "description": "The Geometry's UV coordinate array.\n\nFires a {{#crossLink \"Geometry/uv:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "uv",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 388,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/uv:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "uv",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 400,
            "description": "The Geometry's second UV coordinate array.\n\nFires a {{#crossLink \"Geometry/uv2:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "uv2",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 413,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/uv2:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "uv2",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 424,
            "description": "The Geometry's vertex colors array.\n\nFires a {{#crossLink \"Geometry/colors:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "colors",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 437,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/colors:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "colors",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 448,
            "description": "The Geometry's indices array.\n\nFires a {{#crossLink \"Geometry/indices:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "indices",
            "default": "null",
            "type": "{Array of Number}",
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 461,
            "description": "Fired whenever this Geometry's {{#crossLink \"Geometry/indices:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "indices",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 496,
            "access": "private",
            "tagname": "",
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/geometry.js",
            "line": 556,
            "description": "Builds vertex tangent vectors from positions, UVs and indices\n\nBased on code by @rollokb, in his fork of webgl-obj-loader:\nhttps://github.com/rollokb/webgl-obj-loader",
            "access": "private",
            "tagname": "",
            "class": "Geometry",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 94,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 100,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 106,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 112,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 118,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 124,
            "type": "{boolean}",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 145,
            "description": "Fired whenever a key is pressed while the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keydown",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 170,
            "description": "Fired whenever a key is released while the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keyup",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 201,
            "description": "Fired whenever the mouse is pressed over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 230,
            "description": "Fired whenever the mouse is released over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseup",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 261,
            "description": "Fired whenever the mouse is double-clicked over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "dblclick",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 277,
            "description": "Fired whenever the mouse is moved over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 292,
            "description": "Fired whenever the mouse wheel is moved over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousewheel",
            "params": [
                {
                    "name": "event",
                    "description": "The mouse wheeel event,"
                },
                {
                    "name": "d",
                    "description": "The mouse wheel delta,",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 317,
            "description": "Fired whenever the mouse is clicked over the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseclicked",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 352,
            "description": "Enable or disable all input handlers",
            "params": [
                {
                    "name": "enable",
                    "description": ""
                }
            ],
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 365,
            "description": "Code for the BACKSPACE key.",
            "itemtype": "property",
            "name": "KEY_BACKSPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 373,
            "description": "Code for the TAB key.",
            "itemtype": "property",
            "name": "KEY_TAB",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 381,
            "description": "Code for the ENTER key.",
            "itemtype": "property",
            "name": "KEY_ENTER",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 389,
            "description": "Code for the SHIFT key.",
            "itemtype": "property",
            "name": "KEY_SHIFT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 397,
            "description": "Code for the CTRL key.",
            "itemtype": "property",
            "name": "KEY_CTRL",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 405,
            "description": "Code for the ALT key.",
            "itemtype": "property",
            "name": "KEY_ALT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 413,
            "description": "Code for the PAUSE_BREAK key.",
            "itemtype": "property",
            "name": "KEY_PAUSE_BREAK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 421,
            "description": "Code for the CAPS_LOCK key.",
            "itemtype": "property",
            "name": "KEY_CAPS_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 429,
            "description": "Code for the ESCAPE key.",
            "itemtype": "property",
            "name": "KEY_ESCAPE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 437,
            "description": "Code for the PAGE_UP key.",
            "itemtype": "property",
            "name": "KEY_PAGE_UP",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 445,
            "description": "Code for the PAGE_DOWN key.",
            "itemtype": "property",
            "name": "KEY_PAGE_DOWN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 453,
            "description": "Code for the END key.",
            "itemtype": "property",
            "name": "KEY_END",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 461,
            "description": "Code for the HOME key.",
            "itemtype": "property",
            "name": "KEY_HOME",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 469,
            "description": "Code for the LEFT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 477,
            "description": "Code for the UP_ARROW key.",
            "itemtype": "property",
            "name": "KEY_UP_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 485,
            "description": "Code for the RIGHT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 493,
            "description": "Code for the DOWN_ARROW key.",
            "itemtype": "property",
            "name": "KEY_DOWN_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 501,
            "description": "Code for the INSERT key.",
            "itemtype": "property",
            "name": "KEY_INSERT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 509,
            "description": "Code for the DELETE key.",
            "itemtype": "property",
            "name": "KEY_DELETE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 517,
            "description": "Code for the 0 key.",
            "itemtype": "property",
            "name": "KEY_NUM_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 525,
            "description": "Code for the 1 key.",
            "itemtype": "property",
            "name": "KEY_NUM_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 533,
            "description": "Code for the 2 key.",
            "itemtype": "property",
            "name": "KEY_NUM_2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 541,
            "description": "Code for the 3 key.",
            "itemtype": "property",
            "name": "KEY_NUM_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 549,
            "description": "Code for the 4 key.",
            "itemtype": "property",
            "name": "KEY_NUM_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 557,
            "description": "Code for the 5 key.",
            "itemtype": "property",
            "name": "KEY_NUM_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 565,
            "description": "Code for the 6 key.",
            "itemtype": "property",
            "name": "KEY_NUM_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 573,
            "description": "Code for the 7 key.",
            "itemtype": "property",
            "name": "KEY_NUM_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 581,
            "description": "Code for the 8 key.",
            "itemtype": "property",
            "name": "KEY_NUM_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 589,
            "description": "Code for the 9 key.",
            "itemtype": "property",
            "name": "KEY_NUM_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 597,
            "description": "Code for the A key.",
            "itemtype": "property",
            "name": "KEY_A",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 605,
            "description": "Code for the B key.",
            "itemtype": "property",
            "name": "KEY_B",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 613,
            "description": "Code for the C key.",
            "itemtype": "property",
            "name": "KEY_C",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 621,
            "description": "Code for the D key.",
            "itemtype": "property",
            "name": "KEY_D",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 629,
            "description": "Code for the E key.",
            "itemtype": "property",
            "name": "KEY_E",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 637,
            "description": "Code for the F key.",
            "itemtype": "property",
            "name": "KEY_F",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 645,
            "description": "Code for the G key.",
            "itemtype": "property",
            "name": "KEY_G",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 653,
            "description": "Code for the H key.",
            "itemtype": "property",
            "name": "KEY_H",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 661,
            "description": "Code for the I key.",
            "itemtype": "property",
            "name": "KEY_I",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 669,
            "description": "Code for the J key.",
            "itemtype": "property",
            "name": "KEY_J",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 677,
            "description": "Code for the K key.",
            "itemtype": "property",
            "name": "KEY_K",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 685,
            "description": "Code for the L key.",
            "itemtype": "property",
            "name": "KEY_L",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 693,
            "description": "Code for the M key.",
            "itemtype": "property",
            "name": "KEY_M",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 701,
            "description": "Code for the N key.",
            "itemtype": "property",
            "name": "KEY_N",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 709,
            "description": "Code for the O key.",
            "itemtype": "property",
            "name": "KEY_O",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 717,
            "description": "Code for the P key.",
            "itemtype": "property",
            "name": "KEY_P",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 725,
            "description": "Code for the Q key.",
            "itemtype": "property",
            "name": "KEY_Q",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 733,
            "description": "Code for the R key.",
            "itemtype": "property",
            "name": "KEY_R",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 741,
            "description": "Code for the S key.",
            "itemtype": "property",
            "name": "KEY_S",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 749,
            "description": "Code for the T key.",
            "itemtype": "property",
            "name": "KEY_T",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 757,
            "description": "Code for the U key.",
            "itemtype": "property",
            "name": "KEY_U",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 765,
            "description": "Code for the V key.",
            "itemtype": "property",
            "name": "KEY_V",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 773,
            "description": "Code for the W key.",
            "itemtype": "property",
            "name": "KEY_W",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 781,
            "description": "Code for the X key.",
            "itemtype": "property",
            "name": "KEY_X",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 789,
            "description": "Code for the Y key.",
            "itemtype": "property",
            "name": "KEY_Y",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 797,
            "description": "Code for the Z key.",
            "itemtype": "property",
            "name": "KEY_Z",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 805,
            "description": "Code for the LEFT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 813,
            "description": "Code for the RIGHT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 821,
            "description": "Code for the SELECT key.",
            "itemtype": "property",
            "name": "KEY_SELECT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 829,
            "description": "Code for the number pad 0 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 837,
            "description": "Code for the number pad 1 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 845,
            "description": "Code for the number pad 2 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD 2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 853,
            "description": "Code for the number pad 3 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 861,
            "description": "Code for the number pad 4 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 869,
            "description": "Code for the number pad 5 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 877,
            "description": "Code for the number pad 6 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 885,
            "description": "Code for the number pad 7 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 893,
            "description": "Code for the number pad 8 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 901,
            "description": "Code for the number pad 9 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 909,
            "description": "Code for the MULTIPLY key.",
            "itemtype": "property",
            "name": "KEY_MULTIPLY",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 917,
            "description": "Code for the ADD key.",
            "itemtype": "property",
            "name": "KEY_ADD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 925,
            "description": "Code for the SUBTRACT key.",
            "itemtype": "property",
            "name": "KEY_SUBTRACT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 933,
            "description": "Code for the DECIMAL POINT key.",
            "itemtype": "property",
            "name": "KEY_DECIMAL_POINT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 941,
            "description": "Code for the DIVIDE key.",
            "itemtype": "property",
            "name": "KEY_DIVIDE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 949,
            "description": "Code for the F1 key.",
            "itemtype": "property",
            "name": "KEY_F1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 957,
            "description": "Code for the F2 key.",
            "itemtype": "property",
            "name": "KEY_F2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 965,
            "description": "Code for the F3 key.",
            "itemtype": "property",
            "name": "KEY_F3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 973,
            "description": "Code for the F4 key.",
            "itemtype": "property",
            "name": "KEY_F4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 981,
            "description": "Code for the F5 key.",
            "itemtype": "property",
            "name": "KEY_F5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 989,
            "description": "Code for the F6 key.",
            "itemtype": "property",
            "name": "KEY_F6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 997,
            "description": "Code for the F7 key.",
            "itemtype": "property",
            "name": "KEY_F7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1005,
            "description": "Code for the F8 key.",
            "itemtype": "property",
            "name": "KEY_F8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1013,
            "description": "Code for the F9 key.",
            "itemtype": "property",
            "name": "KEY_F9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1021,
            "description": "Code for the F10 key.",
            "itemtype": "property",
            "name": "KEY_F10",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1029,
            "description": "Code for the F11 key.",
            "itemtype": "property",
            "name": "KEY_F11",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1037,
            "description": "Code for the F12 key.",
            "itemtype": "property",
            "name": "KEY_F12",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1045,
            "description": "Code for the NUM_LOCK key.",
            "itemtype": "property",
            "name": "KEY_NUM_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1053,
            "description": "Code for the SCROLL_LOCK key.",
            "itemtype": "property",
            "name": "KEY_SCROLL_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1061,
            "description": "Code for the SEMI_COLON key.",
            "itemtype": "property",
            "name": "KEY_SEMI_COLON",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1069,
            "description": "Code for the EQUAL_SIGN key.",
            "itemtype": "property",
            "name": "KEY_EQUAL_SIGN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1077,
            "description": "Code for the COMMA key.",
            "itemtype": "property",
            "name": "KEY_COMMA",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1085,
            "description": "Code for the DASH key.",
            "itemtype": "property",
            "name": "KEY_DASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1093,
            "description": "Code for the PERIOD key.",
            "itemtype": "property",
            "name": "KEY_PERIOD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1101,
            "description": "Code for the FORWARD_SLASH key.",
            "itemtype": "property",
            "name": "KEY_FORWARD_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1109,
            "description": "Code for the GRAVE_ACCENT key.",
            "itemtype": "property",
            "name": "KEY_GRAVE_ACCENT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1117,
            "description": "Code for the OPEN_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_OPEN_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1125,
            "description": "Code for the BACK_SLASH key.",
            "itemtype": "property",
            "name": "KEY_BACK_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1133,
            "description": "Code for the CLOSE_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_CLOSE_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1141,
            "description": "Code for the SINGLE_QUOTE key.",
            "itemtype": "property",
            "name": "KEY_SINGLE_QUOTE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/input.js",
            "line": 1149,
            "description": "Code for the SPACE key.",
            "itemtype": "property",
            "name": "KEY_SPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "XEO"
        },
        {
            "file": "src/core/layer.js",
            "line": 65,
            "description": "Indicates a *layer* rendering priority for the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nEach GameObject is also attached to a {{#crossLink \"Stage\"}}Stage{{/crossLink}}, which sets a *stage* rendering\npriority via its {{#crossLink \"Stage/priority:property\"}}priority{{/crossLink}} property.\n\nFires a {{#crossLink \"Layer/priority:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "priority",
            "default": "0",
            "type": "Number",
            "class": "Layer",
            "module": "XEO"
        },
        {
            "file": "src/core/layer.js",
            "line": 84,
            "description": "Fired whenever this Layer's  {{#crossLink \"Layer/priority:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "priority",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Layer",
            "module": "XEO"
        },
        {
            "file": "src/core/lookat.js",
            "line": 122,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/matrix:property\"}}{{/crossLink}} property is regenerated.",
            "itemtype": "event",
            "name": "matrix",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "XEO"
        },
        {
            "file": "src/core/lookat.js",
            "line": 137,
            "description": "Position of the eye.\nFires an {{#crossLink \"Lookat/eye:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "eye",
            "default": "[0,0,-10]",
            "type": "Array(Number)",
            "class": "Lookat",
            "module": "XEO"
        },
        {
            "file": "src/core/lookat.js",
            "line": 152,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/eye:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "eye",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "XEO"
        },
        {
            "file": "src/core/lookat.js",
            "line": 165,
            "description": "Position of the point-of-interest.\nFires a {{#crossLink \"Lookat/look:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "look",
            "default": "[0,0,0]",
            "type": "Array(Number)",
            "class": "Lookat",
            "module": "XEO"
        },
        {
            "file": "src/core/lookat.js",
            "line": 180,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/look:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "look",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "XEO"
        },
        {
            "file": "src/core/lookat.js",
            "line": 193,
            "description": "Direction of the \"up\" vector.\nFires an {{#crossLink \"Lookat/up:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "up",
            "default": "[0,1,0]",
            "type": "Array(Number)",
            "class": "Lookat",
            "module": "XEO"
        },
        {
            "file": "src/core/lookat.js",
            "line": 208,
            "description": "Fired whenever this Lookat's  {{#crossLink \"Lookat/up:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "up",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Lookat",
            "module": "XEO"
        },
        {
            "file": "src/core/lookat.js",
            "line": 221,
            "description": "The matrix for this viewing transform (read only). After any update to the\n{{#crossLink \"Lookat/look:event\"}}{{/crossLink}}, {{#crossLink \"Lookat/eye:event\"}}{{/crossLink}} or\n{{#crossLink \"Lookat/up:event\"}}{{/crossLink}} properties, this will be lazy-regenerated when next read, or\non the next {{#crossLink \"Scene/tick:event\"}}{{/crossLink}} event from the parent\n{{#crossLink \"Scene\"}}Scene{{/crossLink}}, whichever happens first. Whever this property is regenerated, it is\nfired in a {{#crossLink \"Lookat/matrix:event\"}}{{/crossLink}} event.",
            "itemtype": "property",
            "name": "matrix",
            "type": "Array(Number)",
            "class": "Lookat",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 152,
            "description": "The Material's ambient color, which is multiplied by the {{#crossLink \"AmbientLight/ambient:property\"}}{{/crossLink}}\nproperty of the {{#crossLink \"AmbientLight\"}}AmbientLight{{/crossLink}}.\n\nFires a {{#crossLink \"Material/ambient:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ambient",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 169,
            "description": "Fired whenever this Material's {{#crossLink \"Material/ambient:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ambient",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 182,
            "description": "The Material's diffuse color.\n\nThis property may be overridden by {{#crossLink \"Material/diffuseMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Material/diffuse:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuse",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 200,
            "description": "Fired whenever this Material's {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuse",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 213,
            "description": "The material's specular color.\n\nThis property may be overridden by {{#crossLink \"Material/specularMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Material/specular:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specular",
            "default": "[0.3, 0.3, 0.3]",
            "type": "Array(Number)",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 231,
            "description": "Fired whenever this Material's {{#crossLink \"Material/specular:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specular",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 244,
            "description": "The Material's emissive color.\n\nThis property may be overridden by {{#crossLink \"Material/emissiveMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Material/emissive:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissive",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 262,
            "description": "Fired whenever this Material's {{#crossLink \"Material/emissive:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissive",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 275,
            "description": "Factor in the range [0..1] indicating how transparent the Material is.\n\nA value of 0.0 indicates fully transparent, 1.0 is fully opaque.\n\nAttached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} will appear transparent only if they are also attached\nto {{#crossLink \"Modes\"}}Modes{{/crossLink}} that have {{#crossLink \"Modes/transparent:property\"}}transparent{{/crossLink}}\nset to **true**.\n\nThis property may be overridden by {{#crossLink \"Material/opacityMap:property\"}}{{/crossLink}}.\n\nFires an {{#crossLink \"Material/opacity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "opacity",
            "default": "1.0",
            "type": "Number",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 299,
            "description": "Fired whenever this Material's {{#crossLink \"Material/opacity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "opacity",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 312,
            "description": "A factor in range [0..128] that determines the size and sharpness of the specular highlights create by this Material.\n\nLarger values produce smaller, sharper highlights. A value of 0.0 gives very large highlights that are almost never\ndesirable. Try values close to 10 for a larger, fuzzier highlight and values of 100 or more for a small, sharp\nhighlight.\n\nFires a {{#crossLink \"Material/shininess:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "shininess",
            "default": "30.0",
            "type": "Number",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 332,
            "description": "Fired whenever this Material's {{#crossLink \"Material/shininess:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "shininess",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 345,
            "description": "Scalar in range 0-1 that controls how much {{#crossLink \"CubeMap\"}}CubeMap{{/crossLink}} is reflected by this Material.\n\nThe surface will be non-reflective when this is 0, and completely mirror-like when it is 1.0.\n\nThis property may be overridden by {{#crossLink \"Material/reflectivityMap:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Material/reflectivity:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflectivity",
            "default": "1.0",
            "type": "Number",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 365,
            "description": "Fired whenever this Material's {{#crossLink \"Material/reflectivity:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflectivity",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 378,
            "description": "A diffuse {{#crossLink \"Texture\"}}{{/crossLink}} attached to this Material.\n\nThis property overrides {{#crossLink \"Material/diffuseMap:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"Material/diffuseMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuseMap",
            "default": "null",
            "type": "{Texture}",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 394,
            "description": "Fired whenever this Material's {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuseMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 406,
            "description": "A specular {{#crossLink \"Texture\"}}{{/crossLink}} attached to this Material.\n\nThis property overrides {{#crossLink \"Material/specular:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"Material/specularMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specularMap",
            "default": "null",
            "type": "{Texture}",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 422,
            "description": "Fired whenever this Material's {{#crossLink \"Material/specularMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specularMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 434,
            "description": "An emissive {{#crossLink \"Texture\"}}{{/crossLink}} attached to this Material.\n\nThis property overrides {{#crossLink \"Material/emissive:property\"}}{{/crossLink}} when not null or undefined.\n\nFires an {{#crossLink \"Material/emissiveMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "emissiveMap",
            "default": "null",
            "type": "{Texture}",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 450,
            "description": "Fired whenever this Material's {{#crossLink \"Material/emissiveMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "emissiveMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 462,
            "description": "An opacity {{#crossLink \"Texture\"}}{{/crossLink}} attached to this Material.\n\nThis property overrides {{#crossLink \"Material/opacity:property\"}}{{/crossLink}} when not null or undefined.\n\nFires an {{#crossLink \"Material/opacityMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "opacityMap",
            "default": "null",
            "type": "{Texture}",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 478,
            "description": "Fired whenever this Material's {{#crossLink \"Material/opacityMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "opacityMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 490,
            "description": "A reflectivity {{#crossLink \"Texture\"}}{{/crossLink}} attached to this Material.\n\nThis property overrides {{#crossLink \"Material/reflectivity:property\"}}{{/crossLink}} when not null or undefined.\n\nFires a {{#crossLink \"Material/reflectivityMap:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflectivityMap",
            "default": "null",
            "type": "{Texture}",
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/material.js",
            "line": 506,
            "description": "Fired whenever this Material's {{#crossLink \"Material/reflectivityMap:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflectivityMap",
            "params": [
                {
                    "name": "value",
                    "description": "Number The property's new value"
                }
            ],
            "class": "Material",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 122,
            "description": "Whether this Modes enables picking of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nPicking is performed via calls to {{#crossLink \"Canvas/pick:method\"}}Canvas pick{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/picking:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "picking",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 139,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/picking:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "picking",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 152,
            "description": "Whether this Modes enables clipping of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nClipping is done by {{#crossLink \"Clips\"}}{{/crossLink}} that are also attached to\nthe {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/clipping:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "clipping",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 171,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/clipping:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "clipping",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 184,
            "description": "Whether attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are transparent.\n\nWhen true. this property will set attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} transparent (ie. to be rendered in a\ntransparency pass with blending enabled etc), while\nthe {{#crossLink \"Material/opacity:property\"}}{{/crossLink}} will be used to indicate the **degree** of their transparency\n(ie. where opacity of 0.0 indicates maximum translucency and opacity of 1.0 indicates minimum translucency).\n\nFires a {{#crossLink \"Modes/transparent:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "transparent",
            "default": "false",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 205,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/transparent:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "transparent",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 218,
            "description": "Whether this Modes enables backfaces to be visible on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThe backfaces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} compoents that are also attached to\nthe {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/backfaces:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "backfaces",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 237,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/backfaces:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "backfaces",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 250,
            "description": "Indicates the winding direction of front faces on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThe faces will belong to {{#crossLink \"Geometry\"}}{{/crossLink}} components that are also attached to\nthe {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/frontface:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "frontface",
            "default": "\"ccw\"",
            "type": "String",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 269,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/frontface:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "frontface",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 282,
            "description": "Whether this Modes enables lighting on the backfaces of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThe lights and geometry will be defined by {{#crossLink \"Lights\"}}{{/crossLink}} and {{#crossLink \"Geometry\"}}{{/crossLink}} components\nthat are also attached to the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/backfaceLighting:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "backfaceLighting",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 301,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/backfaceLighting:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "backfaceLighting",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 314,
            "description": "Whether this Modes enables textures to be applied to the backfaces of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThe textures and geometry will be defined by {{#crossLink \"Texture\"}}{{/crossLink}} and {{#crossLink \"Geometry\"}}{{/crossLink}} components\nthat are also attached to the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/backfaceTexturing:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "backfaceTexturing",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 333,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/backfaceTexturing:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "backfaceTexturing",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 346,
            "description": "Whether this Modes enables diffuse lighting of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nLighting will be defined by {{#crossLink \"Lights\"}}{{/crossLink}} and {{#crossLink \"Geometry\"}}{{/crossLink}} components\nthat are also attached to the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/diffuse:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuse",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 365,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuse",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 378,
            "description": "Whether this Modes enables specular lighting of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nLighting will be defined by {{#crossLink \"Lights\"}}{{/crossLink}} components that are also attached to\nthe {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/specular:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specular",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 397,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/specular:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specular",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 410,
            "description": "Whether this Modes enables ambient lighting of attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThe ambient lighting will be provided by {{#crossLink \"AmbientLight\"}}{{/crossLink}} components that are also\nattached to the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/ambient:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "ambient",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 429,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/ambient:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "ambient",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 442,
            "description": "Whether this Modes enables reflections on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThe reflections will be defined by {{#crossLink \"CubeMap\"}}{{/crossLink}} components that are also attached\nto the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Modes/reflection:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "reflection",
            "default": "true",
            "type": "Boolean",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 461,
            "description": "Fired whenever this Modes'' {{#crossLink \"Modes/reflection:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "reflection",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/modes.js",
            "line": 479,
            "description": "JSON representation of this component",
            "itemtype": "property",
            "name": "json",
            "type": "GameObject",
            "class": "Modes",
            "module": "XEO"
        },
        {
            "file": "src/core/morphTargets.js",
            "line": 46,
            "description": "The morph targets.\n\nTODO",
            "itemtype": "property",
            "name": "targets",
            "default": "[]",
            "type": "Array",
            "class": "MorphTargets",
            "module": "XEO"
        },
        {
            "file": "src/core/morphTargets.js",
            "line": 59,
            "description": "Fired whenever this MorphTarget's  {{#crossLink \"MorphTargets/targets:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "targets",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MorphTargets",
            "module": "XEO"
        },
        {
            "file": "src/core/morphTargets.js",
            "line": 71,
            "description": "The morph factor",
            "itemtype": "property",
            "name": "factor",
            "default": "0",
            "type": "Number",
            "class": "MorphTargets",
            "module": "XEO"
        },
        {
            "file": "src/core/morphTargets.js",
            "line": 82,
            "description": "Fired whenever this MorphTarget's  {{#crossLink \"MorphTargets/factor:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "factor",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MorphTargets",
            "module": "XEO"
        },
        {
            "file": "src/core/morphTargets.js",
            "line": 99,
            "description": "JSON representation of this component",
            "itemtype": "property",
            "name": "json",
            "type": "GameObject",
            "class": "MorphTargets",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 111,
            "description": "Position of the left plane on the View-space X-axis.\nFires a {{#crossLink \"Ortho/left:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "left",
            "default": "-1.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 126,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/left:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "left",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 139,
            "description": "Position of the right plane on the View-space X-axis.\nFires a {{#crossLink \"Ortho/right:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "right",
            "default": "1.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 154,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/right:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "right",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 167,
            "description": "Position of the top plane on the View-space Y-axis.\nFires a {{#crossLink \"Ortho/top:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "top",
            "default": "1.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 182,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/top:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "top",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 195,
            "description": "Position of the bottom plane on the View-space Y-axis.\nFires a {{#crossLink \"Ortho/bottom:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "bottom",
            "default": "-1.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 210,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/bottom:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "bottom",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 223,
            "description": "Position of the near plane on the positive View-space Z-axis.\nFires a {{#crossLink \"Ortho/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 238,
            "description": "Fired whenever this Ortho's  {{#crossLink \"Ortho/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 251,
            "description": "Position of the far plane on the positive View-space Z-axis.\nFires a {{#crossLink \"Ortho/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000.0",
            "type": "Number",
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/ortho.js",
            "line": 266,
            "description": "Fired whenever this Ortho's {{#crossLink \"Ortho/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Ortho",
            "module": "XEO"
        },
        {
            "file": "src/core/perspective.js",
            "line": 114,
            "description": "Field-of-view angle on Y-axis, in degrees.\nFires a {{#crossLink \"Perspective/fovy:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fovy",
            "default": "60.0",
            "type": "Number",
            "class": "Perspective",
            "module": "XEO"
        },
        {
            "file": "src/core/perspective.js",
            "line": 129,
            "description": "Fired whenever this Perspective's   {{#crossLink \"Perspective/fovy:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fovy",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "XEO"
        },
        {
            "file": "src/core/perspective.js",
            "line": 142,
            "description": "Aspect ratio of the perspective frustum. This is effectively the height of the frustum divided by the width.\nFires an {{#crossLink \"Perspective/aspect:property\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "aspect",
            "default": "60.0",
            "type": "Number",
            "class": "Perspective",
            "module": "XEO"
        },
        {
            "file": "src/core/perspective.js",
            "line": 157,
            "description": "Fired whenever this Perspective's   {{#crossLink \"Perspective/aspect:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "aspect",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "XEO"
        },
        {
            "file": "src/core/perspective.js",
            "line": 170,
            "description": "Position of the near plane on the positive View-space Z-axis.\nFires a {{#crossLink \"Perspective/near:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "near",
            "default": "0.1",
            "type": "Number",
            "class": "Perspective",
            "module": "XEO"
        },
        {
            "file": "src/core/perspective.js",
            "line": 185,
            "description": "Fired whenever this Perspective's   {{#crossLink \"Perspective/near:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "near",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "XEO"
        },
        {
            "file": "src/core/perspective.js",
            "line": 198,
            "description": "Position of the far plane on the positive View-space Z-axis.\nFires a {{#crossLink \"Perspective/far:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "far",
            "default": "10000.0",
            "type": "Number",
            "class": "Perspective",
            "module": "XEO"
        },
        {
            "file": "src/core/perspective.js",
            "line": 213,
            "description": "Fired whenever this Perspective's  {{#crossLink \"Perspective/far:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "far",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Perspective",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 125,
            "description": "The position of this PointLight.\n\nThis will be either World- or View-space, depending on the value of {{#crossLink \"PointLight/space:property\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"PointLight/pos:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pos",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 143,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/pos:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pos",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 156,
            "description": "The diffuse color of this PointLight.\n\nFires a {{#crossLink \"PointLight/diffuse:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "diffuse",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 172,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/diffuse:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "diffuse",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 185,
            "description": "The specular color of this PointLight.\n\nFires a {{#crossLink \"PointLight/specular:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "specular",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 201,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/specular:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "specular",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 214,
            "description": "The constant attenuation factor for this PointLight.\n\nFires a {{#crossLink \"PointLight/constantAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "constantAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 230,
            "description": "Fired whenever this PointLight's {{#crossLink \"PointLight/constantAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "constantAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 244,
            "description": "The linear attenuation factor for this PointLight.\n\nFires a {{#crossLink \"PointLight/linearAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "linearAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 260,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/linearAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "linearAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 274,
            "description": "The quadratic attenuation factor for this Pointlight.\n\nFires a {{#crossLink \"PointLight/quadraticAttenuation:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "quadraticAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 290,
            "description": "Fired whenever this PointLight's  {{#crossLink \"PointLight/quadraticAttenuation:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "quadraticAttenuation",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 304,
            "description": "Indicates which coordinate space this PointLight is in.\n\nSupported values are:\n\n<ul>\n<li>\"view\" - View space, aligned within the view volume as if fixed to the viewer's head</li>\n<li>\"world\" - World space, fixed within the world, moving within the view volume with respect to camera</li>\n</ul>\n\nFires a {{#crossLink \"PointLight/space:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/pointLight.js",
            "line": 330,
            "description": "Fired whenever this Pointlight's  {{#crossLink \"PointLight/space:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "space",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "PointLight",
            "module": "XEO"
        },
        {
            "file": "src/core/quaternion.js",
            "line": 110,
            "description": "The quaternion elements\nFires an {{#crossLink \"Quaternion/xyzw:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyzw",
            "default": "[0,0,0,1]",
            "type": "{Array of Number}",
            "class": "Quaternion",
            "module": "XEO"
        },
        {
            "file": "src/core/quaternion.js",
            "line": 123,
            "description": "Fired whenever this Quaternion's {{#crossLink \"Quaternion/xyzw:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyzw",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Quaternion",
            "module": "XEO"
        },
        {
            "file": "src/core/quaternion.js",
            "line": 138,
            "description": "Rotates this Quaternion.\nFires an {{#crossLink \"Quaternion/xyzw:event\"}}{{/crossLink}} event to notify of update to the Quaternion elements.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angleAxis",
                    "description": "Rotation in angle-axis form.",
                    "type": "Array of Number"
                }
            ],
            "class": "Quaternion",
            "module": "XEO"
        },
        {
            "file": "src/core/rotate.js",
            "line": 107,
            "description": "Vector indicating the axis of rotation.\nFires an {{#crossLink \"Rotate/xyz:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyz",
            "default": "[1,1,1]",
            "type": "{Array of Number}",
            "class": "Rotate",
            "module": "XEO"
        },
        {
            "file": "src/core/rotate.js",
            "line": 120,
            "description": "Fired whenever this Rotate's {{#crossLink \"Rotate/xyz:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyz",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Rotate",
            "module": "XEO"
        },
        {
            "file": "src/core/scale.js",
            "line": 107,
            "description": "Vector indicating a scale factor for each axis.\nFires an {{#crossLink \"Scale/xyz:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyz",
            "default": "[1,1,1]",
            "type": "{Array of Number}",
            "class": "Scale",
            "module": "XEO"
        },
        {
            "file": "src/core/scale.js",
            "line": 120,
            "description": "Fired whenever this Scale's {{#crossLink \"Scale/xyz:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyz",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Scale",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 210,
            "description": "Fired whenever a debug message logged on a component within this Scene.",
            "itemtype": "event",
            "name": "log",
            "params": [
                {
                    "name": "value",
                    "description": "The debug message",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 216,
            "description": "Fired whenever an error is logged on a component within this Scene.",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "value",
                    "description": "The error message",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 222,
            "description": "Fired whenever a warning is logged on a component within this Scene.",
            "itemtype": "event",
            "name": "warn",
            "params": [
                {
                    "name": "value",
                    "description": "The warning message",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 241,
            "description": "The {{#crossLink \"Component\"}}Component{{/crossLink}}s within this Scene, mapped to their IDs.",
            "itemtype": "property",
            "name": "components",
            "type": "{String:XEO.Component}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 250,
            "description": "Configurations for this Scene. Set whatever properties on here that will be\nuseful to the components within the Scene.",
            "final": 1,
            "itemtype": "property",
            "name": "configs",
            "type": "{Configs}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 259,
            "description": "Manages the HTML5 canvas for this Scene.",
            "final": 1,
            "itemtype": "property",
            "name": "canvas",
            "type": "{Canvas}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 280,
            "description": "Publishes input events that occur on this Scene's canvas.",
            "final": 1,
            "itemtype": "property",
            "name": "input",
            "type": "{Input}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 290,
            "description": "Tracks any asynchronous tasks that occur within this Scene.",
            "final": 1,
            "itemtype": "property",
            "name": "tasks",
            "type": "{Tasks}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 298,
            "description": "Tracks statistics within this Scene, such as numbers of textures, geometries etc.",
            "final": 1,
            "itemtype": "property",
            "name": "stats",
            "type": "{Stats}",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 390,
            "description": "Fired whenever a component within this Scene has been destroyed.",
            "itemtype": "event",
            "name": "componentDestroyed",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was destroyed",
                    "type": "Component"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 411,
            "description": "Fired whenever a component has been created within this Scene.",
            "itemtype": "event",
            "name": "componentCreated",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was created",
                    "type": "Component"
                }
            ],
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 421,
            "description": "The default projection transform provided by this Scene, which is a {{#crossLink \"Perspective\"}}Perspective{{/crossLink}}.\n\nThis {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} has an\n{{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.project\", with all other properties set to\ntheir default values.\n\n{{#crossLink \"Camera\"}}Cameras{{/crossLink}} within this Scene are attached to\nthis {{#crossLink \"Perspective\"}}Perspective{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "project",
            "final": 1,
            "type": "Perspective",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 444,
            "description": "The default viewing transform provided by this Scene, which is a {{#crossLink \"Lookat\"}}Lookat{{/crossLink}}.\n\nThis {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.view\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"Camera\"}}Cameras{{/crossLink}} within this Scene are attached to\nthis {{#crossLink \"Lookat\"}}Lookat{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "view",
            "final": 1,
            "type": "Lookat",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 466,
            "description": "The default {{#crossLink \"Camera\"}}Camera{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Camera\"}}Camera{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.camera\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} within this Scene are attached to\nthis {{#crossLink \"Camera\"}}Camera{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "camera",
            "final": 1,
            "type": "Camera",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 490,
            "description": "The default modelling transform provided by this Scene.\n\nThis {{#crossLink \"Transform\"}}Transform{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.transform\",\nwith all other properties initialised to their default values (ie. an identity matrix).\n\n{{#crossLink \"GameObjects\"}}GameObjects{{/crossLink}}s within this Scene are attached to\nthis {{#crossLink \"Transform\"}}Transform{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "transform",
            "final": 1,
            "type": "Transform",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 513,
            "description": "The default {{#crossLink \"Clips\"}}Clips{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Clips\"}}Clips{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.clips\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"Clips\"}}Clips{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "clips",
            "final": 1,
            "type": "Clips",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 535,
            "description": "The default {{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.colorBuf\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"ColorBuf\"}}ColorBuf{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "colorBuf",
            "final": 1,
            "type": "ColorBuf",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 557,
            "description": "The default {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.colorTarget\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "colorTarget",
            "final": 1,
            "type": "ColorTarget",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 578,
            "description": "The default {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.depthBuf\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"DepthBuf\"}}DepthBuf{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "depthBuf",
            "final": 1,
            "type": "DepthBuf",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 600,
            "description": "The default {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.depthTarget\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "depthTarget",
            "final": 1,
            "type": "DepthTarget",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 621,
            "description": "The default {{#crossLink \"Visibility\"}}Visibility{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Visibility\"}}Visibility{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.visibility\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"Visibility\"}}Visibility{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "visibility",
            "final": 1,
            "type": "Visibility",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 643,
            "description": "The default {{#crossLink \"Modes\"}}Modes{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Modes\"}}Modes{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.modes\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"Modes\"}}Modes{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "modes",
            "final": 1,
            "type": "Modes",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 664,
            "description": "The default {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} provided by this Scene, which is a 2x2x2 box centered at the World-space origin.\n\nThis {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.geometry\".\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this {{#crossLink \"Geometry\"}}Geometry{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "geometry",
            "final": 1,
            "type": "Geometry",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 683,
            "description": "The default {{#crossLink \"Layer\"}}Layer{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Layer\"}}Layer{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.layer\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"Layer\"}}Layer{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "layer",
            "final": 1,
            "type": "Layer",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 705,
            "description": "The default {{#crossLink \"Lights\"}}Lights{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Lights\"}}Lights{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to *````\"default.lights\"````*,\nwith all other properties initialised to their default values (ie. the default set of light sources for a {{#crossLink \"Lights\"}}Lights{{/crossLink}}).\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"Lights\"}}Lights{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "lights",
            "final": 1,
            "type": "Lights",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 754,
            "description": "The default {{#crossLink \"Material\"}}Material{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Material\"}}Material{{/crossLink}} has\nan {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.material\", with all\nother properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"Material\"}}Material{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "material",
            "final": 1,
            "type": "Material",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 776,
            "description": "The default {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.morphTargets\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"MorphTargets\"}}MorphTargets{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "morphTargets",
            "final": 1,
            "type": "MorphTargets",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 797,
            "description": "The default {{#crossLink \"Reflect\"}}Reflect{{/crossLink}} provided by this Scene,\n(which is a neutral {{#crossLink \"Reflect\"}}Reflect{{/crossLink}} that has no effect).\n\nThis {{#crossLink \"Reflect\"}}Reflect{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.reflect\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"Reflect\"}}Reflect{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "reflect",
            "final": 1,
            "type": "Reflect",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 819,
            "description": "The default {{#crossLink \"Shader\"}}Shader{{/crossLink}} provided by this Scene\n(which is a neutral {{#crossLink \"Shader\"}}Shader{{/crossLink}} that has no effect).\n\nThis {{#crossLink \"Shader\"}}Shader{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.shader\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"Shader\"}}Shader{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "shader",
            "final": 1,
            "type": "Shader",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 841,
            "description": "The default {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} has an {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.shaderParams\",\nwith all other properties initialised to their default values.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"ShaderParams\"}}Shader{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "shaderParams",
            "final": 1,
            "type": "ShaderParams",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 862,
            "description": "The default {{#crossLink \"Stage\"}}Stage{{/crossLink}} provided by this Scene.\n\nThis {{#crossLink \"Stage\"}}Stage{{/crossLink}} has\nan {{#crossLink \"Component/id:property\"}}id{{/crossLink}} equal to \"default.stage\" and\na {{#crossLink \"Stage/priority:property\"}}priority{{/crossLink}} equal to ````0````.\n\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} created within this Scene will get this\n{{#crossLink \"Stage\"}}Stage{{/crossLink}} by default.",
            "itemtype": "property",
            "name": "stage",
            "final": 1,
            "type": "Stage",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 885,
            "description": "Destroys all components in this Scene",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/scene.js",
            "line": 901,
            "description": "Compiles and renders this Scene",
            "access": "private",
            "tagname": "",
            "class": "Scene",
            "module": "XEO"
        },
        {
            "file": "src/core/shader.js",
            "line": 196,
            "description": "GLSL source code for the vertex stage of this shader.\n\nFires a {{#crossLink \"Shader/vertex:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "vertex",
            "default": "null",
            "type": "String",
            "class": "Shader",
            "module": "XEO"
        },
        {
            "file": "src/core/shader.js",
            "line": 211,
            "description": "Fired whenever this Shader's {{#crossLink \"Shader/vertex:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "vertex",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Shader",
            "module": "XEO"
        },
        {
            "file": "src/core/shader.js",
            "line": 224,
            "description": "GLSL source code for the fragment stage of this shader.\n\nFires a {{#crossLink \"Shader/fragment:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "fragment",
            "default": "null",
            "type": "String",
            "class": "Shader",
            "module": "XEO"
        },
        {
            "file": "src/core/shader.js",
            "line": 239,
            "description": "Fired whenever this Shader's {{#crossLink \"Shader/fragment:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "fragment",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Shader",
            "module": "XEO"
        },
        {
            "file": "src/core/shader.js",
            "line": 252,
            "description": "Params for this shader.\n\nFires a {{#crossLink \"Shader/params:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "params",
            "default": "{}",
            "type": "{}",
            "class": "Shader",
            "module": "XEO"
        },
        {
            "file": "src/core/shader.js",
            "line": 268,
            "description": "Sets one or more params for this Shader.\n\nThese will be individually overridden by any {{#crossLink \"ShaderParams/setParams:method\"}}params subsequently specified{{/crossLink}} on\n{{#crossLink \"ShaderParams\"}}ShaderParams{{/crossLink}} on attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Shader/params:event\"}}{{/crossLink}} event on change.",
            "itemtype": "method",
            "name": "setParams",
            "params": [
                {
                    "name": "params",
                    "description": "Values for params to set on this Shader, keyed to their names.",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "class": "Shader",
            "module": "XEO"
        },
        {
            "file": "src/core/shader.js",
            "line": 288,
            "description": "Fired whenever this Shader's  {{#crossLink \"Shader/params:property\"}}{{/crossLink}} property has been updated.",
            "itemtype": "event",
            "name": "params",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Shader",
            "module": "XEO"
        },
        {
            "file": "src/core/shaderParams.js",
            "line": 163,
            "description": "Params for {{#crossLink \"Shader\"}}Shaders{{/crossLink}} on attached\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nFires a {{#crossLink \"Shader/params:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "params",
            "default": "{}",
            "type": "{}",
            "class": "ShaderParams",
            "module": "XEO"
        },
        {
            "file": "src/core/shaderParams.js",
            "line": 180,
            "description": "Sets one or more params for {{#crossLink \"Shader\"}}Shaders{{/crossLink}} on attached\n{{#crossLink \"GameObject\"}}GameObjects{{/crossLink}}.\n\nThese will individually override any params of the same names that are {{#crossLink \"Shader/setParams:method\"}}already specified{{/crossLink}} on\nthose {{#crossLink \"Shader\"}}Shaders{{/crossLink}}.\n\nFires a {{#crossLink \"ShaderParams/params:event\"}}{{/crossLink}} event on change.",
            "itemtype": "method",
            "name": "setParams",
            "params": [
                {
                    "name": "params",
                    "description": "Values for params to set on the {{#crossLink \"Shader\"}}Shaders{{/crossLink}}, keyed to their names.",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "class": "ShaderParams",
            "module": "XEO"
        },
        {
            "file": "src/core/shaderParams.js",
            "line": 201,
            "description": "Fired whenever this ShaderParams' {{#crossLink \"ShaderParams/params:property\"}}{{/crossLink}} property has been updated.",
            "itemtype": "event",
            "name": "params",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ShaderParams",
            "module": "XEO"
        },
        {
            "file": "src/core/stage.js",
            "line": 110,
            "description": "Indicates the rendering priority for the {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} in this Stage.\n\nFires a {{#crossLink \"Stage/priority:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "priority",
            "default": "0",
            "type": "Number",
            "class": "Stage",
            "module": "XEO"
        },
        {
            "file": "src/core/stage.js",
            "line": 124,
            "description": "Fired whenever this Stage's {{#crossLink \"Stage/priority:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "priority",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Stage",
            "module": "XEO"
        },
        {
            "file": "src/core/stage.js",
            "line": 137,
            "description": "Indicates whether the attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are pickable (see {{#crossLink \"Canvas/pick:method\"}}Canvas#pick{{/crossLink}}).\n\nFires a {{#crossLink \"Stage/pickable:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "pickable",
            "default": "true",
            "type": "Boolean",
            "class": "Stage",
            "module": "XEO"
        },
        {
            "file": "src/core/stage.js",
            "line": 152,
            "description": "Fired whenever this Stage's {{#crossLink \"Stage/pickable:pickable\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "pickable",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Stage",
            "module": "XEO"
        },
        {
            "file": "src/core/stats.js",
            "line": 108,
            "description": "Increments the value of a statistic property.\n\nPublishes the new value as an event with the same name as the property.",
            "itemtype": "method",
            "name": "inc",
            "params": [
                {
                    "name": "name",
                    "description": "The statistic property name.",
                    "type": "String"
                }
            ],
            "class": "Stats",
            "module": "XEO"
        },
        {
            "file": "src/core/stats.js",
            "line": 120,
            "description": "Decrements the value of a statistic property.\n\nPublishes the new value as an event with the same name as the property.",
            "itemtype": "method",
            "name": "dec",
            "params": [
                {
                    "name": "name",
                    "description": "The statistic property name.",
                    "type": "String"
                }
            ],
            "class": "Stats",
            "module": "XEO"
        },
        {
            "file": "src/core/stats.js",
            "line": 132,
            "description": "Zeroes the value of a statistic property.\n\nPublishes the new value as an event with the same name as the property.",
            "itemtype": "method",
            "name": "zero",
            "params": [
                {
                    "name": "name",
                    "description": "The statistic property name.",
                    "type": "String"
                }
            ],
            "class": "Stats",
            "module": "XEO"
        },
        {
            "file": "src/core/task.js",
            "line": 27,
            "description": "Sets this task as successfully completed.\n\nFires a  {{#crossLink \"Task/completed:event\"}}{{/crossLink}} event on this task, as well as\na {{#crossLink \"Tasks/completed:event\"}}{{/crossLink}} event on the parent  {{#crossLink \"Tasks\"}}Task{{/crossLink}}.",
            "itemtype": "method",
            "name": "setCompleted",
            "class": "Task",
            "module": "XEO"
        },
        {
            "file": "src/core/task.js",
            "line": 37,
            "description": "Fired when this task has successfully completed.",
            "itemtype": "event",
            "name": "completed",
            "class": "Task",
            "module": "XEO"
        },
        {
            "file": "src/core/task.js",
            "line": 44,
            "description": "Sets this task as failed.\n\nFires a  {{#crossLink \"Task/failed:event\"}}{{/crossLink}} event on this task, as well as\na {{#crossLink \"Tasks/failed:event\"}}{{/crossLink}} event on the parent  {{#crossLink \"Tasks\"}}Tasks{{/crossLink}}.",
            "itemtype": "method",
            "name": "setFailed",
            "class": "Task",
            "module": "XEO"
        },
        {
            "file": "src/core/task.js",
            "line": 54,
            "description": "Fired when this task has failed",
            "itemtype": "event",
            "name": "failed",
            "class": "Task",
            "module": "XEO"
        },
        {
            "file": "src/core/tasks.js",
            "line": 93,
            "description": "Creates and starts a new {{#crossLink \"Task\"}}Task{{/crossLink}} instance with this Tasks.\n\nIf an ID is given for the new {{#crossLink \"Task\"}}Task{{/crossLink}} that is already in use for\nanother, will log an error message and return null.\n\nOn success, fires a {{#crossLink \"Tasks/started:event\"}}{{/crossLink}} event and returns the new {{#crossLink \"Task\"}}Task{{/crossLink}}\n instance.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "params",
                    "description": "Task params.",
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional unique ID,\ninternally generated if not supplied.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "description",
                            "description": "Optional description.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The new new {{#crossLink \"Task\"}}Task{{/crossLink}} instance, or null if there was an ID\nclash with an existing {{#crossLink \"Task\"}}Task{{/crossLink}}.",
                "type": "Task|null"
            },
            "class": "Tasks",
            "module": "XEO"
        },
        {
            "file": "src/core/tasks.js",
            "line": 126,
            "description": "Fired whenever a task has successfully completed.",
            "itemtype": "event",
            "name": "completed",
            "params": [
                {
                    "name": "value",
                    "description": "The task that has completed",
                    "type": "Task"
                }
            ],
            "class": "Tasks",
            "module": "XEO"
        },
        {
            "file": "src/core/tasks.js",
            "line": 138,
            "description": "Fired whenever a task has failed",
            "itemtype": "event",
            "name": "failed",
            "params": [
                {
                    "name": "value",
                    "description": "The task that has failed",
                    "type": "Task"
                }
            ],
            "class": "Tasks",
            "module": "XEO"
        },
        {
            "file": "src/core/tasks.js",
            "line": 150,
            "description": "Fired whenever a task has started",
            "itemtype": "event",
            "name": "started",
            "params": [
                {
                    "name": "value",
                    "description": "The task that has started",
                    "type": "Task"
                }
            ],
            "class": "Tasks",
            "module": "XEO"
        },
        {
            "file": "src/core/tasks.js",
            "line": 160,
            "description": "Completes the {{#crossLink \"Task\"}}Task{{/crossLink}} with the given ID.\n\nFires a {{#crossLink \"Tasks/completed:event\"}}{{/crossLink}} event, as well as separate\n{{#crossLink \"Task/completed:event\"}}{{/crossLink}} event on the {{#crossLink \"Task\"}}Task{{/crossLink}} itself.\n\nLogs an error message if no task can be found for the given ID.",
            "itemtype": "method",
            "name": "setCompleted",
            "params": [
                {
                    "name": "id",
                    "description": "ID of the {{#crossLink \"Task\"}}Task{{/crossLink}} to complete.",
                    "type": "String"
                }
            ],
            "class": "Tasks",
            "module": "XEO"
        },
        {
            "file": "src/core/tasks.js",
            "line": 180,
            "description": "Fails the {{#crossLink \"Task\"}}Task{{/crossLink}} with the given ID.\n\nFires a {{#crossLink \"Tasks/failed:event\"}}{{/crossLink}} event, as well as separate\n{{#crossLink \"Task/failed:event\"}}{{/crossLink}} event on the {{#crossLink \"Task\"}}Task{{/crossLink}} itself.\n\nLogs an error message if no task can be found for the given ID.",
            "itemtype": "method",
            "name": "setFailed",
            "params": [
                {
                    "name": "id",
                    "description": "ID of the {{#crossLink \"Task\"}}Task{{/crossLink}} to fail.",
                    "type": "String"
                }
            ],
            "class": "Tasks",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 216,
            "description": "Path to an image file to source this texture from.\n\nSets the {{#crossLink \"Texture/target:property\"}}{{/crossLink}} and\n{{#crossLink \"Texture/image:property\"}}{{/crossLink}} properties to null.\n\nFires a {{#crossLink \"Texture/src:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "src",
            "default": "null",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 240,
            "description": "Fired whenever this Texture's {{#crossLink \"Texture/src:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "src",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 254,
            "description": "Instance or ID of a {{#crossLink \"ColorTarget\"}}ColorTarget{{/crossLink}} or\n{{#crossLink \"DepthTarget\"}}DepthTarget{{/crossLink}} to source this texture from.\n\nSets the {{#crossLink \"Texture/src:property\"}}{{/crossLink}} and\n{{#crossLink \"Texture/image:property\"}}{{/crossLink}} properties to null.\n\nFires a {{#crossLink \"Texture/target:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "target",
            "default": "null",
            "type": "String | XEO.ColorTarget | XEO.DepthTarget",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 277,
            "description": "Fired whenever this Texture's   {{#crossLink \"Texture/target:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "target",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "type": "String | XEO.ColorTarget | XEO.DepthTarget",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 291,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/translate:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "translate",
            "default": "[0, 0, 0]",
            "type": "Array(Number)",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 307,
            "description": "Fired whenever this Texture's   {{#crossLink \"Texture/translate:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "translate",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 320,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/scale:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "scale",
            "default": "[0, 0, 0]",
            "type": "Array(Number)",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 337,
            "description": "Fired whenever this Texture's   {{#crossLink \"Texture/scale:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "scale",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array(Number)"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 350,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/rotate:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "rotate",
            "default": "0",
            "type": "Number",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 367,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/rotate:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "rotate",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 380,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/minFilter:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "minFilter",
            "default": "\"linearMipMapNearest\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 395,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/minFilter:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "minFilter",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 408,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/magFilter:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "magFilter",
            "default": "\"linear\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 425,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/magFilter:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "magFilter",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 438,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/wrapS:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "wrapS",
            "default": "\"repeat\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 455,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/wrapS:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "wrapS",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 468,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/wrapT:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "wrapT",
            "default": "\"repeat\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 485,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/wrapT:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "wrapT",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 498,
            "description": "TODO\n\nFires an {{#crossLink \"Texture/isDepth:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "isDepth",
            "default": "false",
            "type": "Boolean",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 515,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/isDepth:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "isDepth",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 528,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/depthMode:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "depthMode",
            "default": "\"luminance\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 545,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/depthMode:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "depthMode",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 558,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/depthMode:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "depthCompareMode",
            "default": "\"compareRToTexture\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 575,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/depthCompareMode:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "depthCompareMode",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 588,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/depthCompareFunc:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "depthCompareFunc",
            "default": "\"lequal\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 605,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/depthCompareFunc:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "depthCompareFunc",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 618,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/flipY:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "flipY",
            "default": "false",
            "type": "Boolean",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 635,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/flipY:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "flipY",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 648,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/width:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "width",
            "default": "false",
            "type": "Number",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 665,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/width:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "width",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 678,
            "description": "TODO\n\nFires a {{#crossLink \"Texture/height:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "height",
            "default": "false",
            "type": "Number",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 695,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/height:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "height",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Number"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 708,
            "description": "TODO\n\nFires an {{#crossLink \"Texture/internalFormat:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "internalFormat",
            "default": "\"alpha\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 725,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/internalFormat:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "internalFormat",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 738,
            "description": "TODO\n\nFires an {{#crossLink \"Texture/sourceFormat:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sourceFormat",
            "default": "\"alpha\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 755,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/sourceFormat:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sourceFormat",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 768,
            "description": "TODO\n\nFires an {{#crossLink \"Texture/sourceType:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "sourceType",
            "default": "\"unsignedByte\"",
            "type": "String",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 785,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/sourceType:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "sourceType",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "String"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 798,
            "description": "TODO\n\nFires an {{#crossLink \"Texture/image:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "image",
            "default": "null",
            "type": "{HTML Image}",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 811,
            "description": "Fired whenever this Texture's  {{#crossLink \"Texture/image:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "image",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "HTML Image"
                }
            ],
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 825,
            "description": "Rebuilds the texture transform matrix",
            "access": "private",
            "tagname": "",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/texture.js",
            "line": 854,
            "description": "Initialises texture using image loaded from given URL",
            "params": [
                {
                    "name": "src",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Texture",
            "module": "XEO"
        },
        {
            "file": "src/core/transform.js",
            "line": 48,
            "description": "The parent Transform.\n\nFires a {{#crossLink \"Transform/parent:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "parent",
            "type": "Transform",
            "class": "Transform",
            "module": "XEO"
        },
        {
            "file": "src/core/transform.js",
            "line": 62,
            "description": "Fired whenever this Transform's {{#crossLink \"Transform/parent:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "parent",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Transform",
            "module": "XEO"
        },
        {
            "file": "src/core/transform.js",
            "line": 75,
            "description": "The elements of this Transform's matrix.\n\nFires an {{#crossLink \"Transform/matrix:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "matrix",
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Array of Number}",
            "class": "Transform",
            "module": "XEO"
        },
        {
            "file": "src/core/transform.js",
            "line": 92,
            "description": "Fired whenever this Transform's {{#crossLink \"Transform/matrix:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "matrix",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Transform",
            "module": "XEO"
        },
        {
            "file": "src/core/translate.js",
            "line": 117,
            "description": "Vector indicating a translation amount for each axis.\nFires an {{#crossLink \"Translate/xyz:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "xyz",
            "default": "[0,0,0]",
            "type": "{Array of Number}",
            "class": "Translate",
            "module": "XEO"
        },
        {
            "file": "src/core/translate.js",
            "line": 130,
            "description": "Fired whenever this Translate's {{#crossLink \"Translate/xyz:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "xyz",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Array of Number"
                }
            ],
            "class": "Translate",
            "module": "XEO"
        },
        {
            "file": "src/core/visibility.js",
            "line": 79,
            "description": "Indicates whether attached {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} are visible or not.\n\nFires a {{#crossLink \"Visibility/visible:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "visible",
            "default": "true",
            "type": "Boolean",
            "class": "Visibility",
            "module": "XEO"
        },
        {
            "file": "src/core/visibility.js",
            "line": 95,
            "description": "Fired whenever this Visibility's  {{#crossLink \"Visibility/visible:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value",
                    "type": "Boolean"
                }
            ],
            "class": "Visibility",
            "module": "XEO"
        },
        {
            "file": "src/core/xeo.js",
            "line": 17,
            "description": "Existing  {{#crossLink \"Scene\"}}Scene{{/crossLink}}s , mapped to their IDs",
            "itemtype": "property",
            "name": "scenes",
            "type": "{{String:XEO.Scene}}",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/core/xeo.js",
            "line": 62,
            "description": "The default {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\nComponents created without an explicit parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} will be created within this\n{{#crossLink \"Scene\"}}Scene{{/crossLink}} by default.\n\nxeoEngine creates the default {{#crossLink \"Scene\"}}Scene{{/crossLink}} as soon as you either\nreference this property for the first time, or create your first {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} without\na specified {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "property",
            "name": "scene",
            "final": 1,
            "type": "Scene",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/core/xeo.js",
            "line": 81,
            "description": "Registers a scene on xeoEngine",
            "itemtype": "method",
            "name": "_addScene",
            "params": [
                {
                    "name": "scene",
                    "description": "The scene",
                    "type": "Scene"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/core/xeo.js",
            "line": 107,
            "description": "Destroys all scenes",
            "itemtype": "method",
            "name": "clear",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/core/xeo.js",
            "line": 121,
            "description": "Tests if the given object is an array",
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/core/xeo.js",
            "line": 129,
            "description": "Tests if the given value is a string",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/core/xeo.js",
            "line": 139,
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/core/xeo.js",
            "line": 145,
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        },
        {
            "file": "src/core/xeo.js",
            "line": 156,
            "description": "Add properties of o to o2 where undefined or null on o2",
            "access": "private",
            "tagname": "",
            "class": "XEO",
            "module": "XEO",
            "namespace": "XEO"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/core/math/math.js:70"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/core/tasks.js:93"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/core/xeo.js:129"
        },
        {
            "message": "Missing item type\nFloating-point modulus",
            "line": " src/core/math/math.js:70"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:383"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:400"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:417"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:436"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:470"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:489"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:494"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:499"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:504"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:509"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:514"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:519"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:524"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:529"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:539"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:550"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:562"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:567"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:572"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:581"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:591"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:596"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:601"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:611"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:616"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:621"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:626"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:637"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:666"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:696"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:726"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:731"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:761"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:791"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:821"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:864"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:894"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:910"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:957"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:972"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1023"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1028"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1037"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1042"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1047"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1095"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1100"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1109"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1114"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1119"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1212"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1217"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1249"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1285"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1313"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1330"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1342"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1373"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1393"
        },
        {
            "message": "Missing item type\nGeneric map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "line": " src/core/utils/map.js:7"
        },
        {
            "message": "Missing item type\nAdds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "line": " src/core/utils/map.js:21"
        },
        {
            "message": "Missing item type\nRemoves the item of the given ID from the map and returns it",
            "line": " src/core/utils/map.js:53"
        },
        {
            "message": "Missing item type",
            "line": " src/core/webgl/arrayBuffer.js:5"
        },
        {
            "message": "Missing item type\nTrue when this buffer is allocated and ready to go",
            "line": " src/core/webgl/arrayBuffer.js:16"
        },
        {
            "message": "Missing item type\nAllocates this buffer",
            "line": " src/core/webgl/arrayBuffer.js:31"
        },
        {
            "message": "Missing item type\nUpdates values within this buffer, reallocating if needed",
            "line": " src/core/webgl/arrayBuffer.js:54"
        },
        {
            "message": "Missing item type\nUnbinds this buffer on WebGL",
            "line": " src/core/webgl/arrayBuffer.js:78"
        },
        {
            "message": "Missing item type\nDestroys this buffer",
            "line": " src/core/webgl/arrayBuffer.js:88"
        },
        {
            "message": "Missing item type",
            "line": " src/core/webgl/attribute.js:5"
        },
        {
            "message": "Missing item type\nWrapper for a WebGL program",
            "line": " src/core/webgl/program.js:5"
        },
        {
            "message": "Missing item type\nTrue as soon as this program is allocated and ready to go",
            "line": " src/core/webgl/program.js:14"
        },
        {
            "message": "Missing item type\nTrue as soon as this buffer is allocated and ready to go",
            "line": " src/core/webgl/renderBuffer.js:7"
        },
        {
            "message": "Missing item type\nThe canvas, to synch buffer size with when its dimensions change",
            "line": " src/core/webgl/renderBuffer.js:12"
        },
        {
            "message": "Missing item type\nWebGL context",
            "line": " src/core/webgl/renderBuffer.js:17"
        },
        {
            "message": "Missing item type\nBuffer resources, set up in #_touch",
            "line": " src/core/webgl/renderBuffer.js:22"
        },
        {
            "message": "Missing item type\nTrue while this buffer is bound",
            "line": " src/core/webgl/renderBuffer.js:27"
        },
        {
            "message": "Missing item type\nCalled after WebGL context is restored.",
            "line": " src/core/webgl/renderBuffer.js:34"
        },
        {
            "message": "Missing item type\nBinds this buffer",
            "line": " src/core/webgl/renderBuffer.js:44"
        },
        {
            "message": "Missing item type\nClears this renderbuffer",
            "line": " src/core/webgl/renderBuffer.js:134"
        },
        {
            "message": "Missing item type\nReads buffer pixel at given coordinates",
            "line": " src/core/webgl/renderBuffer.js:145"
        },
        {
            "message": "Missing item type\nUnbinds this renderbuffer",
            "line": " src/core/webgl/renderBuffer.js:156"
        },
        {
            "message": "Missing item type",
            "line": " src/core/webgl/renderBuffer.js:164"
        },
        {
            "message": "Missing item type",
            "line": " src/core/webgl/renderBuffer.js:186"
        },
        {
            "message": "Missing item type\nA vertex/fragment shader in a program",
            "line": " src/core/webgl/shader.js:5"
        },
        {
            "message": "Missing item type\nTrue as soon as this shader is allocated and ready to go",
            "line": " src/core/webgl/shader.js:14"
        },
        {
            "message": "Missing item type\nTrue as soon as this texture is allocated and ready to go",
            "line": " src/core/webgl/texture2d.js:7"
        },
        {
            "message": "Missing item type",
            "line": " src/core/webgl/webgl.js:7"
        },
        {
            "message": "Missing item type",
            "line": " src/core/boundary.js:6"
        },
        {
            "message": "Missing item type\nNames of recognised WebGL contexts",
            "line": " src/core/canvas.js:95"
        },
        {
            "message": "Missing item type\nAttributes for the WebGL context",
            "line": " src/core/canvas.js:126"
        },
        {
            "message": "Missing item type\nCreates a canvas",
            "line": " src/core/canvas.js:264"
        },
        {
            "message": "Missing item type\nInitialises the WebGL context",
            "line": " src/core/canvas.js:286"
        },
        {
            "message": "Missing item type\nInitializes this component",
            "line": " src/core/component.js:336"
        },
        {
            "message": "Missing item type\nAdds a child component to this.\nWhen component not given, attaches the scene's default instance for the given type.\nPublishes the new child component on this component, keyed to the given type.",
            "line": " src/core/component.js:487"
        },
        {
            "message": "Missing item type\nLookup GL depth function enums",
            "line": " src/core/depthBuf.js:145"
        },
        {
            "message": "Missing item type\nthis Frustum's          * @event right\n* @param value The property's new value",
            "line": " src/core/frustum.js:168"
        },
        {
            "message": "Missing item type",
            "line": " src/core/geometry.js:496"
        },
        {
            "message": "Missing item type\nBuilds vertex tangent vectors from positions, UVs and indices\n\nBased on code by @rollokb, in his fork of webgl-obj-loader:\nhttps://github.com/rollokb/webgl-obj-loader",
            "line": " src/core/geometry.js:556"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input.js:94"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input.js:100"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input.js:106"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input.js:112"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input.js:118"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input.js:124"
        },
        {
            "message": "Missing item type\nEnable or disable all input handlers",
            "line": " src/core/input.js:352"
        },
        {
            "message": "Missing item type\nDestroys all components in this Scene",
            "line": " src/core/scene.js:885"
        },
        {
            "message": "Missing item type\nCompiles and renders this Scene",
            "line": " src/core/scene.js:901"
        },
        {
            "message": "Missing item type\nRebuilds the texture transform matrix",
            "line": " src/core/texture.js:825"
        },
        {
            "message": "Missing item type\nInitialises texture using image loaded from given URL",
            "line": " src/core/texture.js:854"
        },
        {
            "message": "Missing item type\nTests if the given object is an array",
            "line": " src/core/xeo.js:121"
        },
        {
            "message": "Missing item type\nTests if the given value is a string",
            "line": " src/core/xeo.js:129"
        },
        {
            "message": "Missing item type",
            "line": " src/core/xeo.js:139"
        },
        {
            "message": "Missing item type",
            "line": " src/core/xeo.js:145"
        },
        {
            "message": "Missing item type\nAdd properties of o to o2 where undefined or null on o2",
            "line": " src/core/xeo.js:156"
        }
    ]
}